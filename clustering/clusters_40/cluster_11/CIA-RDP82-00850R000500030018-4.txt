FOR OFFICIAL USE ONLY

JPRS L/10309
8 February 1982

USSR Report

CYBERNETICS, COMPUTERS AND
AUTOMATION TECHNOLOGY

(FOUO 2/82)

FOREIGN BROADCAST INFORMATION SERVICE

FOR OFFICIAL USE ONLY
nor:

JPRS publications contain information primarily from foreign
newspapers, periodicals and books, but also from news agency
transmissions and broadcasts. Materials from foreign-language
sources are translated; those from English-language sources
are transcribed or reprinted, with the original phrasing and
other characteristics retained.

headlines, editorial reports, and material enclosed in brackets
[] are supplied by JPRS. Processing indicators such as [Text]
or [Excerpt] in the first line of each item, or following the
last line of a brief, indicate how the original information was
processed. where no processing indicator is given, the infor-
mation was summarized or extracted.

Unfamiliar names rendered phonetically or transliterated are
enclosed in parentheses. words or names preceded by a ques-
tion mark and enclosed in parentheses were not clear in the
original but have been supplied as appropriate in context.
Other unattributed parenthetical notes within the body of an
item originate with the source. Times within items are as
given by source.

The contents of this publication in no way represent the poli-
cies, views or attitudes of the 0.3. Government.

COPYRIGHT LAWS AND REGULATIONS GOVERNING OWNERSHIP OF
MATERIALS REPRODUCED HEREIN REQUIRE THAT DISSEHINATION
OF THIS PUBLICATION 3! RESTRICTED FOR OFFICIAL USE ONLY.
USSR REPORT

CYBERNETICS, Conpurens AND AUTOMATION TECMNOLOGY
(9000 2/82)

CONTENTS
GENERAL
Variation of Feeding Video Information to Yes Computers........... 1

Synthesis of Parallel Microprogramming Structures................. 5

Verification of Model Configurations for Pulsed Radio
Engineering Systems............................................. 8

Efficient Servicing of Computer Equipment Reviewed................ 10

Problems of Automated Control Systems for Industrial Processes

Reviewedsosoleoooosooeeoeseoeooooostooooooootoooooeeoesooessense 18

HYBRID COMPUTERS

Hybrid Computing Machines and Systems: Local Automated
Control Systems and Computer Devices............................ 28

Algorithm for Analyzing Patching Scheme of Operational Modules
Used To Simulate Automatic Programming Systems for Analog....... 37

Methods for Organizing Diagnosis of Special-Purpose Processors
and Devices..................................................... 63

Synthesis of Optimal Digital-Analog Regulator for Controlling
Thermal Object.................................................. 50

OPTICAL PROCESSING

Holography and Optical Processing of Information: Methods
and Apparatus................................................... 57

- a - [III - USSR - 21C SST 3000]

FOR nmnu HQ? ONLY
FOR OFFICIAL USE ONLY 1

Recording and Processing of Modulated Optical Signals............. 60

Holographic Visualization of Underground Objects.................. 65

Processing Seismic Information with Coherent Optical System....... 69

Holographic Method of Checking Reflectors......................... 76

Beam Holography................................................... 76
SOPTHARE

Abstracts of Articles in Journal 'PROGRAMMING', September-
October19810'CU-ooooonasaaaasaoso.ooasoeaaaoasaes0000000900.... 79

Software Implementation of Mnltiprocessing........................ 82
Implementation of 'FOREKS' Compiler for AS-6 Central Processor.... 90

System of Dialogue Preparation of Tasks for Unified Series
Computers....................................................... 102

Organization in Dispak Operating System of Determinate Output

of Information Over Entire Field of Output Units of
Multimachine Computing Complex.................................. 110

PUBLICAIIONS
Control Algorithms for Spacecraft................................. 116
Machine Mathematical Modeling............................~........ 127

Automation of Exploratory Design (Artificial Intelligence in
Machine main)...’0..Q...I0.0..CO...000......OIODOOOOOOOOIOIIIO 138

Data Processing Equipment......................................... 1‘6

Homogeneous Computer Systems, Structures and Devices.............. 157

- b -

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

GENERAL

UDC 621.391
VARIATION OF FEEDING VIDEO INFORMATION TO YES COMPUTERS
Kiev AVTOHATIKA in Russian No 5, Sep-Oct 81 (manuscript received 19 Mar 81) pp 76-78
[Article by V. Ye. Reutskiy]

[Text] There are many problems involving processing video information in vari-
ous fields of science and technology. The growing volume of this information
and the heightened requirements for precision and speed of solutions led to
intensive development of means and methods of automating the processing of
video information. Digital pvocessing methods using general-purpose computers
and specialized processors play the leading role in this. This leads to the
necessity of developing new input units, on the one hand, and a desire to use
input units already included in the computer equipment on the other.

Feeding video information to computers requires a unit to match the information
and physical characteristics of the television camera signals and the signals
used in the input/output interface of the particular computer. In this case
equipment expenditures to realize the block to match the characteristics of

the signals of the input/output interface of the Yes [Unified System] computer
are several times as much as expenditures to realize the matching unit for the
characteristics of television camera signals.

For this reason there will unquestionably be interest in an experiment con-
ducted with a simple hardware connection of an industrial television camera to
a Yes computer through a low-power input unit with minimum expenditure of time
and resources.

The variation of feeding video information that was developed consists of a
television camera. a matching element, and a Yes-6022 unit (the standard
punched tape data input unit for Yes computers) in which the photoreader is
switched off.

A VZOR television camera was used to convert visual information into an elec—
trical analog signal. This is a small semiconductor camera with a power supply
of 12 volts (in principle any standard television camera can be used). For
complete autonomy the camera also has a synchronous generator (consisting of

a synchronous pulse generator, a frequency divider, and control signal shapers)
which controls the work of the television camera, analog/digital convertor,

and control block.

INJR OFIWCIAI.IISE2(H§LY
FOR OFFICIAL USE ONLY

The frequency of the master clock (generator) was selected at around 936
kilohertz on the basis of preliminary tests of the multiplex channel of a
Yes computer to which was connected a Yes—6022 unit with a single~field data
input speed on the order of 260-280 kilobytes. Based on the real speed and
necessity of receiving from one generator synchronous pulses to control the
television camera and strobing pulses for the analog/digital converter and
control block. The possibility of completely filling the byte being trans-
mitted to the Yes computer was employed to increase the speed of data input.
A four—gradation system of defining the brightness of each point in the video
information was adopted for this purpose. and the bit format of the analog/
digital convertor was defined in two ranks. After the information from four
points is packed in one byte, the data input speed is 236 kilobytes.

The precision requirements for the analog/digital convertor are fairly low

(four gradations with a television camera signal on the order of 0.5 volts).

but the speed requirement is quite important. Therefore, a double-rank
(simplified) variation of a high-speed analog/digital convertor was used.

This will make it possible in the future to increase the speed to 8-10 mega-
hertz because it is determined chiefly by the operating speed of the comparators
used in the convertor.

The television camera and analog/digital convertor work asynchronously with the
computer, but information is transmitted only when the signal of the computer
processor which authorizes transmission of information from the Yes-6022 coin-
cides with the beginning of transmission of a frame by the television camera.

After the frame is transmitted the Yes-6022 unit goes into a waiting mode and
the next frame is fed following a program request by the computer processor.

The entire television camera signal matching block, the synchronous generator,
, and the signal shapers are housed in a standard Yes TEZ [card]

which is installed in the Yes-6022. when the television camera is connected
in, it is necessary to remove the input/output signal shapers of the photo-
reader (TEZ 0071. place 5A43 and TEZ 0072, place saaa) from the unit and in-
sert the newly developed TBZ in place 5A63. The necessary connection between
place 5A63 and the free terminals is installed, which does not hinder work of
the Yes—6022 with the photoreader.

According to the system adopted of classifying brightness by four levels, the
frequency of the master clock is four times the frequency of data transmission
to the computer, and the synchronous generator issues control signals that are
rigidly interrelated by multiples: strobe l - strobing signal of the compara-
tors of the analog/digital convertor - 936 kiIOhertz; strobe 2 - atrohing
signal of the assembly for packaging in a byte - 936 kilohertz; strobe 3 -
signal for transmission of a byte of information to the Yes-6022 - 235 kilo—
hertz; synchronous signal of the line frequency for the television camera -
l6.625 hertz; synchronous signal of the frame frequency for the television
camera - 50 hertz.

The figure below shows the time scheme of the work of the synchronous gener-

ator. It is built with integrated microcircuits and housed on the same board
with the other elements of the matching T82.

Ft”!(ﬂﬁﬂ€]Al.USE(NULY
FOR OFFICIAL USE ONLY

(Strobe 19"
(Strobe zzngﬁg

(Strobe 3) M)

 

Time Diagram of the Work of the Hatching Unit

Key: (a) Launch Signal from Yes-6022;
(b) Authorization To Transmit Information;
(c) 3 Hicroseconds:
(d) l Hilliseconds ["HC" - Hillisscond].

Because the computer and the television camera Inrk asynchronously, an additional
element was put in the control scheme to authorize transmission of data from the
television camera. It authorizes transmission only from the initial moment of
image scanning by the television camera. The and of the transmission of a frame
is determined by program means (by the number of transmitted bytes of the array
of data).

As noted above, the speed of information input is limited by the actual speed of
the uric being used and the channel of the Yes computer. Therefore, with the
above-indicated frequency of data transmission to the Yes computer (234 kilo-
bytes), the analog/digital computer strobes and converts to digital form 60 four-
gradation points or (after packaging) 15 bytes of information per one televi-
sion line where the total number of lines in a frame is 313. Thus, one tele-
visionframecontains 4,695 bytes or 18,784-gradation points in digital form.

With a standard line length of 66 microseconds the distance between adjacent
strobing points is about 1 microsecond in time. Therefore, all points that
occupy less than 1 microsecond during line strohing may be lost. This must be
taken into accountvhen feeding data from the television camera.

The image fed to the computer may be printed out by program means for convenient
observation and checking, although this does involve difficulties with observing

FIIICMﬂﬂCJA1.lEHE(MﬂUY
FOR OFFICIAL USE ONLY

the television format during output. In the particular case every fourth line
of the television frame was outputted to a digital printer; in this case 78
lines with 60 points to a line were printed out and separated by sup; to ap-
proxiute the television format.

COPYRIGHT: lzdotel'stvo "Naukova dunkn", "Avtonntikn", 1981

11, 176
C80: 1863/68

m OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 681.322.01
SYNTHESIS 0? PARALLEL MICROPROGWG STRUCTURES

Kiev KIBBRNETIKA in Russian No 5, Sep-Oct 81
(manuscript received 23 Aug 77) pp 68-56

[Article by Ol'ga Leonidovna Sandman, Sergey Vladimirovich Piskunov and
Stanislav Nikolayevich Sergeyev]

[Excerpts] The organization of effective computations in uniform structures
[1-3] is connected with providing structural and functional correspondence
between the algorithm and its performing unit. This correspondence is usually
achieved by means of a selection of cell functions and their connections and
constitutes a problem in synthesizing uniform structures. The solution of such
a problem for a class of devices with a multiple flow of commands and a multiple
flow of data is proposed in the article. The suggested synthesis method is
based on a microprogrmmaed presentation of algorithms which allows interpreta-
tion to the network fron automatic units. The microprograsming concept, expanded
for organization of the computational process in large groups of low-power
computers, is called parallel microprogramming.

A cellular mass. which is a terminal combination of named cells into which
symbols are inserted from some terminal alphabet of conditions, serves as the
conversion objective in parallel microprogrsmming. A substitution micro-
coammmd having a left and a right component is the primary conversion of the
cellular mass. Execution of the microcommand is conducted simultaneously over
all cells of the mass. A mass of cells is computed for each cell in accordance
with the left component of the microcommand. If the obtained mass is included
in the processed cellular mass, some of its component is replaced by the
cellular mass corresponding to the right component.

The combination of microcoalmnds recorded in random order is called micro-
programming. All microprogramming :icrocommands are executed simultaneously
over all cells of the mass. Hicroprogramming construction is based on
algorithms of parallel substitutions [4, 5] which are based on the concepts
of a cellular automatic unit [6] and of a normal algorithm [7].

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Any methods of synthesis can be used for obtaining a logical structure of the
network's primary automatic unit. For example, each primary automatic unit
becomes microprogrammed, containing within itself the entire microprogran. A
block diagram of the primary automatic unit is depicted in illustration 5.a.
Equipment performance is possible when using special microprogrammed large
integrated circuits (BIS), constant memory units (P20). associated memory units
(20) and programmed logic matrices. Replacing the microprogram provides the
possibility of adjusting the network to that or another algorithm. Networks

of this type are called microprogrammed cellular structures. It is obvious that
the parallel microprograms performed in them are limited by the memory capacity
of the primary automatic units, and therefore such an approach is acceptable
for performing small (according to the number of microcommands) algorithms.

The second approach consisting of a microprogram memory which is repeated in
each automatic unit is carried out within the limits of the network (illustra-
tion S.b.). The remaining network is called the data memory. The primary
automatic units in it are simple enough: they contain a memory for storing the
alphabet symbols, a comparison unit and a multiplexer [A]. the microcommands
can be fed into the data memory with a different degree of parallel in time:

all simultaneously, successively by microcommands and even successively by

symbols. However, a marginal parallel in space takes place in all cases.
Performances of this category are called homogeneous computers [6].

It is obvious that computers with limited parallel both in time and in space
have the greatest output. A structure is proposed in reference 12 in which
during performance of the primary automatic units, a combination of frequent
and spatial coding of microcomand symbols and the use of the construction
principles of multi-stable elements provide a simultaneous feeding of hundreds
of microcommands to each automatic unit fo the data memory. At the same time,
homogeneous computers with a consistent delivery of microcommands to the data
memory show great practical interest, inasmuch as their perfornance is possible
from existing microprocessing sets [13].

Two approaches can be used in composing algorithms for equipment interpretation.
In the first case, a control unit is proposed which stores the microprogram P.
and delivers control signals to the microprogram structures perforning
F'1,......, F'q [16]. In the second case, the memory is divided into units
corresponding to the data for P'1,...,Fq, and the microprogram memory contains
the microprogram comprising F.

Bibliography

1. Bvreinov, 8. V. and Prangishvili, I. V., "Digital Automatic Control Units
With an Adjusted Structure," Moscow, Energiya, 1976, 239 pages.

2. Bandman, 0. I... Bvreinov, E. V.. Korneyev. V. V. and Khoroshevskiy, V. 6.,
"Homogeneous Computer Systems on the Basis of Hicroprocessing BIS [Large

Integrated Circuits]. in the collection "Problems of Theory and Construc-
tion of Computer Systems," No 70, 1977, pp 3-28.

FOR OFFICIAL USE ONLY
3.

be

10.

ll.

12.

13.

1‘.

FOR OFHCIAL USE ONLY

"Homogeneous Microelectronic Associated Processors," edited by
I. V. Prangiahvili, Moscow, Sovetskoye radio, 1973, 280 pages.

Kornev, Yu. N., Piskunov, S. V. and Sergeyev, S. I., ”Algorithms of
Generalized Substitutions and Their Interpretation by Metuorke of
Automatic Devices and Homogeneous Computers," IZVBSTIYA AKADEMII MAUK
SSSR: TWINSKAYA KIBBRNBTIKA, No 6, 1971, pp 131-162.

Kornev, Yu. M.. Piskunov, s. V. and Sergeyev, S. 11., "Problems of Construct-
ing Algorithms of Generalized Substitutions in a Separate Context,"
vrcarsum'm 31512141, No 1.7. 1971, pp 117-119.

Yamada. M. and Amoroso. s., "Tessalation Auto-eta," INFORM. AND CONTROL.,
Vol 15, Mo 3, 1969, pp 299-317.

Markov, A. A., "Theory of Algorithms." “RUDY MATEM. INSTITUTA AKADEMII
MAUK SSSR, No 62, 1956. p 375.

Peterson, I. L., “Petri Nets," ACM COMPUT. SURVEYS, Vol 9, No 3, 1977.
pp 233-252.

Lipton, R. I., Snyder, L. and Zalzstein, Y. A., "Comparative Study of
Models of Parallel Computation," 15th Annual Simp. Switching and Auto...
1974, pp 165-155.

Baranov, S. I., "Synthesis of Microprogralned Automatic Units,"
Leningrad, Energiya, 1976, 216 pages.

Aniahev, P. A., "Concerning the Determinability of Parallel Chart-
Diagrams," in the collection "Problems of Theory and Construction of
Computer Systems," Mo 75, 1978, pp 40-52.

Author Certificate 664168 (USSR), "Computational Homogeneous Structure,"
Kornev, Yu. N. and Piskunov, S. V., Published in 3.1., No 19, 1979.

Sergeyev, s. M., "Performance of Algorithms of Parallel Substitutions
1n Microproceesing Systems," in the collection "Problems of Theory and
Construction of Computer Systems," No 73, 1978, pp 25-39.

Bandun. 0. 1... "Synthesis of Asynchronous Microprograuod Control by
Computer Processes," KIBERNBTIKA, No l, 1980. pp b2-47.

COPYRIGHT: IZDATPl'STVO "NAUKOVA DNA", "KIBERNBTIKA", 1981

9889
C30:

1863/52

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 518.9
VERIFICATION 0? $1081. WIGURATINS PO! PULSE!) RADIO ENGINEERING SYSTDS

Kiev KIBBRNB‘IIKA in Russian No 5, Sep-Oct 81
(manuscript received 3 Jun 80) pp ‘0-67

[Article by Yuriy Anatol'yevich Belov, Vladimir Leonidovich Hakarovv,
Viktor Gennadiyevich Shelepov and Vladimir Borisovich Shul'2henko]

[Excerpts] When examining models like operators transforming some given input
data into definite output data, the question always arises whether the process
of handling the flow of incoming information corresponds to that function which
the model must per-torn. In other words, how to he convinced that the correct
results are being received in any of the processes which can be simulated in
accordance with the nodel data.

The question of adequacy of the mathematical models is one of the basic,
decisive and inevitable questions of sodeling.

Considering the complexity of checking such compliance for models of actual
or projected radio engineering systems (31's), it is possible to formlete a
more simple cash-to check whether the model (operator) is presenting data
from the field of permissible incoming values to data of the field of permis-

sible output values.

A number of well-founded methods of checking progress accuracy was worked out

for solving the inediate problem in programing: Floyd's inductive supposition
neth [1], the hierarchical structuralisation method [2], Boere's method [3]
and others.

The purpose of present work is to develop an inductive supposition method of
checking program accuracy for a new and important. in a practical respect,
class of aathasaticsl objectives-mdel configurations.

It should he mentioned that strict proof of accuracy in constructing a mathe~
satical nodel and the corresponding simulation algorithm according to an
assigned physical description (structural configuration) of the us [Information
measuring System] is an important procedure which allows. generally speaking,

FOR OFFICIAL USE ONLY
one
and,
of p

5'

10.

FOR OFFICIAL USE ONLY

to ascertain the inadequacy of the physical model to the actual process
therefore, to localize operations for correcting the model on the level
hysical presentations alone.

Bibliography

Manna, C., "Mathematical Theory of Computation," New York, McGraw-Hill
Book Co., 19710, 226 pages.

Robinson, L. and Levitt, X.., "Proof Techniques for Hierarchically
Structured Programs," CURRENT TRENDS IN PROGRAMMING METHODOLOGY, No 11,
1979, pp 57-73.

Hoare, C. A. R., "An Axiomatic Basis of Computer Programing," CACM,
Vol 12, No 10, 1969, pp 112-135.

Kotov, V. 2., "Introduction to the Theory of Program Configurations,"
Moscow, Nauka, 1978, 257 pages.

Leonov, A. I. and Pomichev, K. 1., "Monopulse Radar," Moscow, Sovetskoye
radio, 1970, 392 pages.

Leonov, A. I., Vasenev, V. N. and Gaydukov, Yu. 1., "Radar Simulation,"
Moscow, Sovetskoye radio, 1979, 264 pages.

Kuz'min, S. 2., ”Digital Processing of Radar Information," Moscow,
Sovetskoye radio, 1967, 399 pages.

King, Dzh., "Checking Compiler," in the book "Aids To Managing Large
Systems," Moscow, 1977, pp 23-41.

Anisimov, A. V., Belov, Yu. A., Lyashko, I. I. and Makarov, V. L.,
"The Adequancy of Mathematical Modeling of a Complex Information Measuring
System," DOKLADY AKADEMII NAUK SSSR, Vol 240, No 2, 1978, pp 202-206.

Belov, Yu. A., Maharov, V. L., Shelepov, V. G. and Shul'zhenko, V. 3.,
"One Approach to Checking Adequacy of the Block Diagram of a Functional
Algorithm for the Structural Configuration of a Pulsed Information
Measuring System," DOKLADY AKADEMII NAUK SSSR, Vol 255, No l, 1980,

pp 36-40.

COPYRIGHT: IZDATEL'STVO "NAUKOVA DUMKA", "KIBERNETIKA", 1981

9889

C50 :

1863/52

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

EFFICIENT SERVICING OF COMPUTER EQUIPMENT REVIEWED

Moscow TBKRNICHBSKTYE SRBDSTVA OBRABOTKI INPORMATSII in Russian 1981 (signed
to press 17 Feb 81) pp 307-318

[Selections from chapter 9 of book "Data Processing Equipmt", by Vasiliy
Nikolayevich Kriushin. Nikolay Matveyevich Surin. Valeriy Pavlovich Chuprikov

and Nina Grisor'yevna Cheruyak. Izdatel'stvo "Pinansy i statistika",
12 .000 copies, 320 pages]

[Excerpts] Table 9.1. Technical Servicing Home for Computer Keypunch, Electro-
mechanical, and Electronic Keyboard Machines by One Worker at Computing (Infom-
tion-Coqut‘ng) Centers. Information-Computing Stations, and Machine-Accounting
Stations of the System of the USSR Central Statistical Aa‘ninistration.

Number of Average Num—
Machinea her of Hours
Serviced by To Service

One Worker One Machine

Tues and Models of Machines in a Month for a Month

Machines for Mathematical Processing of Data
' Recorded on Punchcards

The T-SM and ".'~-5MV Tabulstors 5 34.9
The TABO-l stulators 3 58.2
The VP-Z and VP-3 Electronic Counting Attachments

to Tabulators 9 19.4

Machines for Ordering Arrays of Punchcsrds
The 5380-3 and SE80-3/1M Electronic Sorters 6 29.1
The 880(45)-5M and 380(45)-7 Sorters 10 17.5
Collaters (RPM's) 7 24.9
Machines for Preparing Punchcsrds
The PD 45-2 and PD 45-2/1M Keypunches 12 14.5
The P80-6, P80-6/1M, and Zoyaltron-lolSts Ksypunches 9 19.4
10

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Muster of Average Num-

Machines ber of Houses
Serviced by To Service
One Worker One Machine

Types and Models of Machines in a Month for a Month
Machines for Preparing Punchcarde

The PA80-2, PABO-Z/IH, PA80-2/2M, PA80-2/3H, and

Zoyemtron-615a Keypunches 6 29.1
Summary Punches of the P180(45)-U Type 11 15.9
Reproducing Punches of the PR80(65)-U Type 9 19.6
The K80(45)-6, K80(b5)-6/1M. and Zoyemtron-bZSts

Verifiers 10 17.5

The “80-2, M80-2/1M, HBO-ZIZM. KASO—Z/3H, and

Zoyemtron-éZSe Verifiers 7 25.9

The RMK80/45 and EMA-80 Decoding Machines 8 21.8
Keyboard Machines

The SUV-107. SDV-108, SDK-l33, AYes, AYeSVye,

Askote-llo, -112, -1llo, -117. and -316, and

Other Adding Machines 30 5.8
The VMA—Z, VK-Z. SAR, KYeL, and Other Electro-

Mechanical Keyboard Computing Machines 25 6.9

The Elks-22. Zoyemtron-ZZO, Elektronika, and

Other Electronic Keyboard Computing Machines

with Discrete Elements 30 5.8
The Iskra-108, -111, and -122, Elke-43 and

Elks-SO, and Other Electronic Keyboard

Computing Machines with Integrated Circuits 50 3.5
The VA-345M, I’M-366, FM‘R, We, and Mel.

Invoice Machines 9 19.6
The Zoyemtron-Jdl and 382, Iskra-23 and 522, and

EFM-bé6 Electronic Invoice Machine 12 14.5

The Zoyemtron-381, -383, -384, end -385, lskre—2302
and -534 Electronic Invoice Machines with Punch

Attachments 9 19.4
The Askota-17O Bookkeeping Machines 9 19.4
The I‘M-20 Electronic Multiplier Attachlents 27 6.5
The Askota-l70/55 Bookkeeping Machines with Tape '

Punch Attachmnts 8 21.8

 

Technical servicing and repair of computer equipment is done by enterprises of
Soyuzschettekhnika (All-Union Production—Technical Association for Technical

Servicing and Repair of Computer Equipnent of the USSR Central Statistical
Administration) on the basis of contracts concluded between the manufacturing

enterprise and the client.

11

FOIOFI’ICIALIBEONLY
FOR OFFICIAL USE ONLY

Soyuzschettekhnika repair enterprises can do technical servicing, current
(small-scale) repair, medium repair (1 and 2). and capital repair (1 and 2).

With the approval of the USSR State Committee for Prices a price list for
wholesale prices for all types of repair work and technical servicing of the
computer equipment of the USSR Central Statistical Administration was ratified
and put into effect as of 1 January 1977. This price list envisioned separate
wholesale prices for different types of repair, technical servicing, and other
jobs (launching machines into operation, storage and packaging, repair of
electrical motors. repair and replacement of particular assemblies). where
there is a contract for technical servicing, current (small-scale) repair,
installation, and launching newly received equipment in operation are done by
Soyuzschettekhnika enterprises free of charge.

Let us review the planning for repair of computer equipment using the example
of organizations of the USSR Central Statistical Administration. The estab-
lished rules for planning repair of computer equipment within the system of
the USSR Central Statistical Administration envision that rayon and city
computing centers (and machine accounting stations) will submit information

on the technical condition and number of hours worked by each machine in the
past year and plans for the machine's workload in the current year to the com-
puting centers (machine accounting stations) of the oblast statistical adminis-
trations and the appropriate repair enterprises each year (based on condition
as of 1 January). 0n the basis of these data the repair enterprise makes up

a technical passport for each machine, sets up a card file, and plans and
maintains records of repair work.

The rayon and city computing centers (machine accounting stations) submit a
plan of machine repair for the coming year to the computing centers (machine
accounting stations) of the oblast statistical administrations each year, be-
fore 1 February of the current year. according to the number of hours worked

by each machine. This plan indicates repair enterprises by service zones using
the following forn:

Form No 9.1

Plan for Repair of Computer Equipment in 198__

 

(Name of Computing Center or Hachinv Accounting Station)
For the Service Zone of

(Name of Repair Enterprise)

Factory Number Number of Items

 

  
  

  
  

Machine Name Included in that

Capital Medium Current
Repair Repair

   

12

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Each year the computing centers (machine accounting stations) of the oblast
statistical administrations compile a summary request (plan) in the same

form showing their repair needs for the coming year. This is submitted to

the Main Administration of Computer Work (Glavmekhschet) of the republic central
statistical administration before April of the current year. This administra-
tion then sends the summary request for the republic central central statis-
tical administration to Glavmekhschet of the USSR Central Statistical Ad-
ministration before 1 June of the current year. By 1 July of the same year
Glavmekhschet of the USSR Central Statistical Administration submits infor«
mation on the computer equipment reapir needs of the system of the USSR
Central Statistical Administration to the Soyusschettekhnika Association.
Soyuzchettekhnika compiles a summary plan of computer equipment repair and
brings it to the attention of the repair enterprises.

At the large computing centers (machine accounting stations) where medium and
current (small-scale) repair is done by in-house personnel, the work planning
system envisions compiling annual plans of machine repair which list all machines
subject to repair and indicate the type of repair and the time it will take for
each machine. In addition to compiling the annual repair plan they work out a
repair schedule for each month which envisions planned withdrawal of machines
from work positions. The schedule is usually drawn up on the basis of the
volume of repair work in the current month and the calendar amount of working
time of workers engaged in repair. The schedule is used for operational moni-
toring and accounts related to calculating expenditures for repair. Detailed
trouble lists are compiled before performing each type of repair

Repair workshops which have the necessary amounts of furnishings, bench equip-
ment, tools. and spare parts are organized to do repair work at the computing
centers (machine accounting stations). In the repair workshops the work of
service personnel is usually organized on the brigade principle: each brigade
is assigned to a certain group of machines. In addition, a definite worker

is responsible for repairing each machine.

The Organization of Technical Servicing

Technical servicing of computers involves a set of organizational—technical
measures which must be done to maintain the operating reliability of machines
within required parameters. These activities include: selection of appropriate
service personnel; acquisition of hardware and software for diagnosing mal-
functions; supplying spare parts, tools, and accessories for the machines;
supplying service apparatus for testing external units; supplying special
furnishings and auxiliary equipment for operating and repairing computers.

Optimal organization of the technicil servicing of computers is a major task
in using them efficiently. There are various types of technical servicing
of computers: individual, group, and centralized.

With individual servicing each computer is provided with a complete set of

service apparatus, spare parts, tools, accessories, and appropriate service
personnel. Individual service facilities include the following: apparatus for

13

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

monitoring the basic elements of the computer and power supply; monitoring
and adjusting apparatus for autonomous checks of individual units of com«
puter hardware; a set of test programs; tools and repair accessories;
auxiliary equipment, attachments. and special furnishings for storing the
property of the computing center.

with group servicing several computers concentrated at a single computing
center are serviced by in-house personnel. Thestructure of group service is
the same as for individual service. but it is supplemented for other computers.

with centralized computer servicing the service apparatus, spare parts. tools,
accessories. and service personnel are significantly reduced. but with this
form of servicing the time required to restorecomputersdepends significantly
on the operational features of the work of centralized servicing points, in
particular how far they are from the computing centers.

The type of technical servicing is determined by the user depending on the
place where the computer is installed and the range of jobs it does.

The number of engineering-technical personnel needed to service computers
depends on the type of technical servicing and the mode of operation of the
computer. Thus, for individual servicing of one Yes-1020 computer which is
used in three shifts. the following engineering-technical staff is recommended:

Machine Chief l
Shift Chief8(Senior Engineers) 3

Shift Engineers (Electrical Engineers and
Electromechanical Engineers) 3
Senior Electricians 2
Electricians 2
Precision Machinery Mechanic 1
Total 12

Scheduled preventive maintenance work involves a set of measures aimed at
keeping computer units in working condition and preventing breakdowns and
failures during their operation.

The period of scheduled preventive work is an essential and continuing stage

in keeping computers in working condition. Reducing the time that this work
takes increases the usable work time of the computer. that is, the time during
which the machine is engaged in problem-solving or debugging programs.

The volume of scheduled preventive maintenance work depends on the technical
condition of the computer units and the qualifications of engineering-
technical personnel. The length and periodicity of this work are determined
by the manufacturing plants in the appropriate operating instructions.

The essential feature of preventive work is the following: when a machine
is being prepared for problem-solving the working condition of the machine
itself as well as its blocks and individual elements must be tested using

16

FOR¢0FHKJA1.USE(NVLY
FOR OFFICIAL USE ONLY

specially prepared problems or teat-programs with known answers. In case of

an error the programs envision that the machine will halt automatically and

a description of the nature of the trouble will be printed out on the typewriter
or a signal will appear on the control console. The test program is used to
check not only the condition of the computer. but also whether the program to
solve the particular specific problem has been written correctly.

Experience operating contemporary computers shows that it is necessary to ob-
serve each machine systematically, clean its blocks and assemblies, test the
work of individual units, and replace wornout parts. In addition to identifying
and eliminating ordinary malfunctions. servicing computers involves daily,
weekly (biweekly). monthly. and semiannual (annual) scheduled preventive main-
tenance.

The following periodicity and length of scheduled preventive maintenance work is
recommended for Yes [Unified System] computers:

Table 9.4
Periodicity of Pre-
Cogputer Name ventive Work Number of Hours
Yes-1020 ' Daily 1
weekly A
Monthly 16
Annual 72
Yes-1030 Daily 1
Biweekly 4
Monthly 8
Semiannual 72
Yes-1050 Daily 1
Biweek 1y ’0
Monthly 8
Semiannual 72

 

Daily preventive maintenance includes an excernal inspection of the condition of
the machine units and power sources; testing the machine with monitoring teats;

eliminating malfunctions when there are deviations from technical norms; check.

ing, cleaning. and adjusting external units.

Weekly (biweekly) preventive maintenance envisions a set of weekly (biweekly)
activities: testing the reliability of mechanical fastenings; testing the ven-
tilation and power supply system; checking the work of the units with a pre-
ventive alteration of the supply voltage of :5 percent.

Monthly preventive work envisions cleaning and lubricating the assemblies.
mechanisms, and power blocks and testing the functioning of the computer hard-

ware using diagnostic tests with an alteration of :5 percent in supply sources.

15

EXHI(JPF1CIAI.lEﬂE(ﬂNLY
FOR OFINCJAI.USElMNLY

Annual (semiannual) preventive work includes the same johs that are done in
monthly preventive work as well as dismantling, cleaning, and lubricating all
mechanical assemblies of external units with adjustment or replacement of parts
at the same time. In addition, the cables and supply lines are inspected. The
instructions on operating individual units which are attached to the machine by
the manufacturing plant give detailed descriptions of preventive work. They
also indicate possible malfunctions in the machines.

Careful scheduled preventive maintenance work significantly reduces the appear-
ance of random malfunctions in machines. But finding and eliminating malfunc-
tions quickly dependsin large part on the experience and qualifications of the
engineering-technical personnel who are operating the machines.

Types of Malfunctions and Methods of Detecting Them

Malfunctions may occur in computers for various reasons. Among them are con-
cealed production defects, violations of operating rules. and external influ-
ences (blows. vibrations. overheating. and the like). Malfunctions occurring
for these reasons generally come during the period of experimental operation.

During working operations most malfunctions are related to failures of inte-
grated circuits and semiconductor instruments. Experience operating the machines
shows that the cause of this is instability of the voltage in the machine cir-
cuits. Failures in computers often occur because resistors go out. despite

their high reliability. More than 50 percent of all failures occur because the
contacts that connect the current-conducting element with the outlets are

broken or disrupted. Failures also occur as the result of rupture of the
dielectric in the capacitors.

Trouble-free operation of the semiconductor instruments depends on how well they
are manufactured. These instruments are sensitive to overloads of current and
voltage and therefore above-limit power supply regimes must be avoided if they
are to be used for a long time. Semiconductor instruments are also subject to
the influence of heat. An increased temperature causes change in the parameters
of the element and can result in failure of the computer.

To make the search for malfunctioning elements easier each element in the ma-
chine has an address which gives the number of the unit, the frame. console.

and place which the particular element occupies. These coordinates are shown

in the structural and schematic diagrams by which the search for malfunctions is
conducted.

The machines are supplied with service apparatus, including an oscillograph, an
electrical measurement instrument, a stand for testing Tﬁz's [cards]

and a stand for testing power supply blocks, among others, to determine the
operating stability of the particular elements. This apparatus plays a signifi-
cant part in the search for machine malfunctions. However, the automatic moni-
toring equipment is primary. It makes it possible to check whether the machine
is operating correctly and. in many cases. to correct errors that are detected.
This includes both hardware and software for automatic monitoring.

16

F0!.0FFNJAI.USE¢MVLY
FOR OFFICIAL USE ONLY

The software includes monitoring programs for test problems which are run be-
fore performing the main problem. when the test problems are solved cor-
rectly the probability of correct work by the machine in solving the main
problem is determined. During solution of the main problem monitoring proce-
dures are carried out in the form of a double check of the same program.

The hardware includes monitoring equipment that operates independently of the

program. For example, the Yes-1020 processor uses hardware monitoring based on
"modulus two" and hardware duplication techniques.

The "modulus two" monitoring method, in particular the "odd number check," is

done byte by byte. which is to say each byte of the data has a check bit that
added to the number of units in the byte makes it uneven (odd).

The hardware duplication method is used to monitor the work of the arithmetic—
logical unit. By this method each bit of information is processed in direct

and inverse form. The results of this duplication are compared for each bit.
If the direct and inverse levels coincide this indicates an error.

COPYRIGHT: Izdatel'stvo "Finansy i statistika", 1981

11,176
cso: 1863/51

17

F0R10FFKJAI.USE(MVLY
FOR OFFICIAL USE ONLY

PROBLEMS OF AUTOMATED CONTROL SYSTEMS FOR INDUSTRIAL PROCESSES REVIEWED
Moscow VOPROSY EKONOHIKI in Russian No 9. Sep 81 pp 67—77

[Article by D. Palterovich and M. Cornshteyn: "Automating the Control of
Technological Processes in Industry")

[Excerpt] The national economic efficiency of automated control systems for
technological (industrial) processes [ASU-TP's] depends not only on their
scientific-technical level, but also on the extent to which they cover exist-
ing industrial processes and aggregates, and this figure is still low. In
1979 ASU-TP's had been introduced at slightly more than one percent of all in-
dustrial enterprises. Each of these enterprises had, on the average. about
two systems. All of the ASU-TP's introduced could be classified as follows:
direct control system - 52.7 percent; information—adviser systems - 16.8
percent; information recording systems - 30.5 percent.

He should observe here that the rate of development and extent of application
of these systems does not meet national economic needs. Calculations that we
have made show that at the end of the llth Five-Year Plan in the primary sec-
tors of extracting and manufacturing industry, the proportion of industrial
facilities equipped with ASU-TP's, although it is growing, is only about 30
percent of the total number of complex industrial facilities prepared for the
use of ASU-TP's and at which the use of such systems is economically expedient.
These findings illustrate that the national economic need for ASU-TP's is
great and cannot be fully met in one five-year plan.

In view of the high efficiency of ASU-TP'a, steps should be taken to meet the
need for them more fully in the llth and 12th five-year plans. In our opinion.
it would be wise to increase the proportion of expenditures for automation in
gross capital investment. In petroleun extraction and nonferrous metallurgy.
this proportion is 2-2.5 percent, while in electrical power. ferrous metallurgy.
and the gas industry it is 4-5 percent, in the building materials industry -
5.5 percent. in the chemical industry - 8 percent, and in petroleum refining -
7 percent.

For a long time work to build and employ ASU-TP's was carried on in the context

of rapid development of ASUP's [automated production control systems]; this
could not help being reflected in the overall distribution of capital, and

18

FOR.0I1WCJAI.IEIB(M‘LY
FOR OFFICIAL USE ONLY

apparently was not always justified. The proportion of investment for

ASU-TP's in total capital investment for building automated control systems

of all types, despite significant growth in'the 10th Five-Year Plan compared to
the Eighth, vas still insignificant and in the last 10 years has been only 12
percent while investment for ASUP's was 68 percent. This distribution of re-
sources led to a situation where at the beginning of 1980 there were 4.370 auto—
mated control systems: 2,460 ASUP's and 1.649 ASU-TP's. At the present time
there is less than 0.7 of an ASU-T? for each operating ASUP. But for efficient
integrated automated control of industrial and econquc-organiaational processes
at contemporary industrial enterprises there should be from a few to several
dozen ASU-TP's for each ASUP. Only in this case can the automated control sys—
ten for technology become‘the foundation of an automated ”0th10“ control
system (ASUP).

At the same time, because building and operating ASU-TP's requires significant
production expenditures,* the paramount challenge is to make optinl use of
production resources for this purpose and to determine the rational order and
scope of work to set up and employ ASU-TP's.

Analysis of ASU-TP's shows the high economic efficiency of this form of tech-
nical progress. One-time expenditures for the development and introduction of
ASU-TP's are repaid on the average in 1-3 years, chiefly by reducing use of
material and energy resources (by 2-5 percent), increasing the production of out-
put (by 2-8 percent), improving the quality of output. and other factors. The
norm of efficiency of capital investment for setting up ASU-TP's was raised
slightly for the llth Five-Year Plan.

In the last three five-year plans several billion rubles have been‘invested in
development of ASU-TP's. Hundreds of scientific research, planning-design. and
technological organizations and enterprises and thousands of engineering-
technical employees of various ministries and departments are engaged in design-
ing and introducing them. But the level achieved and the results of work to
build and introduce ASU-TP's still do not fully meet national economic require-
ments.

In the first place. as already noted the scale of capital investment in auto-
mation is inadequate to supply automated systems to all large industrial aggre-
gates. In the second place, the choice of objects of automation, and conse-
quently the distribution of capital investment among these objects, does not
always meet the criterion of maximum national economic impact. In the third
place, information and advisor systems still predominate in the structure of
existing ASU-TP's. The proportion of control systems is rising slowly, and their
functional capabilities are often limited and do not provide, on the one hand,
for integration of the ASU-TP and A80? into a single system for control of
technology and production or, on the other hand, sufficient flexibility and
adaptability of the industrial facility to change in work conditions. In the

 

* The average cost of setting up one ASU-TP with a comuter was about 1.3 mil-
lion rubles. with an average labor intensity of 90 worker-days.

19

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

fourth place, the quality and reliability of the functioning of ACU-TP's

often declines because of disproportions in the development of their scientific-
technical base and inadequate matching of the computer equipment employed, es-
pecially peripheral units and software, to technical and economic requirements.
In the fifth place, many ASU-TP's are built as unique developments for one-time
application, so the level of unification and standardization of structural,
algorithmic, and technical concepts is low and they do not circulate. In the
sixth place, the organization of the process of developing AsU-TP's is not al-
ways oriented to rapid introduction and fitting the character of the object of
automation. In the seventh place. the level of use of ASU-TP's in terms of

time and their functional capabilities is inadequate in many cases, which greatly
reduces their economic efficiency.

One of the most important problems that must be solved in the area of raising
the efficiency of automatation of technological processes in industry is de-
veloping the scientific-technical base of autonstion, improving planning, and
straightening out the organizational forms of work related to the development
and application of ASU-Tv's. New scientific principles and engineering methods
of building ASU-TP's must be employed to develop and introduce highly efficient
automated technology. The specific ways to accomplish this are determined by
both the needs of industry and the capabilities of current automated control
equipment.

Contemporary forms of automating control, with their high requirements of in-
dustrial equipment. themselves become a powerful factor in the transformation of
equipment and technology on the basis of the advances of the current scientific—
technical revolution. Automation of control creates conditions for increasing
the unit capacity of aggregates and the continuity of their operation, makes it
possible to raise temperature, pressure, and other parameters of processes, in—
sures operator safety under conditions of aggressive environments, exposure to
radiation, and the like. In this way, the efficiency of ASU-TP's has a clearly
marked socioeconomic character. In terms of functional capabilities the most
modern domestic ASU-TP's today are as good as the best foreign models and can in
certain cases match them for reliability, flexibility, and diversity of tech-
nical resources employed. To raise the scientific—technical level of ASU-TP’s
it is essential to increase significantly the volume of diagnostic, optimiza-
tion, and control functions in them and to make broader use of progressive
scientific methods of control - direct digital control, optimnl control by
adaptive models, and others (at thermal power units, for example, in 10 years
the number of parameters measured has increased six times and the number con-
trolled has risen four times).

Raising the scientific-technical level of ASU-TP's significantly broadens their
functional and technical capabilities. For example, the ASU-TP's that were de-
veloped earlier for sulfuric acid production facilities were information-
dispatchcr systems and did not accomplish the tasks of operational control of
production. The Kupol ASU-TP that has now been set up for the Gomel' Chemical
Plant envisions direct digital control of sulfuric acid production. The basic
distinction of this system is its transition from automatic monitoring and
analysis of a number of variables to automated regulation of a set of inter—
related parameters based on the use of mathematical models and the techniques of

20

FIHICHWHCJAI.USEIMVLY
FOR OFFICIAL USE ONLY

combined control. to automatic selection of the best technological regimes and
coordination of the work of the entire line. Deviations in the regulated
parameters from assigned values were cut by three-fourths to four—fifths with
introduction of the Kupol ASU-TP, which made it possible to reduce losses of ear
pensive raw material by one-third to one-half.

The growing complexity of ASU-TP's requires an enlargement of the memory of com-
puter machines, broadening of their links with the object, development of means
for operator "communication" with the system, and the like. One of the major
scientific-technical advances in building ASU-TP's in the 10th Five-Year Plan
was the use of third-generation control computer complexes in most cases. With
respect to volume of output and technical characteristics (with the exception

of reliability) they meet the requirements of ASU-TP's. But the structure of
production of computer equipment still does not meet the national economic

need for it. Few specialized computers are available, while general-purpose
computers are too expensive and are not always adapted to the requirements of
the control objects. Growth in the production of control computer complexes is
far outstripping growth in the production of supplementary units: internal
memory units. units for communication with objects, and peripheral devices.

The structure of production of conputer resources should be modified to sig-
nificantly increase the proportion of peripheral units and units for communica-
tion with the object. Industry should also produce a broader assortment of
peripheral units (flexible disc stores, specialized production engineer-operator
terminals). specialized sensors, actuating mechanisms, and certain other types
of automation equipment that are produced in small series.

About one-third of the ASU-TP need for specialized instruments and automation
equipment (they constitute 20-25 percent of the total production of technical
means for ASU-TP's) to monitor the main parameters of the industrial process
is being met. Growth in this need demands the development of essential design
subdivisions and experimental facilities oriented to devising not only individual
instruments, but entire sets of equipment for ASU-TP'e. The report by N. A.
Tikhonov at the 26th Congress of the CPSU notes that the production of minia-
ture electronic control machines as a constituent part of the basic industrial
equipment. instruments. and various control and nonitoring systems and devices
is expanding significantly in the 11th Five-Year Plan. This will step up the
development of the technical base of the ASU-TP's significantly.

The low reliability of the computer equipment and instruments being produced by
industry is a serious obstacle to raising the efficiency of ASU-TP's. This
makes it impossible to implement a number of technical concepts (for example.
direct digital control) efficiently in industry and leads to parallel use of
several computer devices and duplication of the system by manual control. As a
result. one-time and ongoing expenditures of the system rise considerably and
its economic efficiency declines. A further increase in the efficiency of
ASU-TP's demands an improvement in reliability, particularly in the electronic
part of the computer, raising the trouble-free period of work to 10,000 hours.

The efficiency of ASU-TP's depends significantly on improving the organization
of work to set them up. A specific feature of this work is that it cannot be

21

FOR‘OFFK]AI.USE10NLY
FOR OFFIClAL USE ONLY

done apart from the particular characteristics of the machinery and tech-
nology of automated production. Technical policy in the field of automation
of the control of particular industrial processes and aggregates (production
facilities) must therefore be viewed as a part of the technical development
or re-equipping of the corresponding production subsector. It must be coor-
dianted with technical policy in the field of development of technology and
designing of the primary production equipment.

Expanding the scope of work to set up ASU-TP's demands a transition to more
productive, "industrial" methods of developing, implementing, and distributing
them to insure an improvement in quality and a reduction in the labor—
intensiveness and time of work to set up ASU-TP'a. The most important steps to
raise the efficiency of setting up ASU-TP's are the following: standardization
and unification of design concepts; automation of their design; experimental
field testing of pilot models of ASU-TP'a.

The rate and scale of development of automation of control over industrial
processes is largely determined by the interrelations of the sectors that per-
form scientific, design. and installation-adjustment work in setting up ASU-
TP's. and the manufacturers of the industrial equipment and technical means of
control. Comprehensive organization of work to automate the control of indus-
trial processes should be based on uniform intrasectorial long-term programs of
scientific research. design . production of technical means, installation, ad-
justment, preparation of the control object, insuring efficient functioning and
development of ASU-TP's. and circulating them.

Organizational forms of work to automate industrial processes have been taking
shape for a long time under conditions of the multiaectorial structure of in-
dustry. Because numerous ministries bring together what are essentially several
sectors that differ not only by the nature of their output but also by specific
features of industrial processes. work toward automation has been spread out at
subdivisions of many different organizations. Even within a particular sector
numerous organizations subordinate to different departments work on solving the
same technical problems of automating production. All this obstructs the con—
tinuity of the process of development and introduction of ASU-TP'S.

Certain specialized institutes develop ASU-TP's that are suitable for one-time
use at a particular site. which retards the formulation of standard ASU-T?’s

for widespread introduction. Hork sometimes goes forward in parallel at
several enterprises. and the result is that different ASU—TP's are developed for
identical enterprises. But experience shows that the total length of working
time to set up an ASH-T? using standard concepts is 30.40 percent less than
where there is individual development, and costs are 20-30 percent lower.

The main weakneunsof the organization of work today to set up ASU-TP's result
from the following factors, among others: the absence of uniform leadership
and technical policy in the field of planning, coordinating, and monitoring
this work; the lack of specialized organizations responsible for technical

policy and the organization of work to automate certain types of industrial
processes: duplication in solving the same scientific and technical problems;

and, the unsatisfactory state of experimental production facilities.

22

FORlOFFKJAl.USEIHVLY
FOR OFFICIAL USE ONLY

To improve the efficiency of work on ASU-‘I'P's their organizational forms

must be coordinated with the content and scope of work on automation. The

time has come to develop a long-term program of scientific research and
planning-design work on automating the control of industrial processes, includ-
ing the manufacture of pilot models of automated control systems for complex
industrial processes, development of mathematical models of control objects,
development of standard algorithm and programs for ASU-TP's, and so on. The
sectors should have long-term plans for setting up ASU—TP's, and the resource
requirements established by these plans must be taken into account in five-
year and annual plans.

Solving the problems of automating the control of industrial processes, which
requires substantial labor, material, and financial resources, can only be done
by large organizations. The most rational form of these organizations is the
science-production association. But there are still very few of these associ—
ations. To avoid duplication in work to develop and introduce ASU-TP's in
various sectors, a number of steps should be taken to determine the specific
specializations of organizations in automating similar industrial processes

and main designers should be appointed for groups of processes. These organi—
zations must be responsible to the customer for performance of the full range
of work related to ASU-TP's.

In our opinion. work to set up pilot automated control systems for complex
industrial processes should be concentrated at organizations of the Ministry

of Instrument Making, Automation Equipment, and Control Systems. After testing
the pilot systems should be turned over to sectorial organizations for distri—
bution. This is a useful system of work because, in addition to the fact that
this ministry has strong scientific. planning, and design organizations involved
with ASU-TP's, of the coma features of methods of studying industrial processes
as control objects, the possibility of standardizing the information being used,
and the general industrial character of monitoring and regulation equipment and
computer technology.

The complexity of the equipment used in ASU-TP's necessitates a large number
of highly qualified service personnel. Qualified specialists are needed for
the software of the control conputers and also to repair them. Therefore, it
is important to improve the organization of work to service the control com-
puter complexes that are employed in ASU-TP's by establishing a procedure for
centralized servicing by the manufacturing ministry. This will make it pos-
sible to improve the quality of service and reduce its cost.

Among the factors that are slowing down the introduction of automation at indus—
trial cnterprises and increasing the time of work we may also include unsatis-
factory materinl—tcchnical supply. In various sectors the planning of material-
technical supply for work on automation is often done apart from the time and
scope of the work, and resources planned for automation are sometimes spent for
other purposes. Therefore, we feel that special-purpose funds should be estab-
lished for material-technical supply of automation work and they should be
coordinated with the volume of capital investment in automation.

23

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Poor material-technical support for research and development and automation

has a negative effect on work to set up ASU-I?'s. In addition, the organize-
tions which are doing this work must submit orders (requests) for technical
means and materials one year before the beginning of the work mentioned above;
in some cases this leads to failure to supply essential materials and articles,
while in other cases above—norm stocks of scarce materials are formed, working
capital is frozen, and so on. We believe that it is necessary to establish

an organizational solution so that orders for technical means and materials

for conducting scientific research and experimental design work are filled
within three months.

The efficiency of setting up ASU-TP's is often lowered by incomplete supply of
equipment. Individual assemblies, mechanisms. and instruments in unitary
industrial aggregates equipped with automation means must be installed by
primitive methods in the local areas. Both primary and auxiliary industrial
equipment should be designed with built-in sensors and actuating mechanisms

or with assigned places where they are built in and then delivered by the man-
ufacturing enterprises together with automation instruments and equipment.

At many enterprises, especially sectors where equipment operates under diffi-
cult conditions (chemistrj, petrochemistry. metallurgy, the fuel industry.

and others). ASU-TP's are used inefficiently because of a lack of spare parts.
We must increase spare parts production considerably (to 25 percent of the
volume of production of automation equipment) and create reserves of such parts.
It would be wise to plan to meet the spare parts needs of operating ASU—TP's
on an equal basis with supply of equipment to start-up projects.

In a number of cases the setting up of automated technology is held back by
failure to insure that projects planned for control by traditional methods

and means are technically and organizationally prepared for automation. For
many years automation was thought to be an independent stage of activity

toward which one should move on the basis of using already-existing industrial
equipment. The typical negative aspect of the process of automation at existing
enterprises was (and still is today in many cases) “building on“ automation to
existing equipment which is ill-suited for work under conditions of automation
of control. Often even the new equipment proves unsuited for automatic regu-
lation or for the volume of control functions included in the ASU-TP.

As work on automation of control progressed it became increasingly clear, on

the one hand, that it was not wise to switch certain aggregates and processes
(obsolete or unpromising ones) to automated control and, on the other hand, that
industrial aggregates had to be rebuilt when transferred to automated control.
Progress in the field of automating the control of industrial processes and a
guarantee of its economic efficiency lie not in automating aggregates desig-
nated for manual control, but rather in setting up automated aggregates and
industrial complexes that are oriented to automated control from the beginning
of their development.

ASU—TP's should be developed parallel with the creation of new technology and
new industrial equipment. To insure that ASU-TP's are launched in operation

together with the launching of production facilities it is necessary to care-
fully plan the times at which ASU-TP's are set up at construction projects

24

FOR OFHCIAL WE ONLY
FOR OFFICIAL USE ONLY

and sites being rebuilt. This procedure should be codified by working out
norms and requirements for industrial equipment designated for work in an
automated mode.

Widespread and efficient development of ASU—TP's is possible only if there is
allout standardization of technological concepts, diagrams, and complexes.
"hen technological diagrams are not standardized the result is greater complexity
of concepts during automation and difficulties in distributing the system. In
addition, raising the level of technological standardization makes it possible
to reduce the number of design stages and cut the realization time and cost of
the system. Broadening the sphere of rational application of ASU-TP's is also
linked to growth in mass production, the need to insure its smooth rhythm.

and the necessity of increasing the stability of the composition of raw ma—
terials and basic industrial parameters. Many steps toward automation (for
example in ferrous metallurgy) are taken in sections that have significant

equipment downtime, violate production schedules, and suffer constant fluctu-
ations in the content of raw materials.

In order to carry out the measures to accelerate the launching of production
capacities and facilities and raise the efficiency of capital investment as out-
lined in the decree of the CPSU Central Committee and USSR Council of Ministers
on improving the economic mechanism, it is essential to work out a sound approach
to selecting the sites for which ASU-TP's are planned. The determining char-
acteristics when selecting an industrial site to be equipped with a computer-
based ASH-T? and when establishing the class of the particular control system
should, in our opinion. be the following: the future promise of the industrial
process. its degree of refinement and level of standardization from the stand-
points of nature and structure; the dimensions of the unit capacity of the
installation; the value and scarcity of the output produced; the complexity of
the process from the technological and operating standpoints; the frequency,
level. and economic consequences of disturbances that affect the industrial
process; the frequency of changes in the production situation; the level of
supply of monitoring and measuring instruments; and, the nature of internal
(production conditions) and external (marketing conditions) constraints on pro-
duction of output.

Analysis of the technical-economic prerequisites of automation is very important
when selecting a control object. Undereslimation of the role of this analysis
may lead to one of the significant shortcomings that have been experienced in
planning the development and use or ASU-TP's in industry. Often the decision

to set up an ASU-TP is inadequately substantiated relative to the particular
site. This relates above all to determining the technological potential of the
site and the potential of control; identifying. evaluating, and analyzing pro-
duction losses related to the level of control; and. evaluating the prepared-
ness of the site for introduction of an ASU-TP.

It is difficult to overcome this problem because the customer, when selecting
the object and determining the level of its automation, is not at all responsible

for the economic and technical wisdom of the decision being made. it appears
that there should be a fundamental re-evalqation of the role and content of the
stage of ”technical-economic substantiation of setting up an ASU-TP," in which

25

FORi0FFNJAl.USE(NVLY
Ftﬂt(nﬂﬂ(1A1.USE<DNLY

the goals of setting up the ASU—TP are formulated, its structure is laid out,
and interrelationships with the control system are established. It is in this
stage, in fact, that the foundations should he laid for the use qualities of
automated control systems that make it possible to guarantee the client that
it will have at least normative economic efficiency.

The number and quality of ASU-TP's are determined above all by national eco-
nomic need for them and the resources of the scientific-technical base. It is
therefore necessary to analyze the national economic need for ASU-TP's in order
to improve the planning and organization of work to set them up. This work is
now done from one case to the next and does not have any kind of scientific-
methodological substantiation, which leads to great divergences in estimations
of this need. The estimation of sectorisl need for ASU-TP's made in 1977 for
the appropriate period revealed that the estimate was several times less than
the one established by earlier estimates done in 1973. The primary reason for
the discrepancies was that during the period of compiling the 1973 estimates
the sectors did not have an adequately clear idea of the essential nature of
ASU-TP's and their jobs and place in the overall system of production control.
when indicating their need for ASU-TP's. the sectors in effect estimated the
need for other forms of automation, including local automation.

needs are overstated or understated as a result of an incorrect estimation of
the technical feasibility and economic wisdom of introducing ASU—TP's for spe—
cific industrial facilities.

The ASU-TP'a now being developed and introduced are very diverse both with
respect to scale and nature of problems solved and the functional-algorithmic
structure corresponding to them and ways and means of solving them. Therefore.
in order to estimate the national economic need for ASU-TP's. to plan for setting
them up and provide production resources for this work, and to monitor per-
formance of the assignments of national economic plans the full set of ASU-TP's
should be broken down into subsets (groups) characterized by definite features.
The most significant of these features are the following: (a) nature of the
occurrence of the controlled industrial processing time - degree of continuity
of arrival of raw material, relative length of particular operations; (5) de-
gree of functional development - complexity of information and control func—
tions realized; (c) information output —- the number of technological vari-
ables measured or monitored by the ASU-TP.

In our opinion, to improve the planning and organization of work to set up asu-
TP’s and to distribute production resources for automation of control it would
be advisable to work out a system of norms. This system should include norms
for specific capital investment to set up ASU—TP's of different classes, labor
expenditures for different stages of setting up and using them. service lives,
and expenditure of operating materials.

On a national scale it is necessary to conduct factory certification (by "pass-
ports") of the most important types of automstable industrial processes according
to their basic technical-economic characteristics as control objects. This will
make it possible to identify the primary kinds of control objects. group objects
by types, establish the characteristic features of automatsble processes. aggre-
gates, and facilities as control objects, and more closely coordinate the

26

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

creation of new technological processes and aggregates with automation of their
control, thus insuring maximum economic efficiency.

In the current phase of development of ASU-TP's, during the period of their
growing distribution, it is necessary to take a large number of economic-
organizational measures related not only to the development of systems (their
organizational structure and preparation of the objects), but also to production
control under conditions of existing ASU-TP's, further development of function-
ing systems, and raising the efficiency of automated control. Many of these
economic-organizational questions are either being decided in an unsatisfactory
manner or simply not considered at all. Thus. there is no comprehensive develop-
ment underway on questions of improving the control system and methods of
planning, monitoring, recording, and analyzing the production-economic activity
of the enterprise under ASU-TP conditions. Proper attention is not being given
to improving control processes under ASH-T? conditions, or to economic stimu-
lation of ASU-TP developers and operations personnel (giving them incentive to
improve the efficiency of control systems).

We do not today have a clearcut system of economic stimuli for the development,
operation, and continuous refinement of ASU-TP's. In most industrial sectors
the wages of automation equipment service personnel are lower than those of pri-
mary production workers. we must eliminate this inequality and increase the
icnentive for production and management personnel to use ASU-TP's efficiently.

Precise organizational forms for managing the development, introduction, and
elaboration of ASU-TP's have not been established at the enterprises. There
often is no specialized subdivision in charge of setting up and elaborating the
ASU-TP. The number of ASU-TP service personnel at most industrial control ob-
jects is inadequate. The monitoring-measuring instrument and automation shops
are inappropriate for the jobs of operating ASU—TP's.

There is no statute on ASU-TP services at enterprises which would establish ap-
propriate legal norms and rigidly define the accountability of the client and
developer during the setting up and use of an ASU-TP. The client is not ac-
countable for formulation of the specific technical-economic goals of setting

up the ASU-TP. for the economic and technical wisdom of the decision he makes,
for timely preparation of service personnel, for general preparation of the
object for work under ASU-TP conditions, and for insuring that the system is

used efficiently. The functions and responsibility of the client during develop-
ment and use of the ASU-TP should. in our opinion, be clearly established in a
special statute ratified by the USSR State Committee for Science and Technology.

Along with other paths to improving ASU-TP's that have been considered, solving

the problems of economic-organizational support of these systems will make it
possible to improve the efficiency of their setting up and use in industry.

COPYRIGHT: Izdatel'stvo "Pravda". "Voprosy ekonomiki", 1981

11.176
cso: 1863/46

27

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

HYBRID COMPUTERS

HYBRID COHPUTING MACHINES AND SYSTEMS: LOCAL AUTOMATED CONTROL SYSTEMS AND
COMPUTER DEVICES

Kiev GIBRIDNYYB VYCHISLITEL'NYYE HASHIIW I KWSY: LOKAL'NYYE ASU I
USTROYSTVA VYCHISLITBL'ROY TEKRNIKI in Russian No a, 1981 (signed to press
6 May 81) PP 2. 117-121

[Annotation and abstracts of articles in collection "Hybrid Computing Machines
and Systems: Local Automated Control Systems and Computer Devices", edited

by G.Ye. Pukhov (editor-in-chief), et al., lzdatel'atvo "Naukova dumka", l000
copies, 121 pages]

[Text] Annotation

This collection presents the results of scientific research on the theory,
methods and algorithms for hybrid computation, on the development of computer
and peripheral devices, and on analyzing the accuracy, reliability and diagnostic
methods of hybrid systems. Some problems in developing hybrid local automated
control systems are considered.

The collection is intended for local automated control system and compute;
hardware developers, as well as students, graduate students and scientific
workers specializing in the area of hybrid computer technology.

UDC 536.629r681.34

APPROXIMATION 0F DYNAMIC CHARACTERISTICS OF OBJECT WITH DISTRIBUTED PARAMETERS
USING RC-NETHORK MODEL

[Abstract of article by G.V. Biryukova and G.V. Yevstratov]

[Text] It is shown possible to obtain a 'homomorphic mathematical model of an
object with distributed parameters (DP-object) using a hybrid computer system
(ncs) containing a dynamic analog model of the thermal object in question in
the RC-network. An algorithm is given for approximating the dynamic
characteristics of the DP-object using an ordinary second-order differential
equation with a delayed argument. Four bibliographic references.

28

FOR‘0FFNJA1.USEIONLY
FOR 0FFI(1AL USE ONLY

UDC 681.33
DIGITAL MODELING OF DISCRETE-ANALOG NETHORK PROCESSOR
[Abstract of article by G.N. Azarov and V.Ye. Prokof'yevl

[Text] Problems of investigating the accuracy of RC-nodels on pulse-time
adjustable conductances using digital modeling methods are examined. It is
shown that there is no propagation of methodological error in the discrete-
analog network model from node to node, and the methodicalerror is obtained
as a function of the model parameters. Two illustrations, one table, one
bibliographic reference.

UDC 681.3

HYBRID DEVICE FOR DEFINING CORRELATION FUNCTIONS OF NORMALLY DISTRIBUTED
STATIONARY RANDOM PROCESSES

[Abstract of article by V.P. Kornilovskiy]

[Text] A device is described for defining the correlation functions of
normally distributed stationary random processes. The device consists of a
digital (sign) correlator and a digital-analog converter. The device uses
series 155 integrated circuits. Four illustrations, three bibliographic
references.

UDC 518:517.9hb/9b7

MODELING OF PROCESSES OF INTRA-RESONATOR GENERATION OF SECOND OPTICAL
HARMONIC CONSIDERING TRANSVERSE HETEROGENEITY OF RADIATION

lAbstract of article by A.A. Glushchenko, B.P. Dovgiy, V.V. Obukhovskiy
and V.L. Strizhevskiy]

[Text] Equations modeling the subject generation are investigated numerically
with the combined influence of nonlinear, diffraction and dissipative losses

for various gains. The optimal linearity which provides the greatest intensity
of the second harmonic is found. Four illustrations, ll bibliographic references.

UDC 68l.3.06:681.34

ALGORITHM FOR ANALYZING PATCHINC SCHEME OF OPERATIONAL MODULES USED TO
SIMULATE AUTOMATIC PROGRAMMING SYSTEMS FOR ANALOG COMPUTERS

[Abstract of article by A.N. Klimenko]

[Text] An algorithm is described for analyzing the patching schemes of operational
modules in the analog section of a hybrid computer section which can be used to
select the optimal version from the viewpoint of reducing the number of modules

29

FOR OFFICIAL USE ONLY
FIN!(NWNC]AL.USE(NNLY

used in the analyzed circuit. The structure of the algorithm and an example
of its use are examined, and the results are discussed. Two illustrations,

tvo bibliographic references.

UDC 62-SO3.3

SOHE ALGORITHMS FOR IMPLEMENTING CONVOLUTION OPERATOR AND THEIR APPLICATION
[Abstract of article by A.F. Verlan' and 3.3. Abdusatarov]

[Text] Various questions involved in the numerical realization of linear
integral operators and Voltaire equations of the second sort with arbitrary and
partionable kernel are considered. A series of functional diagrams of special-
purpose computers used to implement integral operators and solve integral
equations are also presented. Seven illustrations, three tables, four
bibliographic references.

UDC 681.33
DEVICE FOR AUTOMATED INPUT OF PARAMETERS OF DISCRETE-ANALOG NETNORR MODEL
[Abstract of article by V.V. Garmash]
[Text] A device for inputting network model parameters and interfacing with the
memory circuit of the node element is examined which can be used to fully
automate the process of inputting Rc-netvork parameters. The device can be

used as the basis for creating a "RC-network -- digital computer" hybrid system.

006 681.3.056
WIDEBAND CODE-TIME INTERVAL CONVERTER
[Abstract of article by A.N. Bazhenov and Yu.I. Geraahchenko]
[Text] A converter is examined which uses information from a digital computer
or code assignment device to form a time interval in eight ranges (from 10'7
to 103 sec) in increments of 0.12 of the maximum limit of the range. The con-

verter is implemented using series 155 integrated circuits with minimum hardware.
One table, one illustration, four bibliographic references.

UDC 621.316
ANALYSIS OF INFLUENCE OF AVERACERS ON CODE-TIME INTERVAL CONVERSION ERROR

[Abstract of article by N.G. Rokhman]

[Text] This article analyzes the influence of buffer averagers connected to the
input of an adjustable frequency divider on variation of the error of a code-time

30

FOR 0FFNJA1.USEGDNLY
FOR OFFICIAL USE ONLY

interval converter. The most characteristic combinations of binary sub-
harmonic components of the output frequency of the adjustable frequency divider
are examined. One illustration, four bibliographic references.

UDC 621.317.08

INVESTIGATION OF ROTATION SPEED-TO-PULSE FREQUENCY FEEDBACK CONVERTER
[Abstract of article by V.l. Dotsenko and B.A. Furmaa]

[Text] This article demonstrates the advantage of modulating the U-factor of the
sensing element of a feedback converter prior to modulating the feedback
coefficient. A method for improving the converter resolution is examined, and
recommendations are given for the choice of frequency and operating clearance.
Three illustrations, two bibliographic references.

UDC 681.36

PROCEDURE FOR CONFIGURING PATCH PANEL WITH MATRIX SWITCHES FOR HYBRID COMPUTER
SYSTEMS

[Abstract of article by V.N. Gugnin]

[Text] This article considers configuration of the patch panel and logical
description of the modules in a device for controlling an automatic patch panel

using structural matrices of acceptable connections between decision modules in

the analog section of a hybrid computer system. The application of the configuration
of the patch panel of two-stage switching circuit is demonstrated using an example.
Eight illustrations. two bibliographic references.

UDC 681.33
NODE ELEMENT OF DISCRETE-ANALOG NETWORK PROCESSOR
[Abstract of article by V.H. Andriyevskiy]

[Text] Questions involved in construcling a node element of a discrete-analog
network processor based on pulse-time adjustable conductances are considered.

The advantages and disadvantages of these node elements are pointed out, and

ways of improving their accuracy and expanding their functional capabilities

are examined. The functional diagram of a node element with memory devices which
assumes the use of a digital computer to automate parameter setting is proposed.
Three illustrations, six bibliographic references.

31

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 68l.333(088.8)

SIMULATION OF DOMAIN-BOUNDARY FORMATION HODULES USING ALGEBRAIC LOGIC
[Abstract of article by K.A. Babordin]

[Text] The application of the apparatus of algebraic logic is demonstrated for
foraalizing the development stage of the circuits used in the domain-boundary
formation nodules which make up probabilistic hybrid computer systems which are
oriented towards solving boundary problems. Five illustrations, three
bibliographic references.

UDC 681.326.74
METHODS FOR ORGANIZING DIAGNOSIS OF SPECIAL-PURPOSE PROCESSORS AND DEVICES
[Abstract of article by 8.5. Khalatyan]

[Text] This article examines questions involved in organizing nicrodiagnosis
of special-purpose processors (SP) and devices using diagnostic instructions
represented by s,ecial microprograns. A generalized SP structure is
presented, along with the sequence used by the special processor to execute
the diagnostics. Besides a two-level (program and uicroprograa) organization
of SP diagnostics, another version is proposed which combines analysis of the
response of the SP with a procedure for diagnosing it at the nicroprogreu
level. The possibility of diagnosing peripheral devices without operator
intervention is indicated. Two illustrations, l6 bibliographic references.

UDC 681.326.?

FULLY SELF-VERIPYING TWO-LEVEL CONTROL CIRCUITS FOR ll OF 2n+l AND n+1 OF
2m+l CODES

[Abstract of article by V.V. Neshveyevl

[Text] A simple method is proposed for partitioning a set of code words of an
a of 2m+l and n+1 of 2m+l codes into two non-intersecting subsets which allows
for the structure of these codes.

It is fairly easy to use the partitioning obtained to construct fully self-
verifying control circuits for n of 2m+l and n+1 of 2m+l codes. One illustration,
five bibliographic references.

UDC 621.382
AUTOMATED MONITORING SYSTEM FOR DISCRETE DEVICES

[Abstract of article by V.V. Antosik, P.H. Demochko and R.I. Krutykh]

32

FOR OFFICIAL USE ONLY
FOR OFHCIAL USE ONLY

[Text] This article examines an automated control system controlled by an
"Elektronika 100/161" computer which can be used for functional control of

discrete devices with up to 512 outputs. The functioning accuracy of the
control system with single-output and two-output control circuits is estimated.
One illustration, four bibliographic references.

UDC 658.5;681.3;62--501.72

METHOD FOR DESIGNING DIGITAL SYSTEMS FOR REGULATING TECHNOLOGICAL PARAMETERS
WITH SELF-TESTING

[Abstract of article by T.G. Hashchenko, 0.I. Potepukh and T.A. Yakovenko]

[Text] This article examines the possibility of self-testing during functioning
of digital systems which regulate technological parameters. Duplication testing
is used to organize system self-testing. A digital system for regulating
technological parameters is used as an example for examining the methodology

of designing self-testing systems. Three illustrations, faur bibliographic
references.

UDC 681.324

ESTIMATING EFFICIENCY OF SPECIAL-PURPOSE COMPUTERS
[Abstract of article by Sh.Sh. Agzamovl

[Text] Criteria are proposed for estimating the efficiency of special-purpose
computers which allow for the specific characteristics of the computers, the
problems to be solved, and the specific requirements of practical utilization
of the devices. Allowance is made for limitations on the parameters and the
influence exerted by each parameter on the operation of the device. The
efficiency of special-purpose computers is estimated with respect to a single
abstractly simulated standard structurr which has optimal parameters and
solves one specific problem. One illustration, seven bibliographic references.

UDC 681.142.65

COMPARATIVE ESTIMATION OF ACCURACY AND SPEED OF COMPUTERS IN SOLVING STANDARD
PROBLEMS -- A REAL-TIME RING TEST

[Abstract of article by Sh.Sh. Agzamov]

[Text] This article considers problems involved in comparative estimation of
the accuracy and speed of the EMU-lo analog computer and of digital computers
in solving the ring test problem (standard problem) in real time.

A comparative estimate of the accuracy and speed of an "-7000 digital controller
and a digit-analog computer system is made for solving a standard problem using

33

FOR 0FFNHAJ.USE{DNLY
FOR OFFICIAL USE ONLY

the first-, second- and fourth-order Runge-Kutt method. One illustration,
five tables, six bibliographic references.

UDC 621.391.175

ANALYSIS OF CONTROL SYSTEH DATA PROCESSING DEVICES
[Abstract of article by G.P. Krivulya and A.A. Ushskov]

[Text] This article examines the organizational principles of data processing
devices in control systems with s "pass-fail" classification of the object.
The estimate and results of computer modeling of different methods of organizing

control systems are presented. Tho illustrations.

UDC 62l.9.06--529: 681.323

EFFICIENCY OF UTILIZING INTERPOLATION ALGORITHMS IN NUMERICAL PROGRAM CONTROL
SYSTEHS

[Abstract of article by V.D. Baykov and 5.“. Vashkevich]

[Text] The use of additional microcircuits to increase the capacity of micro-
processor devices is proposed for numerical program machine tool control systems.
Quantitative estimates are given for interpolation algorithms with and without
additional microcircuits, and the effect of their use is evaluated. A criterion
is cited which demonstrates the possiblity of increasing microprocessor capacity
by using additional microcircuits Two tables. six bibliographic references.

UDC 681.325.65

AUTOMATION OF ADJUSTMENT 0F ELECTROTECHNICAL LSI TOPOLOGY TESTING NODULE IN
SAPR USING SYMBOLIC METHOD

[Abstract of article by V.P. Rubtsov and A.H. Abbsov]
[Text] A method is examined for automating electrotechnical testing of the
symbolic plan and then the topological drawing of large-scale integrated circuits.

The task is reduced to the solution of a system of logical equations. The method
has sufficient technological stability and guarantees complete testing. Three

illustrations.

UDC 681.34

CONPUTBR CAPACITY IN EXECUTING FUNCTIONAL DATA TRANSFORMATIONS

[Abstract of article by N.I. Korsunov]

[Text] The capacity of digital, analog and hybrid computers in computing
functions is examined on the basis of the input data transformation rate.

34

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Relationships are obtained which can be used to determine the capacity of computers
and the necessary memory load. The efficiency of using various types of
computers for function computation is analyzed, and an example is presented and

used as a basis for obtaining numerical results. Five bibliographic references.
UDC 621.3.019.3

SPECIAL STAGE IN OPERATION OF DIAGNOSTIC AU'I'GIATIC PROCESS CONTROL SYSTEM
ACCOKPANIED BY HANIFESTATION OF DEFECT

[Abstract of article by v.9. Shargovskiy and S.A. Strel'tsov]

[Text] A technical diagnosis stage is isolated -- from the instant the
occurrence of a defect is registered to the instant the tested object and the
technical devices associaled with the diagnostic automatic process control
system are disconnected. A justification is provided for the importance of
accelerating preliminary locations of a defect of the tested object as a whole.
or the automatic process control system as a whole. 'l‘vo illustrations, three
bibliographic re ferences .

UDC 681.33
SYNTHESIS OF OPTIMAL DIGITAL-ANALOG REGULATOR FOR CONTROLLING THERMAL OBJECT
[Abstract of article by G.V. Yevstratov]
[Text] his article provides a brief review of different approaches to
synthesizing optimal control of thermal objects, noting their shortcomings.
Based on the example of synthesizing a digital-analog regulator which is
optimal in terms of speed it is shown that this problem can be solved efficiently
on a hybrid computer system containing a dynamic model-analog of the thermal

object in the Rc-netuork circuit. Pour illustrations, eight bibliographic
references.

UDC 62-83
TECHNICAL LINEARIZATION OP CONTOURS OF DIRECT DIGITAL REGULATION I
[Abstract of article by A.l. Ovcharenko]
{Text} An original device for technical linearisation of direct digital

regulation systems is investigated; speed and error characteristics are
obtained. Three illustrations, two bibliographic references.

35

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 62-50-503

PARAMETRIC IDENTIFICATION OF HIGH SPEED AUTOMATIC REGULATION SYSTEM CIRCUITS
WITHIN CLASS OF LINEAR IMPULSE MODELS

[Abstract of article by A.I. Ovcharenkol

[Text] An approach is proposed for synthesizing digital automatic regulation
systems based on a priori knowledge of the parameters of the linear analog
system-model. Criteria are proposed for the correspondence of the impulse and
continuous models and parametric identification of the impulse linear model is
done. The condition for suppressing periodic modes caused by level quantization
in the analog-digital converter is obtained. Tho illustrations, six bibliographic

references.

UDC 681.3.02

ARRANGEMENT 0P CGlPONENTS ON PRINTED CIRCUIT BOARD SUBJECT TO VIBRATION

[Abstract of article by 3.". Rybnikov and A.I. Khyannikyaynen]

[Text] This article examines the problem of optimal arrangement of electronic
radio components on a circuit board subject to vibration. A foundation is
provided for the optimization criterion -- probability of failure-free operation.
The problem is stated in general form, and limitations are formulated. Five
bibliographic references.

COPYRIGHT: Izdatel'atvo "Naukova dunks", 1981

6900
C80: 1863/64

36

FOR OFTWCJAI.USIZ(NNLY
FOR OFFICIAL USE ONLY

UDC 681.3.06:681.34

ALGORITHM FOR ANALYZING PATCHING SCHEME 0? OPERATIONAL MODULES USED TO
SIMULATE AUTOMATIC PROGRAMMING SYSTEMS FOR ANALOG

Kiev CIBRIDNYYE VYCHISLITEL'NYYE HASHINY I KOHPLEKSY: LOKAL'NYYE ASU I
USTROYSTVA VYCHISLITEL'NOY TEKHNIKI in Russian llo lo, 1981 (signed to press
6 May 81, manuscript received 10 Jan 80) pp 20-23

[Article by A.N. Klimenko from book "Hybrid Computers and Systems: Local
Automatic Control Systems and Computer Devices", edited by C.Ye. Pukhov
(editor-in-chiel’) et a]... lzdatel'stvo "Naukova dunks", 1000 copies,

121 pages]

[Text] In designing hybrid computer systems (HOS) with automated analog computer
programing systems (MCPS), the problem of arranging the operational units of
the analog section in the “CS design units, or modules, must be resolved [1].

The quantitative and qualitative makeup of the H68 modules combined by a cannon
hierarchical switching system, and of the problem set [2], must be established

a priori in each specific HCS during the design process. In order to minimize
developmental hardware costs without limiting the functional capabilities of the
future ucs with MCPS it is necessary to sake a preliminary analysis of the
operational unit patching schemes synthesized by the MCPS for various mathematical
descriptions of the systems of differential equations to be solved. As a result,
this analysis should provide material for optimal arrangement of the operational
units by modules and to determine the nature, type and number of connections
between operational units within and without a module.

This article describes an algorithm for analyzing the patching circuits of
operational units in the analog section of an “OS. The structure of the algorithm
and an example of its utilization are examined, and the results are discussed.

The criterion for optimal arrangement of operational units in modules is an
indicator which makes it possible to concentrate operational units in each module
which have the maximum number of interconnections and minimal interconnections
with units which are part of other modules.

The unit combination efficiency indicator

v I r/(r 4' s), (1)

37

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

where r is twice the number of interconnections between the operational units
which are proposed to be contained in a single module; s is the number of
external connections of these units.

Figure 1 shows the flowchart of this algorithm. The initial data for the program
consists of the following files: string array SHTIlzT] -- the module composition
by types of operational units; integer array SHKIl:T] -- module composition in
terms of number of like operational units; boolean array Pll:N,l:Fl -- an ordered
file of connections between operational units in the circuit being analyzed;
string array Hsllle -- an ordered file of the operational unit types which are
part of the circuit being analyzed.

Here N is the number of operational units in the circuit; P = N + Q, where Q is
the number of nonstructural inputs and outputs in the operational unit patching
circuit.

Block PHI executes the following operations:

-- converts file SHK to an analogous file HKT [1:KRTI by removing those
operational unit types from SHK which are not used in the circuit being
analyzed;

-- forms file MN [lzKRT], which contains information about the maximum number
of different types of operational units in the circuit being analyzed;

-- computes H, which is the maximum attainable number of operational units in
the module for a particular circuit;

-- pads files RP and SP [l:N] with values of ri and 3i computed by file P
for each operational unit.

Block EFl computes the efficiency of combination for two operational units
connected directly to one another.

Block EFZ computes the effic1ency of combining MTEC = 3, a, ..., H operational
units in a module. The combination of operational units in the circuit which
are acceptable from the viewpoint of qualitative and quantitative module
composition are examined for each value of HTEC, and file KORD [l:N(H-2)l is
used to store the combination with maximum elficiency which contains that
operational unit for each of the N operational units. File BF 2 [l:N(H-2)l
stores the current maximum efficiency values achieved during the sorting, while
file KORD stores the coordinates of the combined operational units.

If this section of the algorithm were to be implemented on the basis of a
combination generator with complete trial and error, the time expended would
be estimated by the number

KC- M ﬁrst (2)
MAE-J '

38

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Figure 1.
Key:
1. start 9.
2. initialization and data
input block 10.
3. yes ll.
4. no
5. set initial combinations 12.
6. combination acceptable? 13.
7. end combination in.
8. set next combination 15.
[6.

 

MTEC: -2; assign initial value
P01

assign initial value of P02
assign initial version for
file RE

P02 improved?

end of alternate?

assign new version

P01 improved?

end

The number of trials is reduced by supplementary analysis of the conditions for
placing an operational unit in a module allowing for limitations with respect

to number and type containvd in files MN and HKT.

After eliminating identical combinations from file KORD, block PMZ forms binary
file NOH [1:HIKONIM-le, whose boundaries are stored in file NIKON ll:(H-2)] for
each value of HTEC, for each value of HTEC. These are then used as the values

of the variable IKON.

39

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

The next segment of the flowchart of the algorithm processes file NON, which
contains the set of combinations which can be used as the basis for organizing
modules. Some of these combinations form nonintersecting sets, i.e., they
contain different operational-unit numbers which are assigned to the operational
units during synthesis of the functional diagram. These combinations correspond
to maximal utilization of the capabilities of the hardware content of the
modules when they contain the operational unit of a specific circuit. The
choice of combinations which are nonintersecting sets in the aggregate is not
unique. The algorithm selects as optimal the version which corresponds to one
of the maximal numbers of nonintersecting sets. This version provides the
minimum number of residual combinations at the same time. These occur as the
result of eliminating the operational-unit numbers which belong to the non-
intersecting sets from the combinations which comprise intersecting sets. The
residues, which are subsets. are eliminated. Finally, the number of design
modules fitted in a particular circuit will be minimal.

    
 

L- - _.........I

Figure 2.

File RB llleON) is used to store the intermediate results. The final results for
each value of HTEC are stored in file REO [lzIKON]. The optimal final result of
all HTBC values obtained is selected. This is entered in file RBOPT [lzIKON].
These files are formed by blocks 3P1. BFZ and BFJ. Optimality indicators P01 and
P02 are used in searching for the optimal version.

The program which implements this algorithm is written in PL/l and includes only
300 operators. The debugging was done on a Yes-1020 computer. Program translation
and editing requires 9 minutes. The example presented below was solved in 2 minutes.

60

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

The functional diagram of the operational unit patching scheme shown in
Figure 2 is used as the example.

1 Initial a: SHT [1:T] - C. H, Y, U, SHK [lzT] - 2, 2,3,2; N . ll;
F ' 23, P[1:N,I:P] ' 0,0,0,0,l,l,l,0,0,0,0,1,0;0,0,0,0,0,1,1,1,0,0,0,0,0;0,0,0,
llototollillotlioloi;o’°lllololo)o,o’oOoll’o,oD:10090lo’03000’090919090,031Il’
0,0,0,0,0,0,0,0,0,0,0;I,l,0,0,0,0,l,0,0,0,0,0,0;0,1,1,0,0,0,0,l,1,0,0,0,0;0,0,
1,0,0,0,0,l,1,l,0,0,0;0,0,0,0,1,0,0,0,l,0,0,0,1:0,0,l,150,0,0,0,0,0,1,0,0.

Here c. R, Y, U are the names of the operational units.
Results:

\
H ' 4; KRT = 2; HKT [lzKRT] ' 2,2:
MN I1: KRT] ' 6,11

RP [1: N] I 0,0,0 ,0,0,0,2 22, 2, 0,2
SP [lzN] - 4,3,4 ,2,2,2,2 ,3, 3, 3,2
NIKON [1: (u-2)] - 5,11;
HTEC ' 3,
N0" [1:5] = I,5,7;2,6,7;3,h,ll;3,8,9;5,9,10;
EFZ [1:5] = 0.600; 0.666; 0.800; 0.714; 0.600;
REO [1:5] . 2,6,7;3,a,ll;5,9,l0;l;8;
HTEC ' 4;
N0" [1:6] 3 l,2,7,8;2, 6, 7, 8; 3, 4, 8, ll; 3, 5, 8, 9, 3, 4, 6, 9, ll; 1, 5, 7, 10;
5P2 [1:6] ' 0.625; 0. 716; 0. 800; 0.625; 0.800; 0.615;
850 [1:6] ' 3,5,9,ll;l, 5, 7, 10; 0; 2, 6, 8; 0; 0;
REOPT I1 6] = 3,4,9,ll; l, 5, 7, 10; 0; 2, 6, 8; 0; 0.

The dotted lines in Figure 2 set apart the sections of the circuit which the

program placed in different design modules in accordance with the data held
in file RBOPT.

In terms of the number of combinations tried, the following results were obtained
for this example. With a complete exhaustive search of (2)

KC - c311 o c411 - 165 + 330 - 495.

Considering the limitations included in the algorithm, this number of combinations
was

Kcmmc - 151 + 199 - 350.

I
The number of combinations for which the efficiency is computed is

Kcaccept ' 135 9 150 = 285.

61

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

It follows from this data that in this example when exhaustive search is used.
210 combinations are unacceptable, while 65 are unacceptable for the truncated
search.

He note in conclusion that repeated application of this program to different
functional diagrams of operational unit patching makes it possible to work out
an optimal composition of modules for a given class of problems solved by an
ncs, and to obtain statistical data for equipment loading and configuring
automatic ncs patching systems.

31 Bl. IOGRAPHY

l. ﬂannauer, 0. Automatic patching for analog and hybrid computers.
Simulation, 1969, 12, N 5, p. 219-232.

2. Kalashnikov, V.I., Klimenko, A.N. "Approach to creating automatic patch
panel for analog computer", in "Teoriya, matematicheskoye obeapecheniye
i primeneniye neodnorodnykh vychislitel'nykh sistem: Haterialy seminars"
[Theory, Software and Application of Heterogeneous Computer Systems:
Seminar Materials]. Moscow, December 1973. Moscow, Izdatel'stvo HDNTP,

1973, pages 153-158.
COPYRIGHT: Izdatel'stvo "Naukova dumka", 1981

6900
CSO: 1863/66

42

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 681.326.74

l
METHODS FOR ORGANIZING DIAGNOSIS OF SPECIAL-PURPOSE PROCESSORS AND DEVICES

Kiev GIBRIDNYYE VYCHISLITBL'NYYE HASHINY I KOHPLBKSY: LOKAL'NYYE ASU I
USTROYSTVA VYCHISLITEL'NOY TEKHNIKI in Russian No b, 1981 (signed to press
6 May 81, manuscript received 11 Jan 80) pp 56-59

[Article by R.S. Khalatyan from book "Hybrid Computers and Systems: Local
Automatic Control Systems and Computer Devices", edited b G.Ye. Pukhov
(editor—in-chief) et 31., Izdatel stvo "Naukova dumka", 1 00 copies,

121 pages]

[Text] The extensive use of microprograming in computing practice has led to
the development of diagnostic methods with improved localization capacity. Based
on analysis of computer microdiagnostic procedures (microprogrammed diagnostics).
the item [1] isolates methods of implementation which use programs of
instructions which comprise the instruction system of the computer being
diagnosed, as well as special microprograms.

It should be noted that certain assumptions limit application of the methods
considered in [I]. For example, the remark in [2] with respect to the implicit
assumption that micro-operations can only "disappear" is valid. He might add
that the method proposed in [1] for obtaining the set of micro-instructions
which makeup a special diagnostic microprogram facilitates obtaining micro-
instructions with compatible micro-operations; however, the question of
selecting those micro-instructions which would satisfy the "observability"
condition defined in [3] still remains unresolved.

The results of [6,5], which examine a1"unspooling" procedure which can be used
to define a special microprogram, agree with the transportability and
observability conditions in [3]. However, these articles examine discovery
for an autonomous device. The case of asynchronous devices, for all of which
transportability condition must be met in diagnosis, is omitted.

Articles [6-8] are practical examples of microdiagnostics executed by special
microprograms for devices interfaced with computers. However, these articles
resolve the problems of diagnosing only individual sections, rather than the
entire device. For example, [7] develops a flag for loss of data occurring due
to loss of synchronization signals for a disc controller.

63

FOI.0FT1C]AL.US£10NLN
FOR OFFICIAL USE ONLY

The development of computer peripherals and increased requirements for repairability
make it necessary to work out methods of organizing diagnostics with application

to broad classes of interfaced devices. One such class consists of special-

purpose processors (SP) for processing data files. Analysis of SP development
carried out in [9-16] allows us to isolate the following canon structural
properties:

-- the presence of cousunications devices which facilitate two-way co-ainications
between the SP and central processor, as well as the arrangement of controlling
the exchange of control words and operands with the CP;

-- the presence of two asynchronous microprogramed controllers, one of which
operates with the controller and the other with the arithmetic device;

-- indexed addressing of data read from or written into random-access memory
(m);

-- data verification;

-- the availability of words for controlling conversion of data read from or
written into RAH.

We note that the presence of a buffer makes it possible to combine data
process and input, while the bucket-brigade principle allows II data to be
processed simultaneously (where m is the number of stages in the brigade),
thus providing rapid input.

SP data input begins after servicing the interrupt request sent by the controller
to the central processor through the cowunications device. In addition to the

interrupt request, the central processor recognizes the operating status of the
SP and its availability.

These features make it possible for the SP diagnostic system to use its HUI]
lnicroprogramaed controller] with special aicroprograms designed for micro-
diagnostics. When this is done, the microprograms will be used as diagnostic
instructions, allowing the central processor access to these microprograms and
writing in RAM the SP responses to the input sets from RM, producing an
interrupt request.

The constant addresses intended for predefined control or check information are
often used to write the SP responses in RAM. These may be used continuously

for the nondiagnostic operating mode of the SP, e.g., writing the 8P responses
according to the ASK [expansion not given] address. Then the constant addresses
are used in order to avoid using unchecked address formation schenes.

In organizing diagnostics for arithmetic unit schemes using the bucket brigade
data processing principle, data is taken from all stages of the brigade, making

44

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

 

Figure 1.

(Key given in subsequent paragraph -- Tr.]

large combination circuits making up the brigade checkable.

The SP systems testing mode can be augmented with microprograms which are used
to test the SP autonomously when the central processor is busy.

"hen servicing an interrupt request, the central processor sends the SP a
diagnostic instruction which enables a microtest microprogram which checks the
unchecked part of the SP. Hicroprogram level, either pre-prepared data

needed for the test is read from RAM, or internal test micro-operations are
executed, after which there is an interrupt request which flags completion of
the microtest. After the interrupt request is serviced, the central processor
analyzes the response in order to localize trouble in the section checked by
the microtest.

Figure 1 shows the component parts of an SP and the diagnostic hardware, where

the dotted lino indicates the following devices which operate in the diagnostic
mode: 1 —- central processor; 2 -- RAM; 3 -- communications device; A -- controller;
5 -- microprogrammcd operand and control word controller; 6 -- RAH address

formation circuit; 7 -- data verification formation circuit; 8 -- central
processor-~89 data exchange format converter; 9 -- microprogrammed operand

processing controller; lo -- flag register to coordinate work between the two
microprogranmed controllers; ll -- register for transmitting operands to processor;
12 -- bucket-brigade processor; l3 -- operand and intermediate result buffer;

05

F0l:0F1ﬂC1Al.USE(MVLY
FOR OFFICIAL USE ONLY

14 -- result register; 15 -- section of communications device which receives
diagnostic instructions; 16 -— section of controller which allows SP to

operate in diagnostic node in case of malfunction; l7 -- section of controller
which allows unformed addresses to_be used for writing into RAM; 18 -- switching
control for transmission of data from bucket brigade stages; 19 -- section of

microprogrsued operand processor used to store nicroprograms which control
autonomous diagnostics for processor.

Figure 2 shows the sequence in which the SP diagnostics are executed:

l - preparation of operands for diagnostic instructions and area of RAM where
SP responses will be written; 1' -- "available" SP state; 2 -- execution of
microtest nicroprogrsm; 2' -- CP awaits completion of microtest; 3 -- analysis
of SP response in order to localize trouble; 3' -- SP ”interrupt" status.

 

Figure 2.
Key:
1. central processor 5. operation of SP
2. execution of diagnostic 6. enable diagnostic instruction
instruction nicroprogram
3. analysis of SP response 7. interrupt request
A. request servicing 8. SP free

This is a two-level organization of the SP diagnostics. The actual diagnostic
procedure and analysis of results are activated at the program level, while the
procedure itself occurs at the microprogram level.

It is also possible to obtain a two-level organisation for the case in which
only the diagnostic procedure is activated at the program level. and the
procedure and its analysis are activated at the microprogram level. Then the
microprogrsnmed controller must be able to fetch both micro-instructions and
constants (as is done in the "Nairi" machines) and to compare particular bits

of the constant used for the standard with the response being tested. With this
nicroprogrammed controller design, trouble can be localized using the indication
of the microinstruction address, after which the comparison is made and the

46

li)R‘0F1ﬂClAl.lﬁﬂE(NNLY
FOR OFF“ 1Al. llSl-I ONLY

operation of the microprogrammed controller stops if the standard and the response
do not match. This sort of SP microdiagnostic organization is possible when the
microprogrammed controller has enough memory to store the standards. In general,
when special microprograms are used for SP microdiagnostics both with and without
combination, the problem arises of limiting the amount of microprogrammed
controller memory allocated for them.

when special microprograms are used as diagnostic instructions, the diagnostics
have the advantage that the SP is tested in real time without changing the
machine cycle in either the central processor or the SP.

Real time testing makes it possible to determine such time parameter deviations
in the SP operation as the SP--central processor connect time after an
interrupt request initiated by the SP is serviced. One example of detecting

a violation of synchronization in the operation of two devices in the SP

(in other words, the occurrence of a critical state) is the construction of a
microprogram which tests the conditions which occur after these devices have
operated. In general, the problem of constructing a diagnostic SP microprogram
reduces to the problem of accommodating, in the limited microprogrammed controller
memory, the diagnostic microprograms of individual SP sections which are
diagnosed in a defined sequence (for example, using the "unspooling" method).
The diagnostic microprogram designed to control the diagnosis of a particular
class of malfunctions in an individual section of the SP together with the
hardware associated with this section must have a self-diagnosing capability.

Representing diagnostic microprograms with diagnostic instructions makes it
possible to use them in sections which operate under the control of the
diagnostic monitor, which makes it easier to control the section. This
organization was used in developing the diagnostics for the SP which works in
the Yes-1065 computer system. The format of the diagnostic instructions

corresponds to the format of the channel instructions used in the Unified
Computer System.

In conclusion, we note the possibility of organizing a “closed" procedure
(without operator intervention) for diagnosing a peripheral processor or
peripheral devices. In doing this, the computer must have an error bit which
corresponds to the malfunctioning peripheral which, when the operating system

sets a fault flag, fetches the program for diagnosing the malfunctioning device

from external storage.
z

BIBLIOGRAPHY

l. Ramamoorthy, C.V., Chang, L.C. Modeling system and test procedures for
microdiagnostic. IBEE Trans. Comput. C, 1972, 21, N 11, p. 1169-1183.

67

FOR OFFICIAL USE ONLY
10.

11.

12.

13.

FOR OFFICIAL USE ONLY

Bedeshenkov, V.A., Volkov, A.F. "Automation of designing digital computers
with self-diagnosis of malfunctions." In "Diskretnye aistemy: Hezhdunar.

simpoz." [Discrete Systems: International Symposium]. Riga, Isdatel'stvo
"zinatne", Vol 2, p 45-54.

Dulyaey, V.A., Sivachenko, P.H. ?Princip1es of using microprogrammed
testing and diagnosing in small digital computers." OPRAVLYAXUSHCRIYB
SISTEHY I HASBINY, No 11, 1975, p 65-50.

Kagan, B.H., Hkrtumyan, I.B. "One approach to designing autodiagnostic
systems for digital computers." VOPR. RADIOELEKTBONIKI. SER. EVT, No 8,
1971, p 62-51.

Inagaki, H. Test and diagnosis program generation using microinstruction.
NBC Res. and Develop., 1972, N 26, p 35-52.

Pat. 3798613 (USA). Controlling peripheral subsystem/6.“. Edstrom, B.P.
Lutter. Publ. 19.03.74. .

Pat. 3882459 (USA). Deadracking [YﬁteI/G.J. Burlon, D.R. Taylor. Pub.
06.05.75.

Pat. 3911602 (USA). Diagnostic block in a computing system/P. Lea.
Pub. 07.10.75.

Lebedev, A.V., Hakarov, V.A., Sorokin, 6.x. "Special-purpose processor
for processing data files." In "Hnogoprotsessornye vychislitel'nye
sistemy" [Multiprocessor Computing Systems]. Moscow, Isdatel'stvo
"Nauka", 1975, p 100-109.

Gasparayan, L.Kh., Nalbandyan, 2h.S., Tadevosyan, V.A., et. al.
"Structural features and functional characteristics of matrix processor
in Yes 1045 computer." VOPR. BADIOBLBKTRONIKI. SBR. EV'I‘, 110 10, 1978,
p 105-109.

Novlin, R.H., Custafson, D. A microprogrammed machine architecture for
efficient matrix multiplication. In: Ninth Annul. Workshop on Hiero-
prograuming. Sept., 1976. New York, 1976, vol 7, no 3, p 56-61.

Lynch, ".0. How to stuff an array processor. In: Proc. Third Texas
Cont. Comput. Systems, 1976. New York, 1976.

Pat. 340611 (USA). Parallel operations in a vector arithmetic
computing ayatem/A.D. Falkoff. Publ. 22.05.69.

68

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

15. Pat. 3S3707h (USA). Parallel operating array conputer/R.A. Stokes,
0.11. Barnes. Publ. 27.10.70.

15. Pat. 3541516 (USA). Vector arithmetic lultiproceaaor computing systen/
0.11. Sensing. Publ. 27.10.70.

16. Pat. 3775753 (USA). Vector order computing ayaten/H.D. Kaatner.
Publ. 27.11.73.

COPYRIGHT: Izdatel'atvo "ﬂaukova dunka", 1981

6900
080: 1863/66

109

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 681.33
SYNTHESIS OF OPTIMAL DIGITAL-ANALOG REGULATOR FOR CONTROLLING THERMAL OBJECT

Kiev GIBRIDIWYB WCIIISLITBL'NYYE HASHIIIY I KOHPLEKSY: LOKAL'NYYE ASU I
USTROYSTVA VYCHISLITEL'NOY TBKHNIKI in Russian No 4, 1981 (signed to press
6 May 81, manuscript received 10 Jan 80) pp 99-102

[Article by G.V. Yevstratov from book "Hybrid Computers and Systems: Local
Automatic Control Systems and Computer Devices", edited by G.Ye. PURhOV

(editor-1n-chlef) et al., lzdntel'stvo "Haukova dumka", 1000 copies,
121 pages]

[Text] The investigation of heat- and mass-transfer systems requires solving
analysis and synthesis problems. In solving analysis problems, the

stability and performance of the system in question must be determined. Since
the main tasks of design are to select optimal object parameters (parametric
optimisation) and to synthesize a system for contiolling the object, the
synthesis problem consists essentially of selecting the structural diagram of
the system, its parameters and technical implementation such that the required
control performance is provided.

The methods used to control objects derend upon the available data. Since it
is impossible to obtain complete information on the status of heat- and mass-
transfer processes under actual conditions, the problem of synthesizing optimal
control of these processes with incomplete measurement is also urgent when all
types of limitations are manifested in the optimal process, in terms of both
the output coordinates of the object and the control action. The latter
includes problems involved in investigation and synthesis of thermostatting

systems.

The Department of Automation and Telemechanics at Khar'kov Polytechnical
Institute imeni v.1. Lenin has been working for several years on synthesizing
optimal control in heat- and mass-transfer systems with incomplete measurement,
and on solving direct and inverse thermal conductivity problems which are very
close to optimization problems in three directions.

The first direction in solving these problems using RC-netvork models vhich
implement a numerical method is universal. It can be used to model boundary

problems of field theory in any statement for bodies with complex boundaries
with sufficient accuracy, and is in terms of many indicators competitive with

50

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

digital computers. since the electrical time in Rc-network integrators is
many times smaller than the actual thermal time, comprising a fraction of a
second, RC-models are automated. This favorable feature reduces the labor
involved in reaching a solution. One shortcoming of this method is the
increased complexity of the hybrid computer system and its reduced reliability
as the requirements for solution accuracy increase.

The second direction of solving such problems encompasses a narrower group of
objects for which, allowing for their singularities and using several
insignificant simplifications and the choice of a coordinate system, it is
possible to find a mathematical model which describes that object with the
required accuracy. Furthermore the mathematical model is sought in the form
of a system of algebraic equations which is suitable for solution by computer
using numerical methods, or which can be solved analytically. This approach
was used in [l] for the optimal arrangement of heaters along the surface of a
chamber, and for using them as the basis for synthesizing a hybrid computer
system for solving optimization problems and direct and inverse field theory
problems; of the thermostat with assigned limitations on the temperature drops
across the thermostat chamber lsic -- TL].

The third direction in solving optimal control problems is examined in [2,3].

A number of qualitative and quantitative criteria are used to select a

solution method and means for its numerical implementation. As was shown

in [lo], the conclusion of the advantage of numerical methods should not impede the
development of analytical methods, which have the undisputable advantage that

they can be used to obtain a numerical solution at a given point at a given
instant. If an analytical solution can be implemented by computer, and if the
accuracy, cost and time of the solution are comparable to the analogous values

for a solution obtained numerically, the analytical solution is preferable.

Let us consider the synthesis of a digital-analog system for solving optimal
control problems in more detail.

Figure I shows the functional diagram of a hybrid computer system for
investigating RP-objects [expansion not given]. This setup includes the

following basic elements: digital-analog network model -- RC-network; boundary

and initial condition assignment section; time interval formation section; digital
control and readout device; data measurement and display device and regulator
model which, in turn. consists of th: regulator itself, a reference—input element,
actuator, repeater and sensor.

The structure and operation of sections (5), (7), (8), (9), (10) and (ll) is
described sufficiently completely in [5,6,8].

The main element in the hybrid computer system is the passive RC-network, which
Serves as the dynamic model-analog of the RP-object of control. This network

51

FOR OFFICIAL USE ONLY
FOR OFFICIAL USP. ONLY

 

Figure 1. Figure 2.
Key:
1. reference-input element 1. reference-input element
2. regulator 2. regulator
3. sensor 3. ID [expansion not given]
a. repeater A. correction device
5. boundary condition 5. actuator
assignment section 6. data display device
6. actuator 7. RC-network
7. discrete-analog network 8. sensor
model 9. repeater
8. data measurementand display
device

9. time interval formation unit

10. digital controlsnd readout
device

11. initial condition assignment
section

integrates the equations which describe the dynamics of the thermal field in
the area in question. As a result of integrating the original equation, the
RC-network forms the current values of certain components of the state vector
of the controlled object. For example, the RC-netuork defines the nonstationary
thermal state of elelents of the construction when entering the thermostat mode.

The boundary condition assignment section or actuator of the regulator produce
the inputs -- currents and voltages -- applied to the RC-network; these serve as
the analog of the controlling thermal action.

52

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Let us consider a special case which is fairly .important and often encountered
in applications: this is the case of optimal control, in terms of speed, of an
RP-object when the end state of the object is reached at the maximum value of
the control action, and arbitrary limitations are placed on its output
coordinates and on the control actions. This condition is characteristic for
transient operating modes of most thermal objects. This causes stabilization
sectors to occur in the control which correspond to movement of the controlled
object along the boundary of the region of acceptable parameters. The control
has maximum value everywhere (except for special sectors), i.e., it is on the
boundary of the region of acceptable states. This feature of this class of
Optimal control problems makes it possible to obtain solutions using a hybrid
computer system with the proposed structure.

I

In order to obtain a solution to the optimal problem, the operation of the
system is organized as follows. If the state vector is located within the
sly-domain of acceptable parameters, the regulator allows the maximum tolerable
control actions to be output to the RC-network. As soon as the boundary of
the Sly-domain is reached, the regulator corrects the CU [expansion not given]
such that the maximum values of the monitored parameters are not exceeded.
Thus, the problem of the synthesized optimal regulator is to organize movement
of the model-analog of the control led object along the boundary of the region
of acceptable values. In solving this problem, the regulator and the DASP

[expansion not given] represent a closed system which keeps the output
coordinates of the controlled object at acceptable levels.

Figure 2 shows the functional diagram of an optimal regulator with manual

optimal solution search. Manual optimal solution search in a closed control
system assumes the presence of an operator. The person using the data display
device to observe the transient process on the object keeps the output coordinates
of the object at acceptable levels. The operator does this by means of the
correction device, which acts upon the regulator for Tzap starting with output

of pulse 11 (decision time) from the digital control and display device (cf. Figure
1). For time 1“ the regulator outputs maximum control action to the actuator
and then to the object. After that, ordinary (e.g., proportional) regulation
begins, which optimizes the error.

The operator's task is now to use the model with the help of the correction
device to find a duration Tup experimentally such that the curve of the
transient process is optimal.

The actuator in a thermstatting system is a controllable reversible thermopile
in which, depending upon the magnitude and sign of the input current, the
thermopile isolates heat or cold with the appropriate magnitude [sic -- Tr.].
The electrical analog of the Lhcrmopile is a controllable reversible stable-

current source operating into a grounded load (Figure 3). The stable current
scurce uses a single .‘UTAOZA integrated circuit, which is an operational

53

FOR OFFICIAL USE ONLY
FOR!)FFK1A[.US£1DNLY

amplifier with simultaneous negative and positive feedback. Its output
current depends upon the input voltage

1,,-.U_i_‘1
R2°

The regulator implements the following control principle:-
P - Pmax - const, 0 5 t _<_ Tzap»

P . ekpkc - var, t > 1‘89,

uhere t is time; Tan is delay time in connecting negative feedback, i.e., the
amount of time the tﬁermopile operates at maximum power Pmaxi e is the
regulation error; RP is the regulator gain; kt is the gain of the thermopile.
Time 13.9 is measured by the 10 (cf. Figure 2).

Figure 4 shows the functional diagram of an optimal regulator which automatically
finds an optimal solution. Here information about the state of the object is
continuously input to the limitation section (8). It even one of the state
parameters of the object of control is too high, the limitation section acts

upon the correction device with memory (7) which reduces Tzap by one step.

During the next solution period 11 the process is repeated, continuing until
the state parameters of the object exceed their bounds.

since an RC-network hybrid computer system is a repetitive-solution model,
it can easily be used to implement this iterative method of solving these
problems. The use of iterative methods eliminates dynamic error and
increases the accuracy of the sought results.

Research has indicated that the solution to a problem on a search-type device

is obtained as the result of n iterations. However, the total solution time due
to search does not increase significantly. This is because of the high speed of
an Rc-network hybrid computer system.

in conclusion, we note that the structure of this hybrid computer system allows
it to be used to solve more complicated control problems, including those which

are characterized by the presence of several output coordinates of the object
which have different simultaneous limitations.

56

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

   

Key:

1. reference-input element

2. regulator

3. actuator

4. RC-netuork

5. sensor

6. repeater

7. correction device with memory

8. limitation section
BIBLIOGRAPRY

Yevstratov, G.V., Prokof'yev, V.Ye. "Mathematical model of temperature
field and optimization of placement of heaters along surface of thermostat
chamber." In "Teplomassoobmen i modelirovaniye v energeticheskikh
us:ranovkakh" [Heat- and Mass-Exchange and Modeling in Power Installations].
Tula, Tula Polytechnicsl Institute, 1979, Part 1. p 142-143.

Yevstratov, G.V., Prokof'yev, V.Ye. "Use of mathematical modeling methods
to identify and optimize objects with distributed parameters." In "Teoriya

i metody matematicheskogo modelirovaniya" [Theory and Methods of Mathematical
Modeling". Moscow, Izdntel'stvo "Nauka", 1978, p 110-111.

Biryukova, c.v., Yevstratov, G.V. "Approximation of Dynamic Characteristic
of Object with Distributed Parameters on Rc-Network Model." Present
collection. page 3-6.

Kozdoba, L.A. "Resheniya nelineynykh zadach teploprovodnosti" [Solutions

to nonlinear thermal conductivity problems]. Kiev, Izdatel'stvo "Naukova
dumka", 1976.

55

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Azsrov, 6.8., Andriyevskiy, V.M., Garmash, V.V., et.al. "Special-
purpose device for automating investigation of thermostatic systems."
In "Lokal'nye svtomatizirovannye systemy avtomatiki" [Local automated
automation systems]. Kiev, Izdatel'stvo "Naukova dunks", 1978, p 10-18.

Positive decision on application No. 2504609/18-20 (085553) on patent
(USSR) of 30 December 1977. "Device for modeling closed distributed control
systems." G.N. Azarov, V.M. Andriyevskiy, V.V. Garmash et.al.

Aleksandrovskiy, M.M., Yegorov, 5.3., Kuzin, R.Ye. "Adaptivnye aistemy
avtomaticheakogo upravleniya slozhnymi tekhnologicheskimi protaessami"
[Adaptive Automatic Control Systems for Complex Technological Processes].
Moscow, Izdatel'stvo "Energiya", 1973.

Yevstratov, G.V. "Time-interval formation section for digital-analog
network processor." In "matemsticheakoye modelirovaniye i gibridnaya
vychislitel'naya tekhnika" [Mathematical Modeling and Hybrid Computer
Techniques]. Kuybyshev, Kuybyahev Polytechnical Institute, 1977.

COPYRIGHT: lzdatel'stvo "Naukova dumka". 1981

6900
C80:

1863/65

56

FOR OFTWCJA1.USE{DNLY
FOR OFFICIAL USE ONLY

OPTICAL PROCESSING

ROIDGRAPI'IY AND OPTICAL PROCESSING OF INFORMATION 3 ms AND APPARATUS

Leningrad GOIOGRAFIYA I OPTIGBSKAYA 03mm mom'rsnx WY I APPARATURA
in Russian 1980 (signed to press 31 Dec 80) pp 2, 235- 236

[Annotation and table of contents from the collection "Holography and Optical
Processing of Information: HerthOds and Apparatus", edited by v. G. Skrotskiy,
8. G. ‘mrukhano and N. ‘rurukhano. Izdatel'stvo Leningradskogo institute yadarnoy
fiziki, 500 copies, 237 pages]

[Text] The 12th All-Union School on Holography was held according to the plan of
the Council on Holography attached to the Preeidiun of. the USSR Academy of Sciences
and was organized by the Moscow Order of the Red Banner of Labor Physicotechnical
institute.

mo following institutions participated in preparation and publication of the
proceedings of the 12th All-Union School on holography: the Leningrad Institute
of Nuclear Physics imeni B. P. Konstantinov. USSR Academy of Sciences. the Moscow
Order of the Red Banner of Labor Physicotechnical Institute and the Order of Lenin
Physicotechnical Institute imsni A. P. Ioffe, USSR Acadeey of Sciences.

The 12th All-Union School on Holography was held at Pasanauri.
Leading Soviet scientists and engineers assembled at the All-Union School to dis-
cuss the latest advances in holography, quantum electronics and recording media

for recording holograms .

'lhe proceedings of the 12th All-Union School on Holography are of interest for a
wide range of scientists and engineers specializing in the field of holography.

The organizing committee of the school is grateful to the participants who read
such interesting reports and presented them for publication in this collection.

Contents Page
1. N. a. aaranova, 8. Ya. Zel'dovich, V. v. shkunov and ‘r. v.

Yakov'leva, Theory of Restoring Fields by Wee-Dimmional
Holograms and Spectral-Angular Distortions 3-38

57

FOR OFFICIAL USE ONLY
2.

3.

‘0

Se

6.

7.

8.

9.

10.

11.

12.

13.

14.

15.
16.

17.

18.

FOR OFFICIAL USE ONLY

A. I. Sokolovskaye, Recording. Restoration (Conversion) of the
Light Have Front and Self-Focusingnﬂew Effects in stimulated
Hanan Scattering of Light

K. G. Prsdko and V. G. Senchenko, Information duaracterietics of
Fresnel Holograms When Producing Images Through Scattering Hedia

V. B. Nemtinov, The Structure and Quality of the Holographic
Process

V. A. Zubov and A. V. Krayskiy, Recording and Processing of
Hodulated Optical Signals

G. R. Iokshin, me Principles of Correlation Piltration in
Holography

V. A. Soyfer, H. A. Golub and A. G. Khramov, The Possibe and
Impossible in Digital Holography

Yu. I. Ostrovskiy and N. V. Abrozov, holographic Interferometry
of Moving Objects

N. G. Vlasov, S. G. Gal'kin. Yu. P. Presnyakov and B. H. Stepenov.
Elimination of Reflective Noise in Interferometry of Diffuse-
Reflecting Objects

A. V. Zuyevich. V. V. Alekseyenko and V. B. Govrushin, Bolo-
graphic Visualization of Underground Objects

K. B. Gendovich and K. s. Stoyanova-thkarova, Processing
Seismic Information with a coherent (ptical water:

--A. A. Rassokha and V. Ya. Antsibor. Holographic and Reflective

Interferometry in Some Probless of Rock Mechanics

Yu. A. Zurukhin, Visualization of Acoustic Objects Based on
Oolinear and Bragg Light Scattering on Elastic waves in Crystals

A. V. Zuyevich. Using long-Wave Holographic Systems to Visualize
Seismic Images

Ye. I. Shterkov, Dynamic Echo-holography
A. A. Passokha, holographic Diagnosis of hominhoeogeneous Solids

V. V. Alekseyenko, A. A. Bovin and A. V. Zuyevhich, Some Results
of Optical Processing of Geological-Geophysical Data

B. V. Peduleyev, V. P. Ryabukho and V. B. Rabkin, 'l'he Possibilities
of Measuring the Tesperature Coefficient of Linear Expansion of
Anisotropic and Isotropic Materials by the Holographic Interferom-
etry Method

58

FOR OFFICIAL USE ONLY

39- 55

56- 64

65- 85

86- 92

93-104

105-123

124-142

14 3-149

150-155

156-163

164-167

168-175

176-187
138-203

204-211

212-218

219-228
FOR OFFICIAL USE ONLY

19. A. P. Golikov, ll. 1.. Gurui and s. I. Pritkov. Holographic Method
of Monitoring Reflectors

20. N. A. Volyus, Bun Holography
COPYRIGHT: LIYaP, 1980

6521
cs0: 1863/26

59

FOR OFFICIAL USE ONLY
FOR OFHCIAL USE ONLY

UDC 778.38

RECORDING All) PMBSSING OE‘ snowman OPTICAL SIGNALS

Leningrad WIYA I OPTICHESIQYA 0mm INPORHATSII: METODY I APPARATU‘RA
in Russian 1980 (signed to press 31 Dec 80) pp 86-92

[Article by v. A. Zubov and A. V. myskiy from the collection ”Holography and 0p-
tical Processing of Information: Methods and Apparatus“, edited by v. G. shred-
skiy, B. G. Turukhano and N. Turukhano, Izdatel'stvo Leningradskogo instituta
yadernoy fiziki, 500 copies, 237 pages]

[Text] The use of a transient reference wave with linear variation
of frequency through the cross-section permits one to achieve to-
tal recording and processing of a modulated optical signal. These
problems were considered theoretically for monochromatic radiation
in [1, 2]. Experiments on rec0rding this signal are considered in
this paper and the operation of schemes that permit one to find
the structure of the signal and its spectrum with resolution con-
siderably exceeding the width of the laser spectrum and which
reaches fractions of a hertz are considered in this paper.

A diagram of a two-channel experimental installation is presented in l'igure 1.
Laser emission after diaphragm 01, which limits the Mmogeneous section of the
wave, is divided into two parts by means of a prism PR. A transient wave having
the following form in the recording plane is shaped in one channel formed by dia-
phragns 02 and D3 and the telescopic system L1 and 1.2 with (mali- -linear motion of
the components of L1 [3]:

wm- .tend-M9“ﬁr-11%;“! ‘1’

where K is the amber of the specific radiation mode, the total number of nodes i
N, Eek is amplitude, "k is the mean frequency and ak(t) is the random phase of
this mode. The second channel formed by the telescopic system L3, 1.4 and mirror

3 is the working channel. Thesignal is modulated in the mean focal plane of this
telescopic system. The effect of the object is modulated by an interrupter disk M
in the experimental circuit. Part of the emission of the working channel is de-
flected by a semitransparent plate to photodetector P80 and is further recorded on
an oscillograph OSTs so as to have informtion about the uplitude modulation of

60

FOR OFFICIAL USE ONLY
I-‘OII OFFICIAL USE ONLY

the signal being recorded. The radiation from the working channel impinges on the
recording plane xy and the direction of propagation is described by a cosine
cosexg. The field from the object has the form:

E. (up; 8., E.(t)exp[-Lw,tota,(¢).i‘.§lx cos 9"] ' (2)

where s is the number of the individual laser emission node and to (t) is the com-
plex amplitude that describes signal modulation. It ordinary conditions are ful-
filled. a hologram with amplitude transparency consisting of two components is
produced: a component related to a constant glow from two channels and a component
with information about the signal. This hologram can be exposed within a limited
time 1' since optical system 1.1 and L2 should operate in paraxial approximation when
the reference wave is formed. As a result of averaging the information, only terms
with s - k nuke a nonzero contribution during recording. As a result we have

"2 l _ UN
unf'j; E. (1 lg. g. EnP‘Pll-s? n cos 9“'t"7i’t] (u + (3)

+ complex integration

 

r Pigure 1. Diagram of mperimntal Installation for Recording Modulated
Optical Signals

cos ine--cos 0m
E,(x.l)-;'£mexp[-Lunlolbmllhlyf'cQSQm] . (4)

where m is the number of the node. All calculations were made in Fresnel
approximation. .

61

FOR OFFICIAL USE ONLY
m OFFICIAL USE ONLY

 

Figure 2. Diagram of Restoring the structure of a Hodulated signal

Optical system 1.5 performs the operation of Fourier transmutation in the restora-
tion phase. Let us take into account that u. - I «a... as; and the direction
cosine: can be selected so that looses-I - cosexﬁ; then for a hologram with di-
mensions equal to 2x0 along the x axis. the spread function has a sisple form

with regard to the final resolution of the field cosponent that produces the pat-
tern of the recorded signal in the rear focal plane W of the optical system, there
will be

.c(u.u~15,,e»[-w..ws;.m]E.(-ﬂ) . (6)

i.e. . the recorded modulated field is restored in threevdinensional representation.
Let us determine resolution by the distance between the zeros of apparatus func-
tion (5). which yields

“9% ~45? I ﬂu-m~lh .

Us“. ‘e (7)

The position of the restored image is given by the earimn spread function for no-
ments of time t - 1 172 and its dimions and nusber of resolved comments are
equal to

EW'Is'TI’a , «IT/518201.!“ '3? ~ (9)

The experimnt was performed with the following values: A - 0.6310”3 In. 1‘ - 6.8
seconds, v = 2 sale, f2 - 300 an, f5 - 300 In and 2x0 I 8 III- Calculation yields:
IcosekrI 3 0.023, 2 no a 14 an, at a 25 me, u . 0.05 an and n .. 280. The exper-
inental results for different modulation frequencies and different on-off tine
ratios are presented in Figure 3. ‘

62

PO! OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

The schens for finding themedulsted signal spectrum Pm) using steady restoring
wave (4) is presented in Figure 4. The field in observation plane xy, optically
conjugate with the hologram G, based on (3) within the conditions used in deriva-
tion of (S), has the form

t ”m “A“ﬂ’iW“ ‘Htﬁgu'iwflélﬁquu
.“g'”['t_”“ uguﬂﬂé’ﬁﬁ, . ' . . (9,

where the tilde sign corresponds to convolution of the signal spectrum with the
spread function. For three-dimensional resolution in the recording plane, based

on (9) and (8), we find
a
BX gag-£1. “2&5'?’ (10)

'no estimate the spectral resolution, let us make use of the concept ;o(t') in the
torn or a Fourier transform Fm), which yields the spread function

smcﬁ (95°53 —'¥.x)} (n)

An estimate or the width of the spread function is made similar to (7) and yieldh
60 - 41r/T. It should be noted that from the viewpoint of spectral resolution it
is more correct to proceed from the Rayleigh criterion, i.e., 59‘, - 5(2/2 - 211/?
or, converting from circular to orginary frequencies

”rd/T "d 'Xr'l‘fdalnﬂ. (12)

Thus, spectral resolution is determined by the total recording time. The disper-
sion range is determined by the frequency range recorded on the hologram. which is

equalto

ew-cﬂﬁl’l. or A§-%-2ﬁ: -_ (13)

Dispersion in the recording plane (see (12)) and the number of resolved components
(see (13) and (12)) are equal to

6),le,.-Vp,/Am. , "'19/‘9o'9ﬁ’o7 , (14)

The linear dimensions of the spectrum are determined by the maximum spread func-
tion for three-dimensional resolution at x I 1 x0, which yields

2X. - 21.13/15, ' ‘15)

63

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

With regard to the values used in the experiment (01 - 125 . pz - 260 n and
f5 - 85 an), we find the ﬁolloving estimates: 69p 8 0.9 s' , Sup 3 0.15 as,
pr a 0.03 an, Av a 85 Hz. cup/6X9 =- 5 Ila/m, 2x0 3 16.5 m and n a 550.

 

Figure 4. Dlaqnn for Finding the Spectrum of a Modulated Optical signal

The expetiuntal :estuls are presented in Figure 3. As was noted, the effect of an
object on the signal was uodulated by modulation at frequency of 1.03 and 2.06 It:
with different on-off tlne ratios. Celculation of the modulation frequency from
the spectmqrm yields 1.0 and 2.0 as. Illustrations show that the reel resolu-
tion considerably exceeds 1 Hz.

BIBLIOGRAPHY

l. Zubov, V. A” A. V. nayskiy and ‘1‘. I. manetsova. PIS'HA 2331?. Vol 13, 1971.

2. Zubov, V. A” mmm SOOBSEtMIYA PO P121“, No 7, 1972.

3. Borkeva, v. N. and v. A. Zubov, Proceedings of a Seeinar "New Developnente in
the P‘ield of Optical Boloqnphy and melt Industrial Use.” 21 pages , Inningnd,
lad-v0 were, 1979.

COPYRIGHT: LIYeP, 1950

6521
CSO: 1863/ 26

66

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 550.834
mLOGRAPHIC VISUALIZATION 0P UNDEIGKDUND OBJMS

Leningrad GOLOGRAPIYA I OPTICHESKAYA OBRABOI‘KA INFORMATSII: MBTODY I APPARA‘I‘URA
in Russian 1980 (signed to press 31 Dec 80) pp 150-155

[Article by A. V. Zuyevich. V. V. Alekseyenko and v. B. Gavryushin from the collec-
tion ”Holography and Optical Processing of Information: Methods and Apparatus",
edited by v. G. Skrotskiy, B. G. 'rurukhano and N. Turukhano, Izdatel'etvo Lenin-
gradskogo institute yadernoy fiziki. 500 copies, 237 pages]

[Text] The results of experiments on holographic visualization of
underground test objects are reported. The experimental installa-
tion is described. Holograms and restored inges of test objects
are presented. The design features of a marine holographic sys-
tem are discussed.

The past decade has been characterized by active development of the continental
shelf of the seas. with which the main hopes for solving the problem of expanding
the country's raw materials base are now linked. Development of the shelf assume
solution of a number of problems of both an exploratory and mercial nature.

One of these problems is detailed study of the upper part of the sedimentary mantle.
The need for this is related to problems of constructing stationary drilling plat-
forms, laying oil and gas pipelines and construction of underwater storage tanks.
ibreover, solving the problem of search for and identification of objects at the
bottom require development of means of visualizing seisnoacoustic images.

One of the met promising directions in solving the indicated problems are holo-
graphic methods. An experimental check of long-wave holography systems has been
made quite recently, but mainly under laboratory conditions [l~3]. It was feas-
ible in this regard to check the capabilities of holographic systems under condi-
tions approaching real conditions. This check was made in a test area on an
artificial reservoir. The test objects were located on the bottom or under the
bottom of the reservoir. The emitter was attached to a raft and was made inno-
bile during the experiment. The em.‘ .zter itself was assembled on the basis of a
piezoelectric cylinder (working frequency f - 10 kHz) and was equipped with a
shape: to create a main lobe radiation pattern of approximately 30'. Radio pulse
emission with pulse length of 1.0-2.0 ms was used. The fraeevork together with
the receiving antenna and part of the processing apparatus was moved along rails
laid along the basin. The receiving antenna contained 128 channels and the syn-
thesized (linear) dimension was approximately 42A. The channels were interrogated

65

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

during movement of the antemas at a frequency of 250 kHz along the antenna and
50 )lz in the direction of motion. The interrogation signal was fed by cable to
the processing system located on shore. The reference signal was simulated in an
electronic channel and the radiation pulse paramters and readout mode were con-
trolled from the control console of the processing apparatus. The information to
be recorded was stored on the target of a ZBLT [Shielded cathode-ray tube]. In
this case movement of the line along the fraue was synchronized with the movement
of the antenna within the aperture to be synthesized. A hologram which was subse-
quently visualized on the BLT [Cathode-ray tube] screen was formed on the target
won completion of the synthesis cycle. The hologram was then photographed from a
distance of 1.5-2 meters for the appropriate reduction, processed and the reduced
copy measuring from 0.6 x 0.6 to 1.0 m2 was restored in the light of a lie-Ne
laser. The restored image was observed in amicroscopic system.

The symbols "5" and ”H". made of sheet steel 1 cm thick. and also a pyramid of
marble cubes were used as the test objects. The dimensions of the "s" and ”H"
symbols were 2.0 x 1.5 m2 (13 x 10 A2) (the width of the letters was 0.45 m I J A):
while the side of the marble cube was 0.4 m or approximately 3 A. The "S" and
"H" objects were located under the bottom one over the other so that the symbol
"I!" was at a depth of 3 meters while symbol '5" was 2 meters above it and 1 meter
from the bottom. The vertex of the marble pyramid was located 1 meter from the
surface.

The shape of the objects. the recorded holograms and the restored images are pre-
sented in Figure l. The images are quite acceptable with regard to the complexity
of the medium and the smallness of the parts of the object. although not of very
high quality. which makes it possible to identify the objects with adequate
confidence.

The experiments showed that these systems permit one to solve the problem of
search and identification of objects in soils under marine conditions. This made
it possible to turn to developing a marine version of the holographic complex.

The complex is designed to solve problems of investigating the bottom and the bot-
tom sedimentary mass or rather its first few tens of meters under conditions of
the continental shelf at water depth of 100-150 meters. In this case the given
complex permits one to visualize (i.e., to obtain visual images of) objects of
different nature located in the bottom sedimentary mass.

The marine holographic complex now developed includes an aggregate of apparatus
assemblies and technical means of registration, recording, processing and visual-
ization of the holographic information on board a ship under autonomous navigation.

The complex consists of a ship on which the information recording, processing and
visualization apparatus is located and a towed device. The towed device is de-
signed to study the sounding signals, to record the signals reflected by the ob-
jects by the two-dimensional aperture synthesizing method and preliminary proces-
sing of the received signals.

Electronic apparatus that records and processes the information is located on the
ship. while the final result of processing is an acoustic hologram visualized on

66

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

an ELT screen. A visualized hologram photorecording unit and device for optical
restoration of hologram with a lie-Ne laser are located on the same ship. More-
over. a sounding signal power amplifier is located on the ship, while the ship
itself is equipped with a velocity measuring device required for proper recording
of holograms. The latter condition is related to the need for strict geometric
conformity between the position of the antenna within the aperture to be synthe-
sized and the position of the information to be imaged on the 5LT screen within
the frame. The towed device of the complex consists of a receiving antenna of
the preliminary processing unit of the damper-sinking emitter of the equipment
system designed for towing and loading-unloading by the towed system.

The receiving antenna is a hydroacoustic device having the shape of a wing in
cross-section. which provides the required hydrodynamics during towing. The an-
tenna consists of preassanbled sections, each of which contains rudder-stabilizers,
while the outer sections are also equipped with rudders-sinking units. A total of
128 hydrophones connected to amplifiers are located on the bottom of the antenna
in its middle part. The leads of the amplifiers are connected by cable to the
preliminary processing unit.

The preliminary processing unit is made in the form of a cigar-shaped gondola and
contains the electronic assemblies (phase detectors and decoder) for processing
the signals coming from the receiving components by cable.

The emitter is designed to irradiate the objects of investigation. The emitter
itself is made on the basis of cylindrical piezoceramics and is equipped with a
radiation pattern shaper. The skin of the emitter is made from an acoustically
strong material and mainly performs the function of providing the hydrodynamics
required for towing. Both gondolas are firmly connected to each other and are at-
tached to the antenna by two metal rods. The antenna together with the gondolas
has low positive buogancy. The outboard part of the system is towed by a tow
cable to which the camper-sinking unit is attached, that ensures towing safety
with sharp jerks of the rope. The cable is used to supply power to the outboard
electronic units. to control the operation of these units, to gather information
and also to excite the emitter. The equipment system includes a swivel, lowering-
raising system and a spring hook. The parameters of submerging the antenna and
stabilization of its course are varied manually in the given version, while the
parameters themselves are selected empirically. Foam plastic floats designed to
stabilize the depth of submersion are attached to halyards on the edges of the
antenna.

Tests of the running qualities of the outboard part of the complex, conducted in
1979 in a basin of the Sea of Azov, showed its complete suitability for operating
under maritime conditions by the long-wave holography method. The complete com-
plex will be tested in the near future. These experiments make it possible to de-
termine the capabilities of the long-wave holography method in solving problems of
marine geology and geophysics and consequently to determine the place of holo-
graphic systems in solving problems of exploiting the mineral resources of the
world ocean.

67

FOR OFFICIAL USE ONLY
1.

2.

3.

FOR OFFICIAL USE ONLY

BIBLIOGRAPHY

Heterel'. L. P.. "The Comparative Importance of Phase and Amplitude in Acoustic
Holography," ”mnichakaya qolografiya" [Acoustic Holography], tranelated
from mglish, uningrad, Sudostroyeniye, 1975.

Parr. J.. "Bxperinents in Acoustic Holography Using Oouputmﬂ' "Akueticheekaya
golografiya', Translated from English, Inninqrad, Sudoetzoyeniye. 1975.

Zuyevich. L. V. . v. V. Alekseycnko and V. H. mgak, "Recording and Restoration
of lazy-Wave Holograms in Small Apex-turn,“ PIS'HA v 231?, Vol 4, No 6, 1978.

COPYRIGHT: LIYaF, 1980

6521
C50:

1863/26

68

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 535
PROCESSING SEISMIC INFORMATION WIT}! COHERENT OPTICAL SYSTB‘I

Leningrad WINK I OP'I'ICHBSKAYA OBRABUI‘KA INPORHATSII: mom: I APPARATURA
in Rissian 1980 (signed to press 31 l:>ec~ 80) pp 156-163

[Article by K. B. Gendovich and x. s. Stoyanova-Pushkarova, Peoples Republic of
Bulgaria, from the collection "iblography and wtical Processing of Intonation:
Methods and Apparatus“, edited by v. G. Skrotskiy, B. G. Turukhano and N. 'ruru-
):hano, Isdatel'stvo Lumingradekogo institute yadernoy fisiki, 500 copies, 237 pages]

' [mitt] Some experimental applications of coherent optics and holog-
raphy methods are considered for processing seismic information.
A coherent optical-electronic system was used for spectral-correla-
tion processing of seismic time profiles containing a large volune
of intonation (approximately 10 bits). An autocorrelogram and
autocorrelation functions were found for the root or group of roots
of the seismic profile selected by the interpreter. The effect of
attenuation of short waves was estimated by the ”24-fold addition“
method and the unified statistical characteristics of the factors
that determine the capability of separating single waves to investi-
gate the seismic profile was found.‘

Problems of search and study of mineral deposits, solution of which is impossible
without the participation of couputers, have continuously become complicated during
the past few years. Most computers that are used, distinguist by low internal
storage and relatively low speed, are incapable of operationally processing the
continuously increasing volume of incoming information.

one of the methods of progress in the field of processing seismic information is
to coherent-optical computers characterized by high speed. economy and flexibility
in Variation of the program-algorithmic complex [1].

The purpose of the experiments is to obtain autOcorrelograns of the seismic pro-
file and also the autocorrelation functions of its individual sections.

The investigation was conducted by the total deep point method (HOG?) from a seis-

mic profile of the Black Sea hasin. The seismic profile was processed by the
/

’7» report was made at the llth All-Union School on holography.

 

69

FOR OWCIAI. USE ONLY
FOR OFFICIAL USE- ONLY

"24-fold addition" algorithm to reduce the interfering Off“?- 01 reverberation
caused by the water layer and the effect of multiple reﬂections prodmed frun

acme reflecting boundaries in the geological structure of the region. As a result
a time (seismic) profile consisting of 384 tracks (channels) with four seconds of
recording of each channel represented graphically by the variable width method was
obtained. 'me length of the seismic profile in the x direction on the profile was
9.6 km. Interfering multiple waves create imaginary reflecting boundaries on the
seismic profile, i.e., on the time image of the geological profile, which make
difficult both correct running of the following algorithm for digital machine
processing and clear interpretation of the results.

The effectiveness of the mentioned algorithm can be determined directly from the
autocorrelogrn and autocorrelation functions of individual sections but the type
and number of the reverberation systems, their attenuation factors. tectonic dis-
turbances and structural complications in the investigated region are determined
from the ratio of amplitudes of the secondary maximums and the main maximum of the

autocorrelation function .

The optical-electronic system used is shown in Figure l, where l is a laser. 2 is
a filter-collimating unit, 3 is microscopy of the seismic profile, 4 is an astig-
matic lens, 5 is a semitransparent mirror, 6 is a television camera, 7 is a monitor,
8 is a storage digital oscilloscope, 9 is a microcomputer and 10 is a photorecorder.

 

Figure l. Optical-Electronic systqn for Producing Autocorrelogram and Auto-
correlation Motions: l--laser: 2--filter-collimating unit; 3--
microscopy of seismic profile; 4--astigmatic lens: S-semitrans-
parent mirror; 6--tslevision camera; 7--monitor; 8--storage oscil-
loscope: 9--microconputerx lO--photorecorder

The original seismic profile is reduced by a factor of 18.7. The correct position
of the components in the optical system are monitored by means of a special scale
built into the pattern of the seismic profile prior to microfilming.

The square of the modulus of the microscopic spectrun is recorded in the spectral
plane of the optical system [2]. The positive microfilm produced in the next phase
is installed at the input of the system at the microscopic position. The desired
autooorrelogram of the seismic profile is found in the spectral plane of the opti-
cal-electronic system. The spectrum and autocorreiogram are shown in Figures 2

and 3, respectively. An image of the autocorrelogram can be observed on the monitor
by means of the television camera. Some changes were made in the camera to obtain

70

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

autocorrelation functions so that the light field impinging on the camera tube had
the capability of scanning in sequential lines. Il'he digital delay unit of the
storage oscilloscope was used to select the camera tube scanning line. The video
signals obtained from line scanning are converted to digital form and are recorded
in the memry of the microcomputer and in this case the scanning aperture can be
formed with sequential addition of adjacent television scanning lines. The auto-
correlation functions of the track or group of tracks of the seismic profile se-
lected by the interpreter are observed on the oscilloscope screen (Figure 4) .

The experimental method of obtaining the autooorrelogram excludes the necessity of
precise adjustment of the filter-hologram in the Van der Luchta method, as does
precise setting of the input object and filter in the front focal planes of the
first and second lenses, respectively. At the same time, a one-dimensional spec-
trm of the seismic profile is obtained as an intermediate result, which creates
specific conveniences for interpretation of the seismic wave field. The inconven-
ience of this method, like the Van der Luchte, is the two-step process of producing
the autocorrelogram.

Initial experiments devoted to investigating the possibilities of using the optical
medium to record a layer of Ag-As283 semiconducting metal produced by evaporation
without physicochenical processing were initially conducted to eliminate the in-
conveniences of the two-step process. The experiment was conducted by the scheme
shown in Figure 5, where l is a laser, 2 is a semitransparent mirror, 3 and 4 are
a filter-collimating unit, 5 is microscopy of the seismic profile, 6 and 7 are an
astigmatic lens, 8 is the medium and 9 is a mirror. A wavelength of - 514.5 nm
was used for holographic recording while the carrier frequency of recording was
equal to 1,000 lines/mm. m spectra are multiplied after the reference wave has
been eliminated and an autocorrelogram of the input object is observed in the out-
put plane [3).

 

figure 5. Optical-Electronic System of Multichannel Holographic Correlator:
l--1aser: 2--semitranspurent mirror; 3 and 4--filter-collimating
unit: S--microscopy of seismic profile: 6 and 7--astigmetic lens:
8--medium; 9--mirror1 lO--te1evision camera: ll--monitor1 12--
storage oscilloscope; 13--microconputer

Overcoming the two-step process of finding the autocorrelogram and autocorrelation
functions of the seismic profile creates real prerequisites for developing a more

71

FOR OFFICIAL USE ONLY
FOR OFHCIAL USE ONLY

complex multichannel optical-electronic device which can be included in the total
cycle of machine processing of seismic information: in an optical spectral analyz-
er (OSA)--filtration by frequency, by apparent velocities (indirection) and by wave
mater, and in a correlator--finding the autocorrelogram and autocorrelation func-
tions. This system permits one to realize different combinations of filtration
parameters with relatively low expenditures of time and funds and estimation of the
effectiveness of these parameters. One has in mind in this case that digital fil-
tration of such a large volume of information occupies such machine time, while

optimization of the operator for filtration makes processing more expensive as a
whole.

The purpose of making a spectral-correlation analysis of the results of "24-fold
addition" is to estimte the effectiveness of suppressing multiple seismic waves
which make difficult clear geophysical interpretation of the investigated pro-
file. The derived autocorrelogram shows the presence of intensive multiple waves
with a delay with respect to the multiple-generatrix in the range 1 - 0.02-0.2
second. Autocorrelation functions (Figure 4) which characterize the presence of
different types of reverberation systems were found on some segments of the auto-
correlogram. Accurate and complete interpretation of the results requires a knowl-
edge of additional geophysical and geological information and is the object of
other investigations. The effectiveness of attenuation of multiple waves by
"24-fold addition" (coefficient K) was estimated and the unified statistical char-
acteristic of factors was found that detemine the possibility of separating single
waves from interfering multiple waves (coefficient P):

‘..AJ:',
1. As

where A; is the amplitude of auxiliary maximum and A0 is the amplitude of the
main maximum

.Z‘Zi
p-m’

where 11 is the distance along the time axis between the first lateral maximum and
the main maximum, 12 is the distance between the main maximum and the lateral max-
imum of the greatest amplitude, T3 is the width of the main naximm, m is the num-
ber of auxiliary maximums and A is the total amplitude.

Data for coefficients K and P are presented in Table 1. The results show that
"24-fold addition" is sufficiently effective for sections II and III (Figure 4).
but it is not sufficiently effective for some multiple waves (K > 0.1). It is ob-
vious from the given values of P that favorable sections for separation of single
waves are III and V (0.9 < P i 2), while unfavorable sections are all the remaining
sections (P < 0.9).

The results of the experiments, like their geophysical interpretation, show the
possibility of including the described analysis in the entire cycle of processing
and interpretation of seisudc information. Development of an optical-electronic
spectral analyzer-correlator, which will simultaneously accomplish several process-
ing algorithms, is especially promising. This device say also find application in

72

FOR OFFICIAL USE ONLY
FOR OFHCIAL USE ONLY

Table 1.

 
 

—;£m-
HIIﬂ-I‘II'JI

    

in other multichannel geophysical investigations (for example, aeronagnetic inves-
tigations and aerogravitational investigations) which are related to processing and
interpretation of large files of geophysical information.
BIBLIOGRAPHY
l. Potapov, O. A" 'qatichukaya obrabotka geotizicheshoy i geologicheskoy infor-
natsii' [Optical Processing of Geophysical and Geological Infestation), Moscow,
Nedra, 1977.

2. Pontanell. A. and (3. Gran, ”Corro1etion Optiquo en Lumiere Cohermte." GEOPHYS-
ICAL PROSPECTING, No 1, 1971

3. Gooanan. J., “chdeniye v fur'yc-optiku" [Introduction to Fourier Optics].
Moscow, Mix, 1970.

COPYRIGHT: 1.1!“, 1 980

6521
C80: 1863/26

73

FOR OFFICIAL USE ONLY
FOR OFFICML USE ONLY

UDC 535
HOLOGRAPHIC METHOD OF CHECKING RBPLEC’I‘URS

Leningrad GOIDGRAPIYA I OPTICRBSKAYA Ol'RAerA INPOMTSII: NY I ”FNMA
in Russian 1980 (signed to press 31 Dec 80) pp 229-230

[Article by A. P. Golikov, H. L. Gurari. and S. I. Prytkov from the collection
"Holography and Optical Processing of information: Methods and Apparatus", edited
by V. G. Skrotskiy, B. G. Turukhano and N. 'l‘urukhano. Irdatel'stvo Leningradskogo
instituta yadernoy fiziki, 500 copies, 1837 pages]

[Text] The development of a use holographic method to measure the
radii of curvature cud local nurface distortions of large mirrors
are reported [1].

Serial production of large-diameter concave mirrors and especially of convex nir-
rors is now weakly stpported with checking equipment. an. complexity of developing-
nonaberration wave fronts of large aperture leads to an increase in the errors of
interference methods [2]. Methods that do not require special reference coeponents
«shift interferometry and interferometry with a scatterer-are applicable to anal-
ysis of only convergent radiation beams. It is significant for these methods that
the base of the measuring installation increases in proportion to the radius of
curvature of the mirror being checked. which in the case of concave mirrors of
small curvature makes the installation cumbersome and leads to a reduction of
measurement accuracy due to an increase of interference and in the case of convex
mirrors requires the use of large-size cospensators.

A schematic diagram of the experimental installation is presented in figure IV The
mirror to be investigated is illminated by a diverging flux of 15-38 laser emis-

sion through a scatterer arranged tightly against the mirror. ‘lhe reflected flux
through this scatterer impinges on a photographic plate and its hologram through

An increase of masurement accuracy is achieved by introducing compensatory rota-
tion of the mirror in addition to shifting of it. The interferograa is reduced to

7‘

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

by the measured values of shift and rotation, while the distortion of the mirror
surface is found by the shape of the bands of the interferograe.

    

/ //

Figure 1. Schematic Diagram of aperimental Installation

The holographic measuring installation with scatterer installed in front of the
mirror can measure the radii of curvature of mirrors from 200 Ill and above in di-
ameter with an accuracy on the order of 0.1 percent (for radii of curvature in the
range from lo to 50 meters). The overall dimensions of the installation over a
wide range are not dependent on the curvature of the mirrors being checked and
precision optics is not used during measurement. The relatively small base of the
measuring device and its independence of the curvature of the surface being
checked permits one to use the suggested method for production checking of metal-
optics under plant conditions.

BIBLIOGRAPHY
l. "USSR Inventor's Certificate No 593070,“ 3mm IZOBRETBNIYB, No 6, 1978.

2. Dukhopel. I. I. and L. G. Padilla. OPTIm-HBXHANICIBSKAYA PMSW‘, lb 7,
1973

COPYRIGHT : LIYaP , 1980

6521
CSO : 1863/26

75

FOR OFFICIAL USE ONLY
FOR OMCIAL USE ONLY

UDC 535

BB”! HOLOGRAPRY

Leningrad GOLOGRAPIYA I OPTICHESKAYA om INPORI‘WI‘SII: my I APPARATURA
in Russian 1980 (signed to press 31 Dec 80) pp 231-234

[Article by N. A. Valyus from the collection "Holography and Optical Processing
of Information: Methods and Apparatus“, edited by V. G. skrotskiy, B. G. 'rurukhano
and N. 'rumkhano, Izdatel'stvo uningradskoqo institute yadernoy fisiki, 500 copies.

237 pages]

[Text] An analog of the holographic image obtained in coherent light is an inte-
gral photograph recorded in noncoherent light.

An integral photograph, like holography, is characterized by "cowlete recording"
about the object, its volume and its relative position in space. The same pattern
can be recreated from the part of an integral photograph and frou a fragment of it
as from the entire photograph.

The inage of an integral photograph may be called beam holography since only the
anplitudes rather than the phase of the wave are recorded when using noncoherent
light and a description of the process is found within the framework of geometric

(bean) optics.

The principle of integral photography was suggested at the beginning of this cen-
tury by G. Lippnan, more well known for his idea of interference photographlh which
was a prototype of the modern reflective hologram substantiated and developed by
Yu. N. Denisyuk.

G. Lipptaan [1] called his method integral photography because the three-dimension-
al iaage produced is synthesized from ieages of a large nuaber of small micro-
scopic ieages of the object photographed with a scanning lens photographic plate
and one can say the restored wave front is integrated from the masher of elemen-
tary beans represented by these images.

The process of photographing a three-dimensional image on a scanning lens plate is
shown schematically in Figure 1. One surface of the scanning lens plate R has
fluting in the form of snail lenses contacting each other, while the other surface

is coated with a light-sensitive layer on which the small lenses are focused. The
object AB, located in front of the lens side of the plate, is exposed on the light-
sensitive layer by the small lenses in the forn of a set of microscopic iaages

.lbl' 32b2, .3b3 see

76

FOR OFFICIAL USE ONLY
ms Oman use ONLY

   

Figure l.

A photograph can be made on this plate without the use of a lens.

The process of achieving an integral photograph is a two-step one. Therefore.
after the plate R has been exposed, developed and fixed, it is placed opposite the
other. exactly the same plate P, turning the plates with the lens elements toward
each other (figure 2) and they are illuminated from behind by scattered light.
The inverted pOsitivs image is copied. i.e.. elementary images albl, azbz, ... are

inverted to images albl, azbz.

The second plate is a positive imge which restores the inverted path of the beans
from the object (the quantified wave front from the points of the object is re-
stored). By illuminating this plate P on the emulsion side and looking at it from
the lens side (Figure 3), one can see a three-dimensional image of the photographed
subject AB'.

The three-dimensional image of the subject is recreated by the wave fronts in the
directions of beams from each elementary image. Therefore. the visible image is
imaginary and is located at a quite specific distance on the plate.

o.~§'
A's’t‘r‘h
A’A'Q'A'A'A'A‘A‘t‘

O

o.

I
'o

69.

   

Figure 3. Figure 4.

One can see a side view of the object when viewing the integral photograph from
the side. When one approaches the panorama of the visible picture is expanded and

the perspective and angular size of the subjects change:

77

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

nits color images to be rude.

Different modifications of integral photography are known [2]. Thus, for ample.
it is possible to increase the three-dimensional resolution of the produced image
by constriction of the aperture when taking an integral photograph through a large-
diameter objective (or lens) . A synthesized integral photograph can be made when
the full-scale object is photographed on a set of frames from different angles of
approach and then the print of these frames is projected from these same angles of
approach onto a seaming lens plate. as is shown in Figure 4. Conversion of a
focused integral photograph by coherent radiation to a reflective hologram ti.“
altered three-dimensional image scale yields interesting results.

Quasi-integral photographic systems, so-called autostereoscopic images, which find
application in the form of three-dimensional advertising inges and as mass ster-
eoscopic isoproduction, are of practical interest.

The principles of beam holography accomplished by using scanning optical systems
permit one to solve many problems not accessible by traditional classical devices.

Scanning integral stereoscreens, scanning objectives and eyepieces are known.
Scanning optical systems provide recording not only of the three-dimonsional angles
of approach of an object but of its time angles of approach as well. The highest
movie filming speeds are achieved by using scanning frame cameras. Scanning opti-
cal systems are promising in computer equipment as storage devices, as processors.
controllable slides and so on [3].

Finally. one should also point out the analogy of scanning systems to holographic

systems in the field of interferometry. Essentially the Moire phenomenon is inter-
ference of three-dimensional frequencies of raster gratings that is used in mea-

suring equipment.
BIBLIOGRAPHY

l. Lipplan, 6., JOURNAL DE PHYSIQUE, 1908.

2. Valyus, N. A” "Rastrovaya optika" [Scanning Optics). Moscow-Leningrad, GI‘I'I'L.
1949.

I
3. Valyus. N. A” "Matrix Type of Optical Computers," 'Radioelektronika opti-
cheskogo diapazona" [The Electronics of the Optical Band], Moscow, V2111. 1970.

COPYRIGHT: LIYGF , 1980

6521
C80: 1863/ 26

78

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

80mm

ABSTRACTS OF ARTICLES IN JOURNAL 'PROGWING', SEPTMER—OC'I‘OBER 1981
Moscov PROGRWROVANIYE in Russian No S, Sap-Oct 81 pp 95-96

UDC 51 : 621.391
PROBLEM OF EQUIVALL‘NCE FOR GENERALIZATION OP LL(k) GRAMMARS
[Abstract of article by Nepomnyashchaya. A. Sh.]
[Text] A proo is given of the solvability of the problem of equivalence for
grammars of P classes, which are specified by uniting mLL(lt) gramsrs with
limitations 03' outputs. P classes. as well as deterministic automate with

a magazine memory corresponding to them, represent new classes with a solvable
equivalence problem.

UDC Sl9.767.2
DESCRIPTION OF SEMANTICS OF PROGRAMS BY MEANS OF SUBSTITU‘I‘IONS IN GRAPES
[Abstract of article by Gostev, Yu.c.]
[Text] It is suggested that programs be interpreted as combinations of substitu-
tions to be applied to graphs of a certain kind. This makes it possible to
draw the theory of algorithms closer to methods of describing computations used
at the present time and in addition makes it possible to describe computations on
random data structures.

UDC 681.3.06
SEHANTIC MODELS OF PROCEDURES
[Abstract of article by Pastor, P.]
lText] Semantic models of procedures and other objects encountered in programs
written in a high-level programming language are discussed. A method is suggested

[for constructing complicated models of statements from simpler ones, based on a
composite approach.

79

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 681.3.06

PROGRAWING SUBSTITUTIONS 0P LANGUAGES
[Abstract of article by Cheremisinov. D.I.]

[Text] The problem of programing substitutions of languages is discussed-«he
operation of converting string data touring the basis for constructing different
kinds of algorithm for processing data represented by chains of characters. A
system of notation for defining substitutions of languages is suggested.

UDC 681.3.06

CONSTRUCTION OF A DATA BASE BASED ON THE CONCEPT OF ABSTRACT TYPES
[Abstract of article by Zamulin, A.V. and Skopin, I.N.]

[Text] The concept of astract types of data as applied to designing systems for
controlling data bases is discussed. The procedure discussed mites it possible
on the basis of a universal programing language with abstract types to develop
data bases in accordance uith a specific application model.

UDC 681.142

SOFTWARE IMPLEMENTATION OF HULTTPROCESSING
[Abstract of article by Godunov, A.N., Yemel'yanov. N.Ye. and Sverdlom 5.5.]

[Text] A description is given of a multiprocessing executive routine (HP executive)
created within the framework of the INKS-2H [economic information system] 8030
[system for control of data bases], which can also be used independently. The

MP executive makes possible parallel execution of the computing process and working
with a disk-type virtual memory utilizing the distinctive features of the multi-
processing mode of executing a routine.

UDC 681.3.06
IMPLEMENTATION OF A 'l-‘OREKS' COMPILER FOR THE As-6 CENTRAL PROCESSOR
[Abstract of article by Galatenko, V.A. and Khodulev, A.B.]
[Text] A description is given of the instruction generator in the compiler from
FORTRAN for the central processor of the AS-6 complex. Information is presented
on organization of the AS-6 central processor. The characteristics of the AS-6

central processor and MESH-6 are compared. An evaluation of the AS-6 central pro-
cessor as a FORTRAN machine is given. "

80

FOR OFFICIAL USE ONLY
FOR Ol-TICIAL USE ONLY

UDC 681.3.06

INFORMATION SSARCH AS A PROBLEH IN TNE LINGUISTIC RECOGNITION OE CHARACTERS
LAbstract of article by Samedova. H.A.]

[Text] The linguistic support of a data search of objects of a medical nature
represented in a normalized natural language is discussed.

‘ unc 681.3
SYSTEM OF DIALOGUE PREPARATION OF TASKS FOR UNIFIED-SERIES COMPUTERS
[Abstract of article by Khanykov, V.V.. Rybakov, A.V. and Anan'ina, N.V.]

[Text] A description is given of an instrument system for working with a design
library for Yes computers within the framework of the operating system.

UDC 681.3.06 : 51

EVALUATION OF INDICATORS OF THE CORRECTNESS OF THE FUNCTIONING OF PROGRAMS NIT“
A HULTILEVEL STRUCTURE

[Abstract of article by Khaletskiy, A.K.]
[Text] A mathematical formulation is suggested for the problem of evaluating the
vector of indicators of the correct functioning of a complicated program with a

tree-type hierarchical structure fpr the case when failures of its components are
independent.

UDC 681.3.06

RECURSIVE ESTIMATION OF ARITHNETIC FUNCTIONS IN LISP SYSTEMS

[Abstract of article by Stefanyuk. V.L.]
[Text] In this note reasons are presented in favor of the "explicit” computation

of elementary functions in LISP systems. Examples are given of simple recursive
codes for computing sin . exp and la , illustrating the general approach.

UDC 681.3.001
COMBINED FORMAT POE OUTPUT OP NUMERICAL INFORMATION FOR DESIGN DOCUMENTS
[Abstract of article by Hotyl'. D.N., Sokolinskiy, Yu.A. and Father. K.S.]

$Texr| A description is given of a combined format for the representation of
numerical information making it possible to output numbers with a specified relative

error. The described format is implemented in the procedure function of the PL/l
idnguage in rhe Yes [Unified Series] operating system.

COPYRIGHT: Izdatel'stvo "Nauka", "Programmirovaniye". 1981

,3 ...._.(:/.5 8]

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

000 681.1142
SOFTWARE MATION 0P HIJLTIPROCESSING

Moscow PROGRAHHIRDVANIYB in Russian No 5, Sop-Oct 81 (manuscript received 12 May 80)
pp 46-69

[Article by LN. Godunov, N.Ye. Yemel'yanov and 8.8. Sverdlov]

[Text] A description is given of a multiprocessing executive routine (HP executive)
created within the framework of the IRES-2H [economic information system] 8030
[system for control of data bases], which can also be used independently. The

HP executive makes possible parallel execution of the computing process and working
with a disk virtual memory utilizing the distinctive features of the multiprocess-
ing mode of executing a routine.

As mentioned in [1, 2], the idea of multiprocessing, i.e., breaking down a user's
task into independent quasi-parallel processes, is very attractive both from the
viewpoint of the convenience of programming and on the plane of possible optimiza-
tion of working with an external storage. Furthermore, it was indicated that the
most advantageous means of parallel execution would be the hardware implementation
of a multiprocessing system. Nevertheless, a considerable gain can be made also
with software implementation of such a system.

In this article a description is given of a real multiprocessor executive system
which can be used both for creating individual user routines and as a system for
programing various components of the software of an ASU [automated control system],
data base control systems and the like. Although the HP executive has been imple-
mented within the framework of the INKS SUN) [3], it represents a totally indepen-
dent system which can be used independently or as part of any software complex
under the control of a Yes [Unified Series] operating system.

The following were the key requirements in creation of the HP executive:

Offering the user a developed system of macroinstructions for parallel execution
of the computing process.

The creation of convenient facilities for working with a virtual memory employing
disks.

Ensuring the effective control of swapping in the multiprocessing mode.

82

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Making possible the auxiliary functions required for practical work with the exe-
cutive routine (debugging facilities, message output facilities, management of
routine execution protocols and, in particular, swapping procedures, and statistics
gathering facilities).

Ensuring compatibility of the HP executive with the Yes operating system.

The functional capabilities of the HP executive are illustrated in fig 1, where 1
represents facilities for working with the virtual memory, 2 facilities for parallel
execution and the synchronization of processes, 3 debugging facilities and 4 facili-
ties for organizing parallel message flows.

Multiprocessing Instruction Set

The parallel exeuction of a routine which is to be executed in the multiprocessing
mode takes place through special macroinstructions. The following macroinstructions
exist for the origin. termination and synchronization of processes: INIT-—initiation
of multiprocessing operation, PROCS-origin of a process, PREND--terminstion of

the process, HALS—-cancellation of all processes begun, PRTY-changing the priority
of a running process, HAYINT--enabling suspension of a running process, HALS--
awaiting the termination of all processes started, HANS-awaiting the termination of
any process started, SH--awaiting the assigned value in the semaphore and HAITH--
awaiting an operating event (in the sense of the operating system).

 

Figure 1.

Key:
1. User’s program 2. Operating system facilities

In the initiation of a multiprocessing system its initial configuration and start—
ing parameters must be specified, such as the maximum number of processes existing
simultaneously in the system, the maximum depth of the process origin tree, in-
-structions for use of the virtual memory, a program identifier for the initial pro-
cess, some additional instructions for the accidental termination of processes,
debugging printout and the like. -

83

FOR 0FFK1AL,USE(MNLY
FOR‘OFF1C1A1.US£|DNLY

During initiation the system‘s control tables are formed, special system processes
are created and the initial user's process is started.

Any process can issue a PROCS instruction for the origin of an offspring process.
If there are insufficient resources for the creation of a new process, the parent
process is halted until the necessary memory is freed. After the creation of the
process it, as a rule, also starts, since, if nothing special is stipulated, the
offspring process receives higher priority than the parent process. In such a
manner the multiprocessing system stimulates growth of the process tree "in depth,"
and not "in breadth," in order to reach more rapidly the maximum depth at which
processes begin to end, issuing the instruction PREND. The memory freed at the
termination of processes is used for producing new processes. There is also the
possibility of arbitrarily assigning priority to a begun process and, in addition,
each process in the course of execution can change its priority by means of the
PRTY instruction. This can result in dead-end situations when all processes begun
wait for resources for the creation of offspring processes. If the assignment of
priorities is left to the discretion of the HP executive itself, then it provides
certain measures for the prevention of dead-end situations, on the basis of the
maximum depth of the process origin tree indicated during initiation.

The parent process can cancel all processes originated by it by means of the HALS
instruction, whereby each offspring process is cancelled together with all processes
subordinate to it. The WALS instruction suspends the running process until the

end of the operation of all offspring processes produced by it, and the “ANS in-
struction until the end of any offspring process (if there are any). The most
common means of synchronizing processes is the semaphore device, whereby the sema-
phore can be any memory cell. By means of the SH instruction an indication can be
given regarding the entry of a certain value into the semaphore, regarding waiting
for a specific value or condition in the semaphore, and regarding waiting followed
by an entry into the semaphore.

Virtual Memory of a Multiprocessing System

The multiprocessing instruction set includes the following facilities for working
with a virtual memory employing disks: OPBNH-open the file of the virtual memory,
CLOSEM-close the file of the virtual armory, EXPIL--designate the working file of
the virtual memory, LV--load into the register the word with the indicated virtual
address, STV—-store contents of the register according to indicated virtual address,
MVV--move field from virtual memory to virtual memory, HVS--move field from ordi-
nary memory to virtual, HSV--move field from virtual memory to ordinary, CVV--
compare field of virtual memory, CVS-—compare field of ordinary memory and virtual
memory, INPc-input page with indicated virtual address, GETPG--issue clean page
with indicated virtual address, UPDPG--set page correction tag, FREPG-free page
with virtual address indicated, PIX-make request for fixing of the required number
of virtual memory pages.

The MP executive makes it possible to work simultaneously with several virtual
files. Each proces. rust open the file needed by it by means of the OPBNH in-
struction and upon the end of working with it must close it by means of the CLOSE“
instruction. Actual closing of the file in the sense of the Yes operating system
is produced by the HP executive when the last process opening it finishes working

84

FOR OFFI('IAL USE ONLY
FOR OFFICIAL USE ONLY

with this file. In addition. each process is assigned, if this is necessary, an
individual working file of an indicated size, it is opened and closed automatically
by the HP executive, and accessing it does not require identification of the file.

The LV and STV instructions are intended for working with words of the virtual
memory and are similar to the assembler L and ST instructions. The HVV, HVS, HSV
and CVV and CVS instructions are similar to the assembler HVC and CLC instructions,
respectively, but the length of operands can reach 32,768 bytes. The INPG instruc-
tion makes it possible to gain access to a page with the indicated virtual address
and the requested page will be fixed in the working storage right up to a clear
indication by the programmer of completion of work with it by means of the PREPG
instruction. The UPDPG instruction is used in order to indicate which page en-
tered by means of the INPG instruction will be corrected and, consequently, later
must be automatically output according to the corresponding virtual address. By
means of the GETPG instruction it is possible to obtain any "clean" page, i.e.,

a working storage buffer. The correction tag for this page is set automatically,
in order for it later to be read out into the appropriate virtual file. Let us
note that in execution of the HVV, HVS and STV instructions the page correction
tag is also set without an explicit instruction from the programmer.

As in indicated in [1, 2], multiprocessing opens up unique opportunities for con-
siderably increasing the effectiveness of a virtual memory. The simultaneous ex-
istence of a great number of processen each of which possibly issues requests for
exchange with virtual files makes it possible to implement an effective exchange
algorithm which stimulates the partial review in advance of a sequence of accesses
to the virtual memory [2]. There also is discussed an algorithm for protection
from dead-end situations in a multiprocessing system which can originate when
working with the pages of a virtual memory under fixing conditions.

Additional Possibilities Offered by the HP Executive

The existence in the system of a great number of independent processes creates
serious difficulties in organizing the printout of the output messages of each

of them. In quasi-parallel running of a user's program the sequence of the exe-
cution of individual processes is determined dynamically by the multiprocessing
system and, consequently. the procedure for the output of messages by various pro-
cesses is unpredictable. It is obvious, however, that from the viewpoint of opera-
ting convenience the separation of flows of messages of various processes in print-
out is totally necessary. The use of standard YeS operating system facilities for
these purposes is exceedingly difficult for an applied programmer because of their
cumbersome nature. The use of the printout ficilities offered by the HP executive
makes possible the automatic separation of flows of messages of various processes
and in addition frees the programmer from organizing control tables of data (DCB's)
and from the need to perform the operations of opening and closing data sets.

Here the re-enterability of the routine executing the printout is not disturbed.

With the accidental termination of some process the MP executive makes possible
the output of a standard diganostic message regarding the type of error, a list
output of the area of interruption and of the state of registers at the moment of

interrr tion, and also a list output of key multiprocessing control tables at the
moment of interruption.

85

FOR OFFICIAL USE ONLY
FOR 0*1"(]A|.USE¢DNL¥

In the debugging mode the HP executive makes it possible at points indicated by

the programmer to print out the current state of control tables of the multipro-
cessing system and of process waiting lines. Hhen working with files of the virtual
memory there is the possibility of periodically (at a given interval) obtaining in-
formation on exchanges carried out and on the current state of virtual memory
buffers. Information on exchange dynamics in the multiprocessing system can be
very helpful for a qualitative analysis in selecting optimum multiprocessing para-
meters for a specific problem (number of processes, number of buffers, virtual
memory, their size and the like).

Functioning of a Multiprocessing System

The execution of multiprocessing instructions is performed by program modules in-
cluded in the HP executive's structure. The completion of an instruction by the
HP executive can involve either continuation of a running process or switching to
another process. For example. if in a reference to the virtual memory it is found
that the page indicated is already in the working storage, the running process
again receives control. Otherwise it is suspended with the appropriate waiting‘
code, its request for a page of the virtual memory remains in the waiting line for
execution and control is transferred to one of the processes ready to run.

The HP executive maintains waiting lines of processes waiting for a specific event
and the waiting line of so-called ready-to-run processes, from which the process
with the highest priority is selected in switching. The state of these waiting
lines is constantly corrected with the completion of each multiprocessing instruc-
tion by the executive routine. For example, execution of the PREND instruction for
a certain process can result in placement of the parent process in the resdy-to-run
waiting line (if it was awaiting termination of the running of all offspring pro-
cesses and the running process was the only one or the last of them), as well as

one of the processes awaiting memory resources for the creation of an offspring pro-
cess.

Special system process H performs the function of waiting for any event (in terms
of the operating system) which is specified by the process. Among them, process

W fixes the end of any exchange with external units. Let us note that all process-
es, in addition to facilities for working with the virtual memory, can order ex-
change with external units through ordinary mac Jinstructions of the operating sys-
tem. Process H has minimum priority and thus receives control when it remains the
only one of the processes ready to run. Furthermore, process H reviews the waiting
line of events and transfers the individual processes into the ready-to-run state.
If not one of the awaited events takes place, process H issues the operating in-
struction WAIT.

System process 3 implements the algorithm for exchange with the virtual memory de-
scribed in [2]. Its functions include review of the waiting line of requests for

exchange with the virtual memory and initiation of the exchange selected. Process
E has maximum priority in the system, which makes it possible to insure most com-

plete matching of the operation of the processor and input/output channel.

86

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

System processes W and E are created by the HP executive upon the initiation of
multiprocessing activity. and process E is generated only when an instruction re-
garding working with the virtual memory is contained in the INIT macroinstruction.

As is obvious from a description of multiprocessing instructions (cf. fig 2), some
of them are similar to operating macroinstructions of the Yes operating system
associated with a multitask situation. Let us note that each process of the HP
executive is at the same time a subtask in terms of the operating system. However.
the issuing of ATTACH operating macroinstructions is necessary only upon the initi-
ation of a multiprocessing operation and in cases of the accidental termination of
certain processes. With the normal termination of a process and the creation of

a new one, the issuance of DETACH and AJTICH macroinstructions is not required,
since one and the same operating system subtask is used many times in succession
for supporting a great number of HP executive processes. Execution of the HALS
macroinstruction takes place similary without accessing the operating system. In-
structions for the synchronization of processes on the one hand give a programr
more convenient facilities than operating macroinstructions. For example, often
the common function of waiting for all subordinate processes is implemented in the
HP executive as a single simple WALS instruction. 0n the other hand, instructions
for working with semaphores, although they make it possible to simulate the operat-
ing facilities for working with BNQ and DEQ resources. are completed by the HP exe-
cutive without using these system macroinstructions, which makes it possible to
speed up execution of the program.

ﬂpuﬂpllﬂlﬂﬁ
npputrta 2) Mn-nnuumap

1)

  
  

Acacia Momma
lygguuanuwn

Figure 2.

Key:
1. Priority of process 3. User process tree
2. HP executiVn

Let us stress that although each process of the HP executive is also a subtask of
the operating system the function of the process scheduler is performed exclusively

by the HP executive. with each accessing of the executive routine it selects for
execution a single process (subtask of the operating system) and the remaining are

87

FOR OFFlf‘IAL USE ONLY
FOR OFFICIAL USE ONLY

inhibited, even if they are ready to continue running. At the same time in the
interval between two accesses to the HP executive each process is uninterruptable

in a given multiprocessing mixture. This opens up the possibility of extensively
using quasi-re-enterable routines for processes, the creation of which is less dif-
ficult for a programmer than ensuring their absolute re-enterability. (The main-
tenance of re-enterability of some sort is necessary in the widespread situation
when a great number of processes are designed to run according to a single routine.)

The concentration of the functions of controlling processes in the HP executive
makes it possible to achieve good agreement between the work of the central pro-
cessor and the execution of input/output operations. For this it is sufficient to
use for the purpose of waiting for the end of exchanges the multiprocessing macro-
instruction WAITM, which results in suspension of the running process and the start
of another process ready to run. The possibility of organizing exchanges of just
operating system facilities is also not excluded (without accessing the HP execu-
tive). which can entail only a slight reduction in the effectiveness of the system.

Moreover, the job of controlling the multiprocessing system does not contradict

the use in programs of standard broad-application operating system macroinstruc-
tions. such as GBTHAIN, LINK. LOAD and the like. the use of which can be dictated
by the programmer's support considerations. This compatibility of multiprocessing
with operating system facilities makes it possible also to adapt fairly easily to

a multiprocessing mode a program written by the traditional sequential method. For
this is required mainly a "superstructure" of the program's upper logic level
making possible its parallel execution.

The methods of multiprocessing discussed can prove to be a convenient tool for both
system and applied programming. The instruction set described above provides the
programmer with added conveniences as compared with the multitask facilities
offered by the Yes operating system and furthermore is implemented in order to
reduce as much as possible the number of expensive accesses to the operating sys-
tem's supervisory routine. The convenience of programming in terms of multipro-
cessing was regarded as an important factor in creating the HP executive. There-
fore the executive routine has a structure taking it possible easily to add addi-
tional instructions for specific applications and to adapt the multiprocessing
system to the user's needs.

broad class of data processing tasks [1, 2] and in software design system tasks.

0n the basis of the HP executive u multiterminal SUBD INKS system has been designed

which is described easily and naturally in the language of parallel processes.
Bibliography

1. Arlazarov, V.L.. Volkov. A.P., Godunov. A.N., Yemel'yanov, N.Ye.. Zenkin, V.D.,

Konstantinov, c. and Lysikov, V.T. "Hardware Implementation of Multiprocess-
ing," AVTOHATIKA I TBLEHEKHANIKA, ho 8, 1977.

88

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

2. Godunov, LN. and Sverdlov. 5.5. "Organization of a Virtual Hemory in a
Multiérocessing System," AVIO‘PWHKA I IBLEMEIOIANIKA, No 12, 1978.

3. Arlazarov. v.1... Dyukalav. A.N., Yenel'yanov, N.Ye., Ivanov, Yu.N., Kochin,
Yu.Ya., Tokarev, V.V. and Paradzhev, LA. "The INBS Information Systen,"
AV‘l'OHATIKA I TELBHEKHANIKA, No 6. 1979.

COPYRIGHT: Izdatel'stvo "Naulm". "Programitovaniye". 1981

8831
CSO: 1863/ 105

89

FOR OFFICIAL USE ONLY
FINI13FF1CIAL USEZCMVLY

UDC 681.3.06.
DIPLEHENTATIW op 'I-‘OREKS' -:0HPILER FOR As-6 CENTRAL PROCESSOR

Hoscov PROGRAHHIRDVANIYE in Russian No S, Sep-Oct 81 (manuscript received 21: Dec 80)
pp 50-58

[Article by V.A. Galatenlro and A.B. Khodulev]

[Text] A description is given of the implementation of a PORBKS FORTRAN compiler
for the central processor of the AS-6 complex. A brief description is given of
the 16-6 central processor. The results of statistical studies of object pro-
grams are given.

The As-6 is a multinachine complex which can include central processors (As-6
TsP's), a DESK-6 coaputer and peripheral machines (PH-6's). The architecture of
the AS-6 central processor is rather complicated. Let us mention, for example,
the presence of three types of registers, the page segment organization of the
memory, and the extensive and quite individual instruction set.

In this article a description is given of a compiler from PORTRAN for the AS-6
TsP obtained by modifying the FOREKS compiler for the 88811-6 [1, 2]. The POREKS
is a two-operation compiler. In the first operation the program is translated
from FORTRAN to the internal language and in the second from the internal language
into machine instructions. The internal representation used by the compiler for
the “SJ-6 proved to be totally suitable for the AS-6 central processor; therefore,
only the instruction generator is a part of the compiler specific to the AS-6
central processor. It is precisely to the instruction generator for the As-6
central processor that this article is mainly devoted. In addition, in this
article data are presented which characterize the AS-6 central processor as a
FORTRAN machine.

The instruction generator for the AS-6 central processor, as are the other parts of
the FORM compiler. is written in the ASTRA language [3] and operates in the
DESK-6, producing a text in AS-6 central processor autocode [lo]. The capacity of
the generator is about 3500 ASTRA instructions (about 6000 DESK-6 words).

The input language of the POREKS compiler conforms basically to the FORTRAN-77
standard [S] and also contains facilities absent in FORTRAN-IV, such as "structural"
conditional instructions. IF-THEN—ELSB-DIDIP, cycle instructions, DO-RRPBAT (in
combination with the EXIT statement), as well as the CHARACTER (character change)
and BIT (bit change) data types.

90

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

1. Brief Description of AS-6 Central Processor

In this section are described only those features of the AS—G central processor
which influence the instruction generator. More detailed information on the AS-6
central processor. including a description of the instruction set, can be found
in [4].

It Addressing Mechanism

The memory in the AS—6 central processor is virtual and segmented. The maximum
size of a segment equals 2" 68-bit words. One task can work with no more than
6096 segments. The virtual memory is accessed by means of 68-bit descriptor re-
gisters. There are 16 of these registers. They contain the following information:

1. The number of the segment which is accessed (12 bits).

2» The address within the segment. This address is called the base and occupies
2b bits.

3. The type of base (2 bits). In the AS-6 central processor it is possible to
address not only whole words, but also half-words, bytes and bits. The type of
base shows in which kind of units the address within a segment is given.

4. The number of the index register or half-word adder through which indexing
will be performed.

The descriptors contain also other information which is not important for our pur-
poses. There are eight 24-bit index registers in the as-e central processor in
addition to the descriptor registers. The operations which can be performed in
them are addition and subtraction but their main function is the modification of
addresses. In an AS-6 central processor instruction the address of an operand in
the memory is given by means of the number of the descriptor register, the shift
‘16 bits) and the indexing tag. The operand is accessed from the segment indicated
in the descriptor register. Its address within a segment is computed as the sum
of the shift indicated in the instruction, of the base of the descriptor and. if
an indexing tag has been set, the contents of the index register or half-word
adder whose number is given in the descriptor. The type of descriptor base must
agree with the type of operand or be a word base. In the latter instance before
being added with the shift and contents of the index register or half-word adder
the descriptor's base is multiplied by 2, 6 or 48.

Descriptor registers can be used not only for addressing, but also for organizing
cycles: In the descriptor register are placed half-word steps and the final
value of the control variable; the instantaneous value of the control variable must

be stored in the index register. There is a 3-operand cycle end instruction which
with a positive value of the step is similar to the BXLE instruction in Yes

[Unified Series] computers (cf. [6]). If the step is negative, a transfer is made.
when the new value of the control variable is not lower than the final value.

91

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

2. Adder Registers

The eight (08-bit adder registers are designed for performing aritlusetic operations
with a floating and fixed point, as well as logic' operations.

Number: with a floating point have a 60-bit mantissa, a 7-bit floating point part
and a sign bit. Negative nusbers are represented in direct code. The floating
point portion is hexadecimal and normalization of the fixed point portion is per-
formed with an accuracy of a hexadecimal digit. The range of representable nuabers
is from 16'“ to 16".

The set of operations on nusbers with a floating point is the traditional one. The
mode for the execution of arithtsetic operations is indicated in a special inter-
locking register. Normalization of the result can be interlocked. as well as over-
flow and loss of significance interrupts, etc.

In the AS—6 central processor there are also instructions for working with double-
precision numbers. These numbers can be added. subtracted and multiplied. There
is no instruction for dividing numbers with double precision.

Whole numbers can be represented by two methods. word whole numbers contain 47
bits and a sign. Ordinary arithmetic and logic operations, in addition to the di-
vision operation, can be performed on these numbers.

Half-word whole numbers contain 23 bits and a sign. The right halves of adders,
which are called half-word adders. are used when working with them. Negative
numbers are represented in couplement. The operation set includes arithemetic
(including division) as well as logic operations. In addition, half-word adders.
as the index registers. too, can be used for modifying addresses.

The AS-6 central processor pernits working with individual bytes and bits. here
the for right bits of the adders are used as bit adders. All traditional logic
functions are included in the operation set. Operations with bytes are performed
in the right byte of adders.

The adder registers can be used for operations with sequences of bytes and bits.
here the length of a sequence must not exceed 12 bytes (96 bits).

3. Memory-usury Format Instructions

Sequences of bytes and bits can be processed not only in registers but also in

the memory. The set of corresponding AS-6 central processor instructions is similar
to the instruction set of the SS format in Yes computers with the only difference
that the length of operands is not obligatorily specified directly in an instruc-

tion: It can be placed in an index register and its number can be indicated in
the instruction. Here the length of operands can reach 2" words.

14 . Dynamic Loading

The dynastic loading strategy (cf. [7], sec 4.9.2) is used in the AS-6 central
processor: Programs are loaded with respect to first access to them. As a result

92

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

there will be no superfluous programs in the memory. Program which have been
completed and have become unneeded will sooner or later be forced out into the

secondary storage.
5.. State Stack

A unique feature of the AS-6 central processor is the state stack (hidden stack)
mechanism. It makes possible the automatic saving of return addresses and the
saving and resetting of registers.

The stage stack operates in the following manner. Accessing of a subroutine is
written in the form of two instructions. In the first of thea a so-called saving
mask is established, indicating which registers are to be saved. The second exe-
cutes the jump per se. Here in the state stack is registered the return address
and certain other characteristics of the module from which accessing takes place.
While the subroutine is run the registers indicated in the saving mask are entered
into the state stack before the first execution of any instruction altering their
contents. Thus, unused registers in the state stack are not stored.

A single return instruction is sufficient in order to exit from a subroutine. It
causes the resetting of registers hidden in the state stack and transfers control
to the return point.

2. Machine Representation of Language Objects

Numbers with a floating point are represented naturally. It was a more complicated
matter to select the representation of whole numbers. He settled our choice on
half-word whole numbers in order to render effective access to elements of arrays
and the implementation of cycles. Of course, with this the range of representable
whole numbers turned out to be rather short: from 8388608 to 8388607.

The structure of the as-e central processor makes it possible to address the on-1ine
memory with an accuracy of a bit. Therefore, for logic values the AS-6 FORBKS
compiler assigns in terms of a single bit. This makes it possible to work effect-
ively with very large (up to 223 elements) logic arrays.

Thus. regions of the memory of different sizes are assigned to values of different
types. This contradicts the FORTRAN-77 standard [5]. However, the memory savings
which originates when using whole-number and especially logic arrays in our opinion
outweighs this disadvantage.

Values of the CHARACTER nnd BIT type are represented as sequences of bytes (bits).
They are worked with only by means of memory-memory format instructions. Registers
are used only in converting from one type to another, e.g., from CHARACTER to
INTEGER.

Accessing an element of an array (e.g., A(I)) is a rather coaplicated operation
(setting the descriptor, setting the index and accessing per ea). In addition,
operations with descriptors are performed rather slowly in the AS-6 central pro-
tessor. Therefore it is advisable to place arrays as much as possible in a single
segment, since then a single descriptor can be used without resetting for working

93

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

with several arrays. The length of an array cannot exceed the size of a segment
(2" words).

An individual segment is assigned to each common (COMMON) block. It follows from
this that different common blocks are protected from one another and improper
working with one block cannot influence another.

3. Algorithms Used

Methods of translating from FORTRAN are described in detail, e.g.. in [8]. We
will dwell briefly on some algorithms used in the instruction generator for the
AS-6 central processor.

1. Generation of Instructions for Line Sections

A sequence of FORTRAN program instructions which does not contain control jump
labels and instructions (a line section), after syntactical analysis and optimiza-
tion, is represented in the form of a graph of triads (cf. [8]). Each triad con-
tains an operation indicator and references to triads representing operation oper-
ands. Triads of a special form represent variables. For a specified graph it is
possible to generate various sequences of instructions for its execution differing
in the computation procedure for triads and in the use of registers. The follow-
ing recursive algorithm is used in the realization described for the purpose of
generating triad computation instructions.

1. Instructions are generated for computing the second operand of the triad (if
they have not already been generated).

2. The same for the first operand.

3. Instructions are generated for the performance of an operation of a triad on
its operands.

This algorithm is applied seuqentially to all triads representing instructions of
the source program. The use of registers is described below. Although this
generation procedure is not always optimum (cf. [9]), practically speaking it makes
it possible to produce a sequence of instructions close to optimum.

2. Distribution of Registers

In the AS-6 central processor there are eight adders, eight index registers and 16
descriptor registers. The adders and index registers are distributed uniformly.

A table of registers is constructed. Each element of this table contains a refe-
rence to the triad which this register represents and the field describing the
state of the register (0--free, l--occupied by a constant which must be indicated
directly in the instruction. 2-—occupied and there is a copy in the memory. 3--
occupied and no copy in the memory. 4--register occupied and its contents cannot
be altered). In turn. the triad contains a counter which indicates for how many
triads it is an operand. Each time the triad is used as an operand in the genera-
tion of instructions its counter is reduced by a unit. When it becomes equal to

0 (i.e., the triad is no longer needed), the registers associated with it are

96

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

’mnrked as free. If an adder. for example. is needed for the next computation and
none are free. the adder with the minimum value of the state field is occupied.
Here attention is not paid to the counters in triads. Although theoretically this
algorithm is not optimum, in practice it is totally satisfactory.

Let us present the following data. Sixteen FORTRAN programs with a total size of
5614 strings were translated. With this 28383 machine instructions were generated,
5235 of then being instructions for setting adders. In only 98 instances did a
setting instruction cancel values whose presence in the register would be useful
later on. In 27 of these for the purpose of freeing an adder it was necessary to
copy it into the memory. In seven programs there was always a free adder and in

12 programs it was not necessary to copy adders into time variables. Data on the
most "inconvenient" program: 579 strings. 2578 machine instructions. S30 adder
settings, 17 of them (3.2 percent) canceled out needed values. and in all 17 cases
it was necessary to copy the adder into the memory.

As an experiment the table of adders was reduced from eight to four elements. The
register distribution algorithm remained totally workable: Of 5461 setting in-
structions 564 canceled out needed values. In 117 cases (2.2 percent of the total
number of settings) it was necessary to copy the adder into the memory. The con-
clusion can be drawn that for a locally optimizing compiler the presence of eight
adders renders unnecessary complicated algorithms for evading the triad graph

and for the distribution of registers. In our opinion the optimization examples
described in sec 6 can produce a great savings.

The distribution of descriptor registers is accomplished somewhat differently.

The difference is that one descriptor can be used for access to several variables
and arrays; therefore it is difficult to determine from counters in triads when

a certain descriptor becomes unnecessary. In the generator described descriptor
registers are marked as free only at the end of a line section. An analysis of 10
programs (3370 strings in FORTRAN, 18.459 machine instructions) demonstrated that
of 3320 descriptor register loading instructions 170 (5.1 percent) spoiled informa-
tion which later had to be put back into registers. (The instruction generator
uses 11 descriptor registers.) On average the result is not bad. but the behavior
of the most "inconvenient" program is considerably worse than the average: 103
out of 577 (17.9 percent) of instances of loading into descriptor registers de-
stroyed needed values. This program contains accesses to subroutines with a great
number of recurrent parameters. (In one line section are contained six accesses to
a subroutine with 34 parameters, and 29 parameters of the last of the six accesses
had been transferred previously.) With the available number of descriptor regis-
ters it is impossible to avoid completely the expulsion of required information,
but knowledge of the moment when information in a register becomes unnecessary in
this case would have reduced the number of "superfluous" loading events twofold

(the total number of loading events would have been reduced by approximately 10
percent).

For the purpose of optimizing cycles. invariant and increment expressions (i.e.,
expressions which vary by a constant amount after each completion of a cycle)

are computed before entering a cycle ( n the cycle's prologue) and are placed in
registers.

95

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

3. Distribution of Memory

The memory for local variables and arrays of the subroutine to be translated is
assigned in a single segment insofar as this is possible. Then the following
segment is used, etc.

Let us describe the algorithm in greater detail. Local variables are distributed
in a segment in the following order:

1. Simple variables of the real type and other types requiring one or two words.
2. Simple whole-number variables.

3. Time variables of the CHARACTER type.

A. Simple logical variables and time variables of the BIT type.

5. Logic arrays. variables and arrays of the bi? type.

6. Variables and arrays of the CHARACTER type.

7. Whole-number arrays.

8. Arrays whose elements occupy not less than one word.

At the start of a program is placed the instruction for setting the base descriptor
which indicates the point between variables and arrays; it has a word type of base.
Simple variables and arrays are addressed with reference to this descriptor if it
makes possible a 16-bit shift in the instruction. {his distribution of variables
is caused by the fact that in the AS-6 central processor the size of an instruction
depends on the size of the shift in it. The site of the field for shifting in an
instruction varies from 0 to 2 bytes depending on the size of the shift. This
memory distribution arrangement increases the number of variables with slight
shifts relative to the base descriptor.

As already mentioned, an individual segment is assigned for each common block. The
subroutine's instructions and its constants are distributed in an individual seg—
ment. Briting into this segment is inhibited by hardware: therefore, the possi-
bility of the erasure of instructions is eliminated, as well as the possibility of
changing constants by means of assignment to formal parameters.

4. Accessing of Elements of Arrays

The AS-6 central processor instruction set makes it possible to program accessing of
an element of an array by several methods. The instruction generator described

uses only index registers for indexing and not half~word adders, indexing with
which is performed more slowly. In addition, the instruction generator in the line
section obviates the installation of new descriptor registers since operations with
descriptors are performed rather slowly. However, in the cycle prologue

96

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

descriptors are established, inasmuch as is possible, for all arrays which are
worked with in the cycle.

5. Creation of Machine Instructions

AS-6 central processor instructions have various modifications. For example. in
the majority of 2-operand instructions the first operand must be in a register and
the second can be in the on-line memory. in a register or part of a register (e.g..
in the left half of an adder for operations with half—words), and also can be a
constant specified directly in the instruction (constants can be of two lengths--

1 and 3 bytes). Instructions for jumps, the formation of descriptor registers.
etc.. have a special format. Accordingly. the writing of an instruction in auto-
code also has several formats. In view of this, the method of creating machine
instructions used by us, making it possible to generate uniformly various sequences
of instructions, can be of interest.

The GYeNKOH subroutine for the creation of machine instructions receives the follow-
ing parameters from the triad processing subroutine: reference to the so-called
macroinstruction, and several macroinstruction operands (their number depends on

the macroinstruction). An operand can he the number of a register or a reference

to a triad or to an element of a table of characters.

The macroinstruction consists of pictures of machine instructions. In a picture
are described the operation (it is represented by a reference to a description of
the machine instruction) and operands of the instruction in question. A certain
operand can be the same for all uses of a given macroinstruction and then its value
is presented in the picture. Otherwise the description of the operand in the in—
struction's picture indicates the number of the parameter of the GYeNKOH subroutine
which must be put in place of this operand. The description of a machine instruc-
tion contaizs an operation code (the symbolic name of the instruction in autncode)
and several more bits demonstrating how the features of the result are changed

when the instruction in question is executed.

The CYeNKOH suoreutine analyzes the macroinstruction and generates machine instruc-
tions, substituting in place of operands not specified in the macroinstruction
values conveyed as parameters. Furthermore, if the parameter is a reference to a
triad it is ascertained whether the value of the triad is found in a register and
Iwhether it is a constant which can be placed in the instruction. Various modifica-
tions of the instruction are generated depending on the fulfillment of these con-

ditinns.
.6. Optimization in the Instruction Generator

The rolJowing actions are taken for the purpose of optimization in the instruction
generator:

1. Jump instructions causing the transfer of control to the next instruction are
eliminated.

2. Unneeded check instructions before conditional Jumps are eliminated on account
'of the following of instructions which produce result control characters.

97

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

3. The commutativity of operations is employed, which makes it possible to avoid
unnecessary instructions for loading into adder registers.

4. The available instruction for the reverse subtraction of numbers with a floating
point is used together with the subtraction instruction.

5. Multiplication or division of a whole number by a power of two is replaced by
an arithmetic shift.

6. Everywhere it is possible an operand which is a constant is placed directly
in an instruction, which reduces the number of accesses to the memory.

7. when assigning a zero value. the zero write instruction is used, and when
assigning a logical variable the value TRUE, an instruction for writing a 1 into the
position.

8. Parameters for function-formulas are transferred through value and not through
reference.

9. If assignments are not made for the parameter of a subroutine, the value itself
is written into the place of the reference to the value of the parameter upon enter-
ing the subroutine.

6. Comparison with the POREKS Compiler for the BESH-6

The main advantage of the AS-6 central processor is the large virtual memory, which
makes it possible to describe in a natural manner problems whose programming on a
BESM—é causes serious difficulties. Still another plus is the much larger, as
compared with the BESH—6, range of real numbers which can be represented and the
hardware for working with double-precision numbers.

As far as working speed is concerned, it is not much better than in the BBSH-é.
Data which we have accumulated demonstrate that FORTRAN programs which do not
employ operations with double precision are run on the AS-6 central processor an
average of 1.2- to l.S-fold faster than on the BBsn-o. In problems which inten-
sively employ whole-number arithmetic the gain in speed is higher (close to two-
fold). A threefold gain in speed was observed in logic tasks. Since the optimi-
zation procedures carried out are the same for both computers and the design prin-
ciples of the instruction generators are close. the difference in running speed is
caused basically by the different speeds of the BESH-é and AS-6 central processor.

However, in certain cases a program is run more slowly on the AS-é central processor
than on the DESK-6. The reason for this is the small number of postscript regis-
ters. If in a cycle eight or more pages of the on-line memory are worked with

a postscript will be retrieved constantly, which drastically reduces the speed.

Let us cite the following figures. One program is run on the BBSM-é in 3 min 30 s.
0n the AS-6 central processor it took 6 min 5 s to run. The fact was that in a

short cycle nine arrays were worked with and they were all on different pagesi
When these 10 [as published] two-dimensional arrays were replaced by a single

98

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

three-dimensional, as a result of which the elements which are worked with at
close moments of time were side by side, the running time, in spite of the compli-
cation of access to elements of the arrays, was reduced to 2 min 25 s. The sav-

ings is quite considerable.

l

Thus, in writing a program it is necessary to pay attention to the fact that work at
close moments of time be done with close addresses, i.e., that the working set be
sufficiently small. This requirement relates to programming for any computer with
a virtual memory. Hith frequent jumping from page to page, besides the retrieval

of a postscript the transfer of data from the external storage into the on-line
memory will often take place, which also slows down execution of the task.

As far as the size of the programs generated is concerned, the instruction portion
of programs is approximately 20 percent shorter for the AS-6 central processor.

5. The AS-6 Central Processor as a FORTRAN Machine

The overwhelming majority of programs run on a computer are written in a high-level
language. i.e.. machine instructions themselves-are generated not by a human being
but by a compiler. Therefore, on the one hand in making a compiler every effort
should be exerted to utilize the advantages of the machine and, on the other hand,
in designing a computer it is necessary to pay attention to existing programming
languages and methods of compilation. taking into account what the translator can

do and what it cannot do, what is easy for it and what is very difficult. FORTRAN
is one of the most common languages and it is important to us to evaluate the AS-6
central processor from the viewpoint of FORTRAN, for a programmer writing in this
language is interested precisely in the characteristics of a virtual FORTRAN machine

and not of a real physical machine.

0n the whole the AS-6 central processor is quite successful as a PORTRAN machine.
The virtual memory, the presence of a great number of directly addressable regis-
ters, the advanced instruction set, the unique state stack mechanism, the memory

protection apparatus--ali these represent advantages of no small importance.

it is necessary to mention that the AS-6 complex is designed for a broad range of
applications. Therefore, if the AS-6 central processor is used only as a FORTRAN
machine many capabilities of the processor will be unutilized. Of the 186 non-
privileged instructions of the AS—6 central processor a POREKS compiler can use
only 80 (as percent). For the sake of comparison. let us say that on the BESM-6
the FOREKS uses 35 instructions out of 46 (76 percent).

The program magazine (similar to the magazine in the DESK-6) available in addition
to the state stack is utilized poorly. The powerful mechanism for the virtual
performance of operations, when an operation is performed in the usual manner but
the result is written nowhere but serves the purpose of generating control charac-
=ters, is utilized only to a small extent. The FOREKS compiler can generate only
two of these instructions: virtual setting and virtual subtraction. It seems to
us that the other cheek instructions are also not necessary for a FORTRAN machine,

-and instead of virtual subtraction it is preferable to utilize a comparison in-
struction which does not result in overflow. Of course, in the AS-6 central

99

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

processor there are instructions for comparing whole numbers, bytes and bits,
but there is no instruction for comparing numbers with a floating point.

Meanwhile it seems to us that for the convenient implementation of a compiler from
FORTRAN in the AS-6 central processor there are not enough setting and write in-
structions and instructions for dividing numbers with double precision. Also in-
convenient is the fact that the addition. subtraction and multiplication of numbers
with double precision can be performed only by having placed both operands in adder
registers.

In [10] it is stated that a machine is good if a compiler can utilize its advantages
without high costs. The AS-6 central processor does not totally meet this require-
ment. For example, it is difficult to select an optimum method for accessing ele-
ments of an array.

of course, the AS-6 central processor offers many opportunities for optimization,
the utilization of which is fairly simple (they are listed above). and this is an
important advantage of the machine.

The results of a measurement of the frequency of the use of various instructions

of the AS-6 central processor in the text of programs generated by a FORBKS compiler
are given in table 1. The gathering and processing of statistical data were per-
formed by means of the POPLAN system [11]. Several FORTRAN programs numb:ring a
total of 2146 instructions were translated. With this 12,75h machine instructions
were generated. Fifty-four instructions of the AS-6 central processor were used.

Table 1.

Name of instruction Percentage of use

Formation of descriptor

Hritein of descriptor

Setting half-word adder

Setting adder

writein of adder

Hritein of half-word adder

Setting saving mask

Jump with return

Setting index register
Multiplication with floating point
Setting descriptor with connective
Addition of half-word whole numbers
Addition with floating point

Index register writein

Setting descriptor

End of cycle

Subtraction with floating point
Hultiplication of half-word whole numbers
Write zero into word

Other instructions

Hr-
ooHHHr-Hwnuabébmuo‘NQr-tb

0000......

use

0 a a

ﬁHwU¢GﬁQMOOMOOW¢§GbU

100

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

The most used were the instructions for forming and writing in descriptor registers.
They are used mainly in transferring parameters. The formation instruction is
rather slow. which has a negative effect on the running speed of FORTRAN programs.

Let us point out also that virtual operations made up only 0.3 percent. Conversion
of a number from a uhole number into a floating was encountered 41 times and from
a floating int: a whole 5 times. The reverse subtraction instruction made up 20
percent of all cases of subtraction with a floating point. It was possible to use
the shift instruction in 32 percent of instances of the multiplication and division
of whole numbers. The vritein of a zero made up 15 percent of all word writein
operations.

Bibliography

1. Shtarkman. v.5. "Svravnitel'nyy snaliz translyator FOREX" [Comparative Ana-
lysis of PORBX Compiler], Preprint No 129, USSR Academy of Sciences Institute
of Applied Mathematics, 1978.

2. Shtarkmsn, Vik. s. "Lokal'naya optimizatsiya ob"yektnoy programny v trans-
1yatore Foreks" [Local Optimization of an Object Program in the POREKS Com-
piler], Preprint No 149. USSR Academy of Sciences Institute of Applied Mathe-
matics (IPH AN SSSR), 1979.

3. Hikhelev, V.H. and Vershubskiy, V.Yu. "ASTRA. Novyye vozmozhnosti yazyka"
[ASTRA: Nev Possibilities of the Language], Preprint No 61, 1PM AN SSSR, 1976.

a. Chaykovskiy. H.G. et a1. "Avtokod dlya tsentrsl'nogo protsessora sistemy
AS-6" [Autcode for the AS—6 Central Processor System], ITEF-153, Moscow. 1976.

5. "Draft Proposed ANS Portran (X3J3/76)," SIGPLAN NOTICES, Vol 11, No 3, her 1976.

6. "Programmirovaniye na yazyke Assenblera Yes BVM" [Programming in the Yes Com—
puter Assembly Language], Moscow, Statistika, 1976.

7. Tsikritzis, D. and Bernstayn, P. "Operatsionnyye sistemy" [Operating Systems].
Moscow, Mir, 1977. '

8. Cris, D. "Konstruirovaniye kompilyatorov dlya tsifrovykh vychislitel'nykh
mashin" [Designing Compilers for Digital Computers], Moscow. Kit, 1975.

9. Aho, A.V., Johnson, S.C. and Ullman, J.D. "Code Generation for Expressions
with Common Subexpressions." JACH, Vol 25, No 1, Jan 1977.

10. Uirth, N. "The Design of a PASCAL Compiler," SOPTVARB - PRACTICE AND EXPERI-
ENCE. V01 1, No 4. Oct 1971.

ll. Bayakovskiy, Yu.M., V'yukovs, N.I., Galatenko, V.A. and Khodulev, A.8.
“Programmirovaniye na yazyke POPLAN“ [Programming in POPLAN], 1PM AN SSSR,
1976.

COPYRIGﬂT: Izdatel'stvo "Nauka", "Programmiroveniye", 1981

883]
C80: 1863/65 101

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UDC 681.3

SYSTEM 0? DIALOGUE PREPARATION 01’ TASKS FOR WIRED SERIES CMUTBRS

Moscow PROGWANIYB in Russian No 5, Sap-Oct 81 (manuscript received 2 Sep 80)
pp 68-73

[Article by V.V. Khanykov. AN. Rybakov and N.V. Anan'ina]

[Text] In this paper a description is given of an instrument system for working
with a design library for Unified Series (YeS) computers in the operating system.

The development, debugging and utilization of software in a Yes operating system
assume the heavy use of an assignment control language (Yam). The complexity of
the software, the English language memonics end the "machine" orientation of the
YaUZ cause a great nuwer of errors in assignments. The apparatus of catalogued
procedures only partly facilitates the user's situation.

For the development of Yes computers the problem of facilitating conunication
between the user and the Yes operating system assignment control system on the
national level has become pressing.

In this paper a solution based on the creation of a psychologically natural input
language is discussed and a description is given of the implementation of a pre-
processor for the dialogue preparation of assignments for Yes computers. ~

The rejection of a dialogue assignment remote input (0082) system was caused by the
fact that the instruction language used in it requires a great number of input
characters in describing an assignment and is oriented toward the English language.
In addition. when working with a D032 system the possibility of parallel-series
input is lacking and the effectiveness of the work itself is determined to a great
extent by the configuration of the system and the nuaber of users working aiml-
tsneously.

The features of the development of the input 1.02 by means of a preprocessor are
illustrated in' the example of the creation of a function-oriented language for
working with a design library [1]. The procedure for specifying function state-
ments is as follows:

An analysis is made of user's actions in the development and debugging of routines
by means of a design library.

102

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

In the user's work typical actions are singled out which are usually independent of
the computer and are determined by the specifics of the area of analysis.

Each typical action or combination of them is assigned some function-oriented
statement whereby the variable parts of these statements correspond to real objects
on which the user plans actions in his assignment.

The following can be placed under the heading of typical actions of a user when
working with a design library: designation of a specific library from a great
number of permissible libraries in the system, selection of a specific section of a
library, and the set of functional operations relating to manipulating a selected
object. The minimum set of function-oriented statements for working with a design
library must include the following statements: start of assignment. notation in
design library. translation from library. editing of contents of library, start
execution. circulation of contents of library for different machine media, etc.

The variable parts in these statements specify the names of assignments, libraries
and objects in the system.

For convenience of the user's working with the system a set of service functions
must be provided for the creation of the design library and for maintaining it in
the working state. In addition, the service functions provide the user with all
the necessary information regarding the state of the design library and the system
as a whole.

The procedure for analyzing Yes computer YaUZ statements for the user's work with
the design library and for the formation of function-oriented statements is dis—
cussed in [2].

A set of Unified Series operating system assignment control language (YaUZ OS Yes)
standard statements performing similar actions is specified for each function-
oriented statement. The software converting function-oriented statements into
standard assignment control language statements performs the role of a preprocessor
for the Yes operating system.

The purpose and functions of the steps of preparing and performing an assignment
in the process of the creation of software are different. At the first step the
user must formulate the sequence of actions in the assignment and describe it in
the assignment control language. At the second step these actions are implemented
in the computing environment of a Yes computer.

The authors sugggest that minicomputers be used in the first step. For this purpose
a dialogue assignment preparation (0P2) system has been developed for Yes computers.
The main objective of the system is for the user to be able to use function-oriented
statements in the dialogue mode for working with the design library. as well as to
offer him timely consultation in working with the assignment control language.

Here it is necessary to make possible the recognition of function-oriented state-
menta regardless of the national language.

The structure of the software of the dialogue assignment preparation system was
chosen on the basis of this objective (fig 1). The system can be in one of two

103

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

nodes-~"Assigxusnt Preparation" or "Consultation'kwherehy the first is the basic
node.

   

   
   
 

  
 

lipupanms
new)»:
Mk1»! 2)‘

Itsuryemupyla -
was ”lame
am 5)

        
  
     
  

  
  

  
   
  

II upswws u- rental! 1 a

57:22:?” {war "m ' ”g,"
3 sum mu
Inpmmsl ‘ dengue

    
  

  
   

Figure 1.

Key:
1. Dialogue maintenance routine b. Aasigxnsnt control language state-
2. Response check routine -' sent and docunent generation rou-
3. System tables tine

5. Consultation subsystem
6. Text inforaation for consultation
subsystem

when it is necessary to obtain information the user can establish the "Consultation"
node. For this he not begin the input of a response to any dialogue assignment
preparation question with a special character.

In the systes is provided the issuance of individual infatuation on the purpose and
syntax of variable infer-scion contained in function-oriented state-ants. on the
algorithn for user's actions in the development and debugging of routines, and also
on working with the dialogue assignent preparation systen itself.

The changeover to the "Assignment Preparation” node occurs autontically after the
end of a response to a user‘s question. The existence of the two nodes lakes it

106

FOR OFFICIAL USE ONLY
FOR(Mﬂﬂ(]Al.USE(NNLY

possible for an untrained user not only to prepare packages of assignments inde-
pendently. but also to learn the Yes computer operating system assignment control
language.

Not the syntactical analysis of function-oriented statements but selection according
to the type of function (selection from a list) is used in the dialogue assignment
preparation system. The table of functional operations on the screen of the display
is shown in fig 2. This‘method of implementing the recognition of function-oriented
statements makes possible maximum independence from the national language and re-
duces the number of errors in writing an assignment. In addition, the problem of
informing the developer regarding statements used in the dialogue assignment pre-
paration system is solved automatically in this case.

PRINTOUT TEXT GET INPORMATION CLEAR AREA 0N DISK

PRINT READING OF LIBRARY PRINT READING OP LIBRARY PRINT READING OP LIBRARY CL
SL RL

COMPRESSION OP LIBRARY SL COMPRESSION OP LIBRARY RL COMPRESSION 0F LIBRARX CL

REMOVAL PROM LIBRARY SL REMOVAL PROM LIBRARY RL REMOVAL PROM LIBRARY CL

TRANSLATE INTO PL/I TRANSLATE INTO FORTRAN TRANSLATE INTO ASSEMBLY LAN-
GUAGE
CHANCES PRINTOUT VTOC EXECUTE
CATALOGUINO IN LIBRARY SL OPTIMIZATION OF ASSIGN- CATALOGUING IN LIBRARY CL
MENT
END OP FORMATION OF PRINT ENTIRE LIBRARY INDEPENDENT OPERATION

ASSIGNMENT

Figure 2. [Designations SL, RL. CL and VTOC are in the Roman alphabet; the
rest is in Russian.)

After the user selects a function the system initiates a dialogue, specifying re-
[ining questions in the natural language relating to objects and the attributes of
specific statements. The dialogue between the user and the dialogue assignment

preparation system is constructed on the basis of rules for the use of function-
orionted statements.

The user's responses in the "Assignment Preparation" mode pass tests based on the
requirements of the syntax of the Yes operating system assignment control language.
In the case of an incorrecc response on the part of the user the dialogue assign-
ment preparation system diagnoses the error and suggests that he repeat the input

of a response. Only correct responses are entered in the appropriate table of the
dialogue assignment preparation system.

A table with the list of functions lights up on the display's screen each time
after the end of the input of the required information relating to the preceding

105

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

function. This makes it possible to construct packages of assignments not accord-
ing to a strict algorithm but in keeping with the user's requirements.

The purpose of the "Optimization," "Get Information" and "Independent Operation"
functions of the dialogue assignment preparation system must be emphasized especial-
ly. When it is necessary to optimize an assignment with respect to the time for
execution on a Yes computer and/or with respect to the distribution of the magnetic
disk storage, the "Optimization" function must be indicated as the last function

in creation of the package. The "Get Information" function accomplishes the output
to the display' s screen and alphanumeric printer of the basic key concepts used in
working with the dialogue assignment preparation system. The "Independent Opera-
tion" function makes it possible for the user to form directly on the display' s
screen the YeS operating system assignment control language statements needed by
him. Thereby the conditions are created for describing unique assignment steps,
which makes it possible to realize the multifunctional capabilities of a Yes com-

puter operating system.

Upon termination of the formation of an assignment the dialogue assignment prepara-
tion system. based on the information stored in system tables. constructs Yes
operating system assignment control language statements and the documentation for
the package created. Instructions for the computer operator and a verbal descrip—
tion of assignment steps are included in the documentation.

An example of a dialogue between a user and the dialogue assignment preparation
system is shown in fig 3. An assignment for a Yes operating system (fig 6) was
formed as the result of the system's operation. The parallel-series input of in-
formation is provided in the dialogue assignment preparation system for the ex-
perienced user. This makes it possible for the user to input. in response to the
first question, all the necessary information relating to the function selected.

DPZ [dialogue assign-
ment preparation sys-

ten]: DPZ SYSTEM NORKING. ENTER NAME OF ASSIGNMENT.

USER: RABOTA [in Roman alphabet]

0P2: ENTER CLASS OF ASSIGNMENT.

USER: 7

DPZ: CLASS OF ASSIGNMENT DETERMINES PRIORITY 0? RUNNING OP

ASSIGNMENT. SPECITIII BY ROMAN CHARACTERS FROM A TO 0.
USER: A

DPZ: ENTER NAME OF LIBRARY.

usza: PRO_BA

DPZ: ERROR IN ENTRY OF LIBRARY NAME. REPEAT ENTRY.
USER: PRDBA [in Roman alphabet}

* k A t

Then a table with a list of functions is output onto the diaplay's
screen. The user indicates by means of the cursor the function
"Cataloguing in SL."

s a a *
[Continued on following page]

106

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

DPZ: ENTER NM! 01’ TEXT.

USER: TEXT [in English]

DPZ: ENTER DATA.

USER: TEXT: PROCEDURE OPTIONSOIAIN); [in English]
I * t *

usm: /*

t t I t

A table with a list of functions is output onto the displsy's screen.
The user indicates by nuns of. the cursor the function "Translate into

PL/ 1."
t * t *
DPZ: ENTER NAME 01" MODULE.
USER: TEXT [in English]

* t t t

A table with a list of functions is output onto the dieplsy's screen.
The user indicates by means of the cursor the function "End of Formation
of Assignment."

Figure 3 .

Ilmnom JOB MSGLBVEL-(l,l),CLASS-A [in English]
//*

//* cmmocumc m LIBRARY [in Russian] SI.
//*

//1mooo1 exec PGM-IBBUPDTE,PARH-NBW
//svsr1uu'r DD SYSOUT-A

//svsurz on DSNAME-PROBASL,

/ / UNIT-SYSDA, DIsp-mn , VOLUME-SER-OSVALD
//svsm DD DATA

./ ADD nm-rzm,LIsr-ALL,szaL-oo, souncn-o
./ NUMBER NEWl-O,INCR-1

TEXT: PROC OPTIONSGIAIN);

)1.

//*

//* TRANSLATE INTO PL/l [in Russian]

//*

//* STEPl - TRANSLATION [in Russian]

//*

/ /RA80002 EXEC PM-ID‘IAA.PARH-NODECK,LOAD,SIZE-$210 ,
[Continued on following page]

107

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

// REGION-52K

”51:3?an on SYSOUT-A

”518013 on nsm-sssrsurs,uum-srsm,

// SPACE-(80.(250.250)),

// nca-mcstzt-so

//srsr.m no nswaawmmmrsr-(mmnss),lmrr-srssq,
// SPACE-(80,(250.100))

//srsu'n DD osnm-aasrsunmnm-mm.

// snot-(1021.. (60,60) , .comrc) .

// sn-(srsm3.srsr.m),ncn-msrzz-ioza

l/SYS‘LIN DD Dmmmurm).

// UNIT-SYSDA,DISP-0LD,VOLM-SBR-OSVAI.D

//*

Ir STEPZ - CATMDGUING IN LIBRARY XL [in Russian]

/ a»

llaanoooa mc m1m,rm'uw',c0Nn-(8.Lr,m0002)
IISYSPRINT DD srswr-A

llsrsmoo DD nsnm-Pnonasu'rm).

// UNIT-SYSDA,DISP-0LD,VOLUHE-SER-OSVAID

llsvsun DD DSNW&&SYSU£1,UNIT-SYSDA,SPACE-(1024 , (100.25» ,
// SEP-SYSLmD, ncn-Bthrzz-mza

//srsr.m on nsmaammsmmtsr-(ommnm),uurr-svssq
[a

//

Figure Is.

The dialogue assignment preparation system is implemented as a set of individual
subroutines written in POKAL. Therefore the addition of a new or the exclusion of
an old function in the structure of the dialogue assignment preparation system
does not present special problems and can be performed by the user.

The following set of hardware is needed for the normal operation of the dialogue
assignment preparation (DPZ) system: a minicomputer of the "Blektronika" type

(or a Cit-3 or (In-lo) with an expanded on-line memory unit; a VERNON-340 display;
an alphanumeric printer of the 0214-180 type; and an 1201' 1370 magnetic disk storage.

In conclusion let us formulate the distinctive features of the system suggested
for the dialogue preparation of assignments for Yes comuters.

l. The use of the national language in the dialogue is conducive to freeing the
user from remembering complicated Yes comutar assignment control language memonics
and to reducing the time for the‘preparation of an assignment.

2. The existence of two modes makes it possible for the user to obtain a con-
sultation at any moment of time in working with the system.

3. Checking of the correctness of user's responses eliminates syntactical errors
in the preparation of an assignment, which is conducive to the efficient utilisa-
tion of machine time for Yes computers.

108

roe OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

4. The number of characters to be input by a user in working with the DPZ system
is reduced drastically.

S. Adaptation of the DPZ system to the level of the user‘s professional training
is made possible by the employment of a serial or parallel-serial data input mode,
as well as by means of the "Independent Operation" function.

6. The functional nature of subroutines makes it possible to expand and develop the
DPZ system without a cardinal change in its structure.

7. The tabular organization of data in the system makes the following possible:
the entry of changes in information entered without waiting for the end of the
formation of a package: the efficient construction of the sequence of assignment
steps in a package; and the creation of uniform documentation conforming precisely
to the assignment package, simultaneously with construction of the package itself.

Bibl iogrsphy

1. Baker. P.T. "Chief Programmer Team Management of Production Programming,"
IBM SYST. J., Vol 11, 1972. p 56.

2. Anan'ina. N.V., Rybakov, A.V. and Khanykov. V.V. "Rationalization of 8 User's
Work with a Yes Disk Operating System in the Development of Programs,"
ELEKTRONNAYA TEKHNIKA, Set. 9. No 1, 1980, p 35.

COPYRIGHT: Izdatel'stvo "Nauka", "Programmirovsniye", 1981

8831
(:80: 1863/45

109

FOR OFFICIAL USE ONLY
FOR OFFKJAJ.USE(NVLY

UDC 681.3.06

ORGANIZATION IN DISPAK OPERATING SYSTm 0P DETERMINATB OUTPUT 0F INPOMATIW OVER
ENTIRE YIELD OF OUTPUT UNITS 0P HUL'I'IHACHINE COMPUTING COMPLEX

Moscow PROGRAHHIROVANIYE in Russian No 5, Sap-Oct 81 (manuscript received 28 Apr 80)
pp 88-91

[Article by V.P. Petlinskiy and V.P. Tyurin]

[Text] Questions are discussed, relating to the software simulation by means of
an operating system of the total field of output units in a multimachine computing
complex. A method is suggested for determinate output based on dividing the
single common output waiting line into a number of separate waiting lines. The
implementation of this method in the DISPAK operating system is described.

In the development of operating systems (08's) for a multimachine computing com-
plex (HVK) traditional strategies and principles are often used for organising the
operation of both the entire system and of individual components of it in a single
machine. This results in the fact that many additional possibilities of the HVK
are unintentionally constricted or are not utilized at all. both from the viewpoint
of conveniences for the user and of the more intelligent organization of running

a solution to problems, and from the viewpoint of the effectiveness of the utiliza-
tion of equipment.

For example, the traditional strategy for outputing information in the single-
machine variant of the DISPAK operating system is buffering in the calculation
process, formation of a request for output and placing it in a single common waiting
line for the end of the task and attending to requests, uniformly formulated and
indistinguishable from the viewpoint of the operating system, from the common
waiting line after the end of the task. Let us note that a request formulated for
output, after being placed in a common waiting line, does not carry any additional
information regarding its belonging to a specific task of the user. This sort of
organisation of output has become widespread in many operating systems, since it

makes it possible easily to implement a multiprogram calculation mode and is class-
ified as system output [1].

ﬂith system output different kinds of information intended for output to various
types of peripheral output units are distributed in the DISPAX operating system
into their own output waiting line [2], and in the OS/HPT. OSIHVT and Yes [Unified
Series] operating system [3. 4] into their own output class, similar to the output
waiting line in the DISPAK operating system. One or more output units oriented

110

NR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

toward a specific type of information to be output are connected to each Output
waiting line. Thus. in the output buffer it is possible to organize as many
waiting lines as the types of output units specified in generation of the operat—
ing system in a given equipment configuration.

In the DISPAK operating system it is possible to indicate four types of output
units in generation of the operating system for a single computer: the ATsPU-
128/2M [alphanumeric printer] type for rapid printout (up to two); the PI-80

type for punched cards; the PL-do type for punched tape; and the CALCOHP type for
a graph plotter [S]. In the process of this study in the output buffer it was
possible to organize up to four individual output waiting lines for the number of
types of output units.

Let us discuss the procedure for attending to each of these waiting lines. Re-
quests from the waiting line are selected for service according to the rule

"first come, first served" (FIFO [first in, first out] [6]). If not just one

unit works with the waiting line in question (output waiting line for rapid print-
out), then units are selected for operation in cyclic order, by turns [2]. It is
obvious that in the latter case according to the arrangement described above for
the organization of system output, the possibility of tying in the output from a
specific task to a specific unit--determinate output——is eliminated. The same
output strategy was used also in DISPAK operating system versions at work in
BESH—6 multimachine computing complexes.

Meanwhile the existence of a coumnn output buffer for the HVK makes it possible to
consider the combination of all output units of the complex as a common output
field (a maximum of eight ATsPU-128/3M's, four PI-80's, four PL-80's and four
CALCOMP-type graph plotters). but not with the hardware switching of units [7]
for operating with a required computer of the complex. but by means of software
switching or the software simulation of this switching. With this more flexible
strategies for utilizing each unit in the total field are possible. The need for
these strategies is occasioned by the large flow of information output from all
computers of the complex requiring determinate output in the total field. as wall
as by the untraditional methods of processing output information in the dialogue
terminal systems undergoing intense development in recent times.

These strategies must make the following possible:

The establishment of priority service according to the "last come, first served“
rule (LIFO [last in, first out] [6]) for specific categories of users.

The putting together of a continuous printed output listing (a roll) for the
tasks of one or more subdivisions of users for a specific time period--the ad-
ministration of output.

bistribution of the output of users of the teleprocessing system over remote user
stations furnished with rapid printing units.

Storage of the output of specific tasks of users on a disk (tape) in the form of
an output file, but without actual printout for the purpose of subsequent process-
ing in the dialogue mode at a terminal.

111

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

With the output of especially valuable inforaation (e.g., in the machine duplica-
tion of documentation on a unit with high printing quality), the sending of it
to a unit set aside for this purpose.

Checking the operation of the required output unit by means of test tasks while
solving other problems in keeping with a set schedule without disrupting the
usual solving mode.

For the purpose of enabling the capabilities indicated above, the output strategy
in the DISPAK operating system described above was changed. One of the main prin-
ciples on which the new strategy is based is the separation of the single common
output waiting line for each type of information into a common line and a number
of separate output waiting lines (a total of 32 waiting lines for each type of in-
formation). The second important principle is the introduction of software-simu-
lated switching of any of the output units of the total output field of the MVK
for working with only one of the output waiting lines.

Hith this output strategy each separate waiting line receives requests for the
output of specific tasks of users, and each waiting line is served by one (or
more) preindicated unit. Additional tables of two types placed in the common
disk storage have been introduced for the purpose of implementing this kind of
service.

The first type of table is represented by tables for the selectioa of requests
(from a combination of key characters of the user's code) and for the distribution
of requests selected to the required output waiting line. In the-same tables
information is stored on the order for placing a request in the waiting line for
service (FIFO or LIFO). The second type of table--the unit switching table-
contains information on which waiting line is served by a specific unit of the
MVK's total output field. Tables of both types contain check information which

is used for checking their contents from the entry of a random code both with
computer hardware errors and with possible software errors.

The employment of the method described above for organizing determinate system
output has a number of important advantages over the alternate method implementing
these possibilities through the system of working with a single common output
waiting line. It is obvious that in this case each request sent for buffering

to the common waiting line must carry an identifier of the unit out of the entire
combination of units assigned to this waiting line which will receive the actual
output. Later, when the common output waiting line is dumped. this identifier is
used for referencing to a specific unit.

It is possible to single out three key advantages of the output strategy used.
First, the tabular method of distributing information over separate waiting lines
makes it possible to achieve great flexibility in possible distribution variants
at a lower cost. since there is no longer a need to revise operating system rou-
tines for the purpose of adjusting for the variant selected. For the required
distribution it is sufficient to fill in the tables in the external storage anew,

which is easily achieved by using service utilities.

112

INDR OFIHCJAL USEZCNNLY
FOR OFFICIAL USE ONLY

Second, in the distribution of addressed requests from a common waiting line the
need arises of retrieving. sorting and accessing requests from the waiting line
according to individual identifiers of units. The addition of these algorithms
can increase to a great extent the amount of routines in the operating system.
Meanwhile the specifics of the running of operating system routines (strict re-
quirements with regard to the capacity of the memory used) reduce and in our case
totally eliminate the possibility of using algorithms of this sort. Algorithms
with preliminary tabular distribution with subsequent simple serial accessing

are implemented considerably more compactly.

Third. in our case overhead costs in the operating system for the startup of
schedulers of the operation of external units are reduced, since it is known be-
forehand whether there are requests for operation in the waiting line to which
the external units of a given computer of the multimachine complex have been
assigned. In the variant which is the alternate of this, startup of the external
unit operation scheduler must be carried out whenever the common line is not
empty. since its functions include the sorting of requests and referencing to the
required unit.

It can also be stated that for the output strategy employed the protection of in-
formation from unsanctioned access and the LIFO rule for privileged requests for
output are implemented easily.

All 32 output waiting lines have a different status. The waiting line with the
number 1 is the common waiting line. It receives all requests for output which
are not distributed by means of selection tables to any separate waiting line.
Waiting lines with numbers beginning with 2 and ending with 20 are transient or
on-line planning waiting lines. The sequence for the placement of requests in
these waiting lines and the serving of requests from these lines can be altered
on line on the basis of up-to-the-minute requirements. The waiting line with the
number 13 is used for the distribution and accessing from it of requests for

test output, for testing the proper working order of the required unit of the
HVK's total output field. The waiting line with the number 16 is used for buffer-
ing requests for output which are later to be teleprocessed. The copying of in-
formation from this waiting line onto a teleprocessing disk (tape) is provided
for in the system. The placement of requests into this waiting line is possible
both by the usual method--by means of request selection-distribution tables--
and through an extracode for storage of the output file in a teleprocessing disk
'(tape). The storage of those files in a general archive of output teleprocessing
files has been implemented at the present time. The organization of personal
archives of use1's output files is to be provided for later. This method can be
.used as an alternative method of the sheet-by-sheet interrogation of output in-
formation described in [8]. Distribution into this waiting line for administra-
tive requirements also has been provided for tasks which end accidentally. Haitin
lines with the numbers 15 and 16 are reserved for serving remote teleprocessing
-stations furnished with rapid printout from output units of the total HVK field.
Uniting lines numbering 17 through 32 are administrative. The placement of re-
quests for output and the output of information from these waiting lines are
_accomp1ished automatically. Furthermore. in units set aside for serving admini—
strative waiting lines the mode of outputing printouts for user subdivisions has

113

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

been implemented. All the information of a schedule for a fairly long time period
(up to 2 to 3 26-h periods) is assigned in advance and is stored in system tables
and scales. This information determines groups of users to be served in this

mode, the units on which the serving of administrative waiting lines is implemented,
and the following order of periods for serving user subdivisions.

The protection of information distributed into any separate waiting line (through
an access key) and protection from its redistribution into another waiting line
are provided for in the system. The same protection is provided also for units
attached for serving a specific waiting line.

Of course, the formation and correction of tables and scales for all five types of
waiting lines is a labor-intensive process which is difficult to perform by hand
without errors. The SYenB (Servis Razgruzki Bufera [buffer dumping servicel)
dialogue system was developed for facilitating the entire set of operations re-
lating to enabling determinate output capabilities in the total field of HVK output
units. This system includes a number of utilities which make it possible to obtain
information on all waiting lines in a form convenient for perception on the screen
of a display, to control on-line waiting lines, to organize archives of output
files, to form, edit and enter into system tables a schedule for administrative
waiting lines, and to set and cancel access keys for waiting lines.

An instruction language is used for communication with users of the SYeRB system.
Protection from unsanctioned access to the system through a key is provided for
in the SYeRB system.

Proposed as a further development of the system described is the creation of a
combination of utilities for working with archives of user output files for the
purpose of their dialogue or package editing and output in processed form to the
required unit.

In conclusion let us mention that all the above-described capabilities of the
DISPAK operating system and SYeRB system have not been realized in operating
systems known to us both for the BBSH-6 computer and computers of the Yes type
[6, 9]. 0n the other hand, the organization of system output in keeping with the
system described in this article can be used with success both for BBSH-é HVK's
and Yes MVK's, as well as for HVK's of greater capacity.

Bibliography

1. Nsdnik, s. and Donovan, Dzh. "Operatsionnyee sistemy" [Operating Systems),
Moscow, Hir. 1978.

2. Zel'dinova, S.A.. Koshkina. L.V., Ozorin, Yu.V.. Tyurin, V.P. and Shulepov, “.1.
“Structure and Functioning of the DISPAK Operating System," TRUDY cart. No 136,
Chelyabinsk. 1973.

3. Kattsan, G. "Operatsionnyye sistemy (pragmaticheskiy podkhod)" [Operating
Systems, a Pragmatic Approach]. Hbscow, Hir. 1976.

116

FOR OFTWCJA1.USE13NLY
9.

COPY

88 31
080:

FOR OFFICIAL USE ONLY

Peledov. G.V. and RAM. L.D. "Wedeniye v 08 Yes EN“ Introduction to
the Unified Series Cowuter Operating System]. Statistika. 1977.

Tyurin, v.r.. ed. "Operatsionnaya sistems DISPAK dlye 33511-6 (state-lama
programistu i operatoru)" [DISPAK Operating System for the “SH-6 (for
System Programrs and Operators”, Moscow. DR AN SSSR [USSR Academy of
Sciences hatitute of Applied asthmatics]. 1973.

Tsikrittis, D. and Bernstsyn. 1’. "Operatsionnyye sistemy" [Operating Systems],
Moscow. Mir. 1978.

anlou, P.G. "Hul'tiprotsessornyye sistemy i parallel'nyye vychisleniya"
[Multiprocessor System and Parallel Computations]. Hoscow, Mir, 1976.

Zel'dinova, S.A., Paremskiy, MN. and Iiyurim, V.P. "Nekotoryye bazovyye vot-
mozhnosti OS DISPAK" [Some Basic Capabilities of the DISPAK Operating System].
Moscow, IPH AN SSSR, 1976.

Lomidze, 0.8. and Silin, LN. "Automated System for Buffering Results of

the Calculation of Problems Utilizing Magnetic Disks in the 'DUBNA' Operating
System for the 33811-6 Computer." PWANIYE. No 3, 1978, p 56.

RIGHT: Izdatel'atvo "Ranks", "Progra-irovaniye', 1981

1863/65

115

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

PUBLICATIONS

UDC 629.7.017.2

mNTROL ALGORITHMS FOR SPACECRAFT

Moscow UPRAVLENIYB DVIZHUSHCIIIHISYA OB'W RA OSNOVB WIN 8 nonn'm in
Russian 1981 (signed to press 17 Apr 81) pp 2-8. 227-232

[Annotatiom introduction, bibliography and table of contents from book "Control
of Moving Objects Based on an Algorithm with a nodal", by Igor' Hikhaylovich
Sidorov, Lyudmila Yevgen'yevna Goncharova and Valeriy Georgiyevich labedev,
lzdatel'stvo ”Hashinostroyeniye", 1063 copies. 232 pages] ,

[Excerpts] Annotation

This book reviews a new class of algorithms with models that are realizable in on-
board computers included in the control contours of moving objects such as flying
craft, the rolling stock of high-speed surface transportation system, and other
complex mechanical system. It considers algorithms with models that have a high
level of adaptability to external disturbances and to a situation of limited infor-
nation. The potential of the algoritlns described is demonstrated through the
example of a number of problens of orienting and stabilizing controlled objects.
The book is intended for engineers specializing in dynamics and control of flying
craft. '

Introduction

The use of onbosrd digital computers in the control systems of rockets and space-
craft raises s nmer of new questions, among which are the designing and building
of the conputers thenselves and their associated input and output data converters.
Another set of probleas coaprises the synthesis of control algorithms that can be
realized on such computers and analysis of the quality of the processes of regula-
tion in the closed systea of the object and the regulator.

This book will consider only the questions of synthesizing algorithms to stabilise
objects with couple: dynamic schemes.

Including an onbosrd conputer in the control circuit opens up new possibilities in
building stabilization systems that would be diffith to realize on the basis of
analog equipment. The use of onboard digital machines makes it possible to replace
a number of stages required to anythesise a stabilization systen with analog ele-
ments by forming a computer procedure for the stabilization algorithm. In this
sense formulation of the algorithm, which ultimately is a program for realisation on

the onboard digital conputer, should be viewed as a stage in designing the
stabilization system.

116

FOR OFFICIAL [8! ONLY
But despite the fact that the traditional process of design is replaced by the
selection of an algorithm where an onboard digital computer (out) is used, this
does not mean that the problem of synthesizing this algorithm can be solved by
using a formalized computing procedure. 0n the contrary, construction of a stab-
ilization algorithm that is realizable on an 006 opens up the possibility of making
fuller use of the characteristics of the dynamic scheme of the object being regu-
lated.

In this book the stabilization algorithms are constructed for complex objects which
include the equations of connected-in oscillators in their dynamic schemes. For
objects whose equations of movement correspond to the movement of an object as a
"solid state," the use of an onc in the structure of the stabilization system can
also produce a certain effect, related to the feature of using computing technology.
In this case questions such as the variability of the parameters of the stabiliza-
tion system. drift, and the like, which are very important for analog technology,
are practically excluded from consideration.

In an ODC the restructuring of the parameters of the algorithm or a switch from
one algorithm to another can be accomplished quite simply. These advantages are
common to the construction of any type of stabilization system for an object when
ODC‘s are used. As for the problem of synthesizing the stabilization algorithms,
the principles of construction and methodology for selecting the parameters of the
stabilization algorithm have been worked out for objects with simple dynamic
schemes, and therefore it makes sense to use analog algorithms that have been
transferred to ODc's.

In this case well-known methods of the theory of discrete systems can be used for
analytic study of the closed system, the object and the regulator.

A greater impact should be expected from the use of ODC's to stabilize large objects
with complex dynamic schemes. In this case the use of ODc’s is justified both from
an economic standpoint and considering the fact that the introduction of new tech-
nology should lead to expanded possibilities of solving new problems.

Stabilization algorithms realized on ODC's make it possible to more fully meet the
requirements made by the object for a stabilization system than where analog tech-
nology is used.

The requirements which the object makes for its stabilization system should be
worked out on the basis of a comprehensive study of disturbing forces and moments
acting on the object. analysis of interference in the sensors that determine the
coordinates of the object, and a detailed description of the dynamic scheme of the
object. Compiling the dynamic scheme of the object includes solving problems of
hydrodynamics that describe the oscillations of the liquid in the fuel tanks, prob-
lems of elasticity theory which describes flexural oscillations of the body of the
object, and a description of the dynamics of the actuating organs of the stabiliza-
tion system with due regard for their basic nonlinearities. It may be necessary to
consider additional questions, for example to study the longitudinal oscillations
of the object and the interrelationship between oscillations of the object in the
stabilization planes and longitudinal oscillations.

The requirements made of the stabilization system are formulated on the basis of ex-
perience studying objects of different classes. Numerous monographs have summar-
ized the results of these studies [1, 16).

117

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Host of the published works devoted to the theory of optimal control concentrate
their attention on construction of an optimal law of stabilization which insures
minimum quadratic deviations of the coordinates of the object given the statistical
characteristics of interference and the external forces and moments acting on the
object.

Experience with the study of the dynamic schemes of various objects shows, however,
that when a stabilization system is being built , in addition to influences on the
selection of parameters of the system of external actions and interference the
chief difficulties in selecting the structure and parameters, which are determining
for the makeup of the control system, depend on internal factors. The characteris-
tics of the objectb dynamic scheme, which includes a series of connected oscil-
lators, are determining.

The requirements made of a stabilization system vary in nature and often conflict
with one another. Therefore, the process of designing the algorithm involves suc-
cessively meeting a series of requirements, and cannot be reduced to the problem
of constructing an algorithm that optimizes a chosen all-embracing criterion in
some particular way.

The structure of a stabilization system using an onc is set forth most fully in [2],
where it is shown that the ODC permits more effective synthesis of a stabilization
system for objects with complex dynamic schemes than does the use of continuous
analog units. This work is able to trace the analogy in the calculations of dis-
crete and continuous systems; this makes it possible to use the experience gained

in the use of continuous systems for analysis and synthesis of discrete control sys-
tems. The amplitude-phase frequency characteristics of the discrete stabilization
algorithm obtained in this way are close to the corresponding characteristics of

an algorithm realized on continuous units. It should be underlined that the method
of synthesizing a stabilization system for objects with complex dynamic schemes that
is presented in work [2] is based on successive satisfaction of the requirements

made of the stabilization system.

In the initial stage of design the basic parameters of the stabilization system are
selected: the amplification factor and differentiation time constant for the object
whose dynamic system has been described in simplified terms by solid state equations
without considering the attached oscillators. The parameters of the stabilization
system are selected so as to insure the necessary quality of regulation processes
when the object is acted on by disturbing forces and moments. The determining fac-
tor in selecting the values of the parameters of the stabilization system is not

the random components of the forces and moments, but rather the standard set of dis-
turbing influences. This set describes the extreme values of the forces and molents,
the gradients of disturbing influences, fixed initial conditions, the constant
values of forces and moments resulting from naximum possible misalignment of the
thrust of the engines, nonsyametrical distributions of weight within the objects,
and the like.

In the next stage the requirements for the amplitude-phase fequency characteristic
of the stabilization system are fulfilled on frequencies that correspond to the

oscillations of the attached oscillators.

The specific features of a stabilization system realized on continuous units and the
fairly dense spectrus of frequencies and spread of the parameters of the dynamic

118

INDR OFFICJAI.|JSE1(NULY
I13R CMHHCJAJ.IJSIZ(MVLY

system of the object away from nomimal values, which is an especially important
consideration when designing a stabilization system, result in a situation where
it is usually not possible to fulfill all the requirements of the object for its
stabilization system. A compromise decision must be accepted. The most striking
example in this respect is the case of nonstabilizability [2]], where the object
makes conflicting demands of the stabilization system for neighboring frequencies.
In this case the work of the stabilization system leads to unstable oscillations
on the frequency corresponding to the oscillations of one of the oscillators. In
other words, the stabilization system, which is expected to insure stability of
movement of the object, cannot handle its assignments and additional design ele-
ments, oscillation dampers, must be introducted to disperse the energy of the oscil-
lations which is pumped through the stabilization system. The problems that arise
during design of the control system are made more complex when building objects
that have multiple purposes and perform a whole set of tasks simultaneously, and

also when the absolute dimensions of the object are increased.

When the disturbed motion of such an object is described by a system of differen—
tial equations, the number of attached oscillators included in the dynamic schema
increases. The spectrum of frequencies of the system becomes denser and the ampli-
tude-phase frequency characteristic of the stabilization system must meet certain
requirements on each of the frequencies corresponding to oscillation of an attached
oscillator. It should be observed that the description of the object by a dynamic
scheme becomes less reliable as the object becomes more complex and its dimensions
increase. This means not only an increase in possible deviations of the actual
parameters of the object from those given in the system of equations, but also the

fact that the physical premises included in the dynamic scheme of the object may not
be entirely correct. The number of attached oscillators included in the dynamic

scheme for such a complex object is somewhat indefinite.

The requirements for the phase characteristic of the stabilization system on the
frequencies of particular attached oscialltors also may not be adequately sub-

stantiated.

The principal goal of the present book is to show that the use of onboard digital
computers in the control contour opens up new opportunities for constructing stabi-
lization algorithms of more complex structure, which can be used to support the

regulation processes of contemporary space craft.

Let us formulate the basic guidelines to employ in making up the stabilization
algorithm.

During construction of the stabilization algorithm the basic principle. which is
successive fulfillment of the series of requirements made by the object of its
control system, is preserved, as in work [2]. It is unwise to pose the problem of
synthesizing an algorithm that optimizes some global criterion, because many dif-
ferent requirements made of the stabilization system must be considered. These
conditions differ in nature, reflect highly diverse physical processes, and can be
reduced to a general criterion only in srtifical terms.

The stabilization algorithm should be synthesized as a set of simpler elements so
that to meet a specific condition imposed on the control system all that must be
done will be to select the parameters of the corresponding element. It is also

119

FOR OFFKJA1.USI(H‘LY
FOR OFFICIAL USE ONLY

essential that the selection of the values of these parameters have minimum impact
on solving the other problems that arise during formulation of the object's
stabilization systen. The multiplicity of tasks which are arising as space tech-
nology develops require building space craft of different classes and with differ-
ent purposes. In single control algorithm can be designed, of course, to solve

the problems of control and stabilization for such objects. Nonetheless, the
process of designing a stabilization system must be based on the general approach
criterion. Greater complexity of the dynamic scheme of the object entails greater
conplexity in the structure of the stabilization algorithm. When synthesizing
stabilization algorithms for complex objects it is necessary to consider this basic
point - as the design becomes more complex, the reliability of the description of
the dynamic system decreases. This circumstance reflects an objective trend in the
development of space technology and results from the fact that it is necessary to
use new design concepts and, consequently, new physical phenomena whose mathematical
descriptions have not been adequately developed are possible.

If the effect of introducing new technology is to permit a broadening of the caps-
bilities of the control system, the stabilization algorithm realized on an one must
take account of the inadequte reliability of the dynamic scheme of the object, and
the increased complexity of the structure of the algorithm should be directed to
greater use of the elements of identification of the structure and parameters of
the object and to introducing elements of adaptation in the algorithm.

There are also design requirements made of the the stabilization algorithm on the
ODC. The algorithm that stabilizes the launch vehicles and space craft in the
recovery and correction segments with the sustainer engines working must not contain
iterative procedures. The algorithm should not include such problems as, for exam-
ple, determining the roots of the characteristic equation, inverting matrixes, cal-
culating special functions, and the like. It is most acceptable to reduce the
stabilization algorithm to finite difference equations.

This statement about the design features of the algorithm does not apply to such
specific problems of space craft control as guidance problems, turns around the
center of mass, and orientation problems. in other words to those cases where

there are significant time intervals between engagement of the engines. For these
problems it is often possible to use iterative procedures to solve problems of idea-
tifying the dynamic scheme of the object.

Conclusion

In conclusion we will set forth a few principles that can be used during work to
synthesize algorithms to control the movement of a space craft. The system to con-
trol the angular motion of a multifunctional space craft must have a broad range of
tasks, including orientation and stabilization of the object, performance of turns
in space, guidance and approach during docking, and numerous others. During an
extended space flight there may be changes in the configuration of the object, the
composition of measurement and actuating organs, and the mass, moment. strength,
and other characteristics of the craft.

Therefore, when constructing particular subsystems that solve particular problems.

their interaction in the overal structure of the control systen of the space craft

must be taken into account. During docking. for example, control of angular motion
must be combined with shaping the approach trajectory, whereas the angular stabili-
zation of the launch vehicles depends very little on the characteristics of the

120

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

trajectory in the active segment. Constructing the control system as a set of
essentially autonomous functional units designed to perform particular tasks may
lead to significant problas in performing the flight of the space craft.

Including an onboard digital computer in the control system makes it possible to
construct the system on the heirarchical principle. because the central processor
processes and selects the informtion coming from lower-level subsystems and also
produces and distributes control signals among these subsystems. Considering the
many different tasks now being given to the control systems of long-lived space
craft, the problem of constructing algorithms that are realizable on ODC's is a
central challenge in synthesizing the control system.

The basic requirement made of algorithms to control the moment of space craft is
to perform their task with due regard for possible changes in the characteristics
of the object and in the composition of measurement and actuating organs. Optimal
performance of the given maneuver by the object is desirable, but it should be ac-
complished so as to fulfill this requirement. The degree of departure from the
optimal solution is determined by the skill of the designer.

The method of constructing a stabilization algorithm that has been proposed in this
book may be used to synthesize algorithms to control other types of movement by
space craft. in particular for problems of guidance and turning the space craft in
space. It should be kept in mind that the method of constructing an adaptive algo-
rithm with a model is not a formalized procedure. but rather depends on the essen-
tial features of the problem being solved.

The problem of adapting the structure and parameters of the algorithm is solved by
analyzing and identifying information that describes the movement of the object.
The dynamic scheme corresponding to the angular movement of contemporary space
craft is so complex that it is difficult to follow the traditional approach to con-
struction of an adaptive control system based on identification of the structure and
parameters of the object's dynamic scheme and then modifying the structure and para-
meters of the control algorithms. It has been shown in this book, through the exam-
ple of constructing a stabilization algorithm. that identification involves expand-
ing the observed signal into its constituent parts. The control action is formed
on the basis of analysis of each of the components of the observed signal. In this
case the algorithm is constructed so that there is no need for detailed study of

the question of the causes of oscillating components or obtaining precise quanti-
tative descriptions of them. The appearance of an oscillating component in the ob-
served signal may be the result of flexural oscillation of the body or oscillations
of the liquid filler, but this does not affect the response of the adaptive algo-
rithm. which is directed to damping the oscillating component.

The purpose of this work has been to show how the algorithm is shaped, its ability
to adapt. and a certain plasticity which is manifested in the process of synthesiz-
ing the algorithm. It is assumed here that the degree to which the designer under-
stands the characteristics of the object's dynamic scheme and the designer's under-
standing of the potential of the algorithm may significantly affect the choice of

a model. the selection of the type of filtering elements, and the organization of

the computing process in the ODC. Choice of the model is conditioned on the mech-
anica] characteristics of the control problem. The characteristics of the filter-
ing elements, in turn, are determined by the requirements made by the object for

121

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

amplitude-phase frequency characteristic of the control system and by the ability
to reorganize the structure of the algorithm in the adaptation mode. In principl
the algorithm can also use more powerful filters, but we should point out that our
attempts to use recursive filters and smoothing weighted functions of the Gibbs
multiplier type did not prove useful in constructing an algorithm with adaptation.
This pointed to the more general principle that any more refined testing tool is

more critical of unforeseen changes in the structure and parameters of the control
object.

The book has deliberately emphasized the fact that it is not wise to formulate a
rigidly regimented method of constructing the control algorithm, similar to the
solutions to mathematical problems. The principle of construction of the control
algorithm must make it possible to employ the creative capabilities of the builders
of the control system, their understanding of the dynamic characteristics of the
object and their perception of the constraints and demands made of the control sys-
tem that have not been formalized in the mathematical statement of the problem.

FOOTNOTES

1. R. A. Abgsryan, and I. u. Rapoport, "Dinamika Raket" [Rocket Dynamics], Moscow,
"Hashinostroyeniye," 1969, 376 pages.

2. V. D. Arena, 5. M. Pedorov, and M. S. Khitrik, ."Dinamika Sist- Upravleniya
Raket s Bortovymi Vychislitel'nymi Hashinami" [Dynamics of the Control Systems

of Rockets with Onboard Computers], )bscow, 'Mashinostroyeniye," 1976,
272 pages.

3. N. N. Bogolyubov, and Yu. A. Mitropol'skiy, "Asimptoticheskiye Hetody v
‘reorii Nelineynykh Kolebaniy" [Asymptotic Methods in the Theory of Nonlinear
Oscillations], Moscow, "Pizmatgiz," 1963, 612 pages.

A. "The Onboard Digital Computers of Contemporary Launch Vehicles and Space
Craft," VOPROSY RARB‘I'NOY mm, 1970. No 7, pp 3-18.

5. P. R. Gantmakher, "Teoriya mtrits" [Matrix Theory], Moscow, "Hanks," 1967,
576 pages.

6. B. I. Gitis, "Preobrazovateli Informatsii dlya Elektronnykh ‘rsifrovykh
Vychislitel'nykh Ustroystv" [Data Converters for Electronic Digital Computers],
Moscow, "Bnergiya," 1975, 4107 pages.

7. L. Ye. Goncharova, B. I. RabinOVich, and I. H. Sidorov, "Construction of
a Control System with a Standard bdel," DAN SSSR, 1973, Vol 213, No 5,
pp 1037-1039.

8. B. Gumbel', "Statistika Ekstreml'nykh Znachsniy" [The Statistics of Extreme
Values], lbscov, "Mir," 1965, 232 pages.

9. R. Kalman, and R. B'yusi, "New Results in Linear Filtration and Prediction

Theory," TRUUY AMBRIKANSKOW OBSHCEBSTVA HWY-MW, SER. 1)., Vol 33,
No 1, IL, 1961.

122

FOR OFFICIAL USE ONLY
10.

11.

12.

13.

14.

15.

16.

17.

18.

19.

20.

21.

22.

N. I. Kiselsv, and l. H. Sidorov. "Statistical Betimate of the Global Bx-
tremun." AVTOHATIKA I WCHISLITBL'NAYA Tmm, 1974, No ’0, pp ‘5-59.

6. Ron. and T. Korn, "Spravochnik po lstematike. Dlys Nauchnykh Rabotnikov
i Inzhenerov” [Handbook of hathemtics. For Scientists and Engineers], Moscow,
"Nauks," 1977, 832 pages.

N. A. Lifshits, V. N. Vinogradov, and C. A. Colubev, "Korrelyatsionnaya
Teoriys Optimal'nogo Upravleniya lhogonernyni Protsessani" [Correlation Theory
of Optimal Control of Multidimensional Processes], lbscow, ”Sovetskoye radio,"
1974, 328 pages.

A. I. Lur'ye, "Nekotoryye Nelineynyye Zadachi Teorii Avtomsticheskogo
Regulirovaniya" [Some Nonlinear Problems of Automatic Regulation Theory],
Macaw-Leningrad, GITTL, 1951, 216 pages.

V. G. Lebedev', and I. H. Sidorov. "Algorithn for Turning a Space Craft with
Elastic Elements at an Assigned Angle." KOSHICHESKIY! ISSLBDOVANIYA, Vol 12,
Vyp 5, 1976, pp 797-799.

Dzh. Kh. Lening, and R. G. Bettin, "Sluchaynyye Protsessy v Zadschakh
Avtomsticheskogo Upravlaniys" [Rendon Processes in Automatic Control Problems],
Moscow, "Isnotrannaya literature." 1958, 387 pages.

6. N. Hikishev, and B. I. Rabinovich, "Dinanika Tonkostsnnykh Konstruktsiy s
Otsekani, Soderzhashchini Zhidkost'" [Dynamics of Thin-walled Design Elements
with Conpartments Containing Liquids], Moscow, 'Tiashinostroyeniye," 1971,

563 pages.

Ye. P. Popov, "Prikladnsya Teoriya Protsessov Upravlsniya v Nelineyniykh
Sistemakh" [Applied Theory of Control Processes in Nonlinear Systems], Hoscow,
"Nauka." 1973, 584 pages.

Ye. P. Popov, I. H. Sidorov, and I. P Korotsyeva. "Division of lbvements by
the Harmonic Linearization Technique and Its Use to Synthesize Nonlinear
Systems," in "Hetody Sintera Nelineynykh Sistem Avtometicheskogo Uprsvleniys"
[Methods of Synethsizing Nonlinear Automatic Control Systems], Moscow,
"Hashinostroyeniye," 1970. pp 71-86.

V. S. Pugachev, "Teoriya Sluchaynkh Funktsiy i Yeye Primeneniye k Zadachan
Avconsticheskogo Upravleniya" [The Theory of Random Pmctione and Its Appli-
cation to Problems of Automatic Control], Moscow, "Pizmatgiz," 1960.

652 pages.

B. I. Rabinovich. "Study of the Stability of Systems with Multiple Degrees of
Freedom," IZVESTIYA AN SSSR, 8311. WICHESKAYA KIBERNETIKA, 1964, No 6,
pp 159-169.

B. l. Rabinovich, "Vvedeniye v Dinnniku Raket~Nositeley Kosnicheskikh

Apparatov" [Introduct lon to the Dynamics of the Launch Vehicles of Space
Craft], Moscow, "Hashinostroyeniye," 1975, 416 pages.

A. P. Razygrsyev, "Osnovy Uprsvleniya Poleton Kosnicheskikh Apparatov i
Korabley" [Fundamentals of Controlling the Flight of Space Craft and Ships].
Moscow. "Hashinostroyeniye," 1977, 1.72 pages.

123

FOR OFFICIAL USE ONLY
23.

26.

25.

26.

27.

28.

29.

31.

32.

33.

35.

FOR OFFICIAL USE ONLY

I. M. Rapoport, "O Nekotorykh Aaimptoticheskikh Metodakh v Teorii
Differentsial'nykh Uravneniy" [Some Asymptotic Methods in the Theory of
Differential Equations], Moscow. Izd. AN SSSR, 1954, 287 pages.

3. V. Raushenbakh, and Ye. N. Tokar', "Upravleniye Oriyentatsiyey Kosmicheekikh
Apparatov" [Control of the Orientation of Space Craft], Mascow, “Nauka,” 1974,
600 pages.

V. M. Rogovoy. and S. V. Cherennykh, "Dinamicheskaya Ustoychivost'
Kosnicheskikh Apparatov s ZhRD“ [Dynamic Stability of Space Craft with
Liquid-Fuel Rocket Engines], lbscow, "l‘lashinostroyeniyeﬂ' 1975, 152 pages.

I. M. Sidorov, and N. N. Balashova, "Control of the Movement of a Space Craft
Entering the Atmosphere at Escape Velocity," KOSMICHBSKIYE ISSLEDOVANIYA,
1973, Vol 11, No 3, pp 388-396.

I. M. Sidorov, and L. Ye. Concharova, "The Stability of Nonstationary Control
Systems with Nonlinear Correction Devices," in "Probleny Navigatsii i
Avtomaticheakogo Upravleniyaf' [Problens of Navigation and Automatic Control],
Izd. VINI‘I'I, 1969, Vyp 1. pp 105-52.

I. M. Sidorov, L. Ye. Goncharova, and V. I. Prokhorenko, "Recognition of the
Spectral Structure of Control Processes," in ibid.. pp 53-59.

I. M. Sidorov. and I. P. Korotayeva, "Study of Nonlinear Systems in the Case of
Establishing Dun-Frequency Processes," IZV. AN SSSR. SEN. MICHISKAYA
1133mm, 1969. No 5. pp 148-158.

I. M. Sidorov, and I. P. Korotayeva, "Study of the Structural Stability of
Mechanical Systems with Many Degrees of Freedom in the Presence of a Correct-

ing Device," 12V. AN SSSR. SBR. TWICHBSKAYA KIBERNB‘I'IKA, 1965, No 5,
pp 183-187. '

I. M. Sidorov. L. B. Krangacheva, and V. c. Lebedev, "Construction of e
Stabilization Algorithm for a Deformable Space Craft Using an Onboard Digital
Cowuter," KOSMICHESKIYB ISSLBDOVANIYA, 1973, Vol 11, Vyp 3, pp 388.396.

I. M. Sidorov, and V. V. 'Iinofeyev. "Analysis of bio-Frequency Regimes of Os-
cillations in a Stabilization System," IZV. AN SSSR. SEN. MICIIBSKAYA
KIDKRNBTIKA, 1978, No 1, pp 175-182.

I. M. Sidorov. and S. V. Cheremykh, "One Method of Studying the Stability of
Regulmble Systems," INZB. mm. mm WERDOGO 131A, 1967, No 2,
pp 76-80.

N. V. Snirnov, and I. V. Dunin-Darkovskiy, "Kore 'I‘eorii Veroyatnostey i
Iktematicheskoy Statistiki dlya 'Iekhnicheskikh Prilozheniy" [Course in Prob-
ability Theory and Mathematical Statistics for Engineering Applications],
Moscow, "Nauks," 1965, 347 pages.

A. V. Solodov, "Metody Teorii Optimal'nykh Sisten v Zadache Nepreryvnoy
Lineynoy Pil'tratsii" [Methods of the Theory of Optimal Systems in the Problem
of Continuous Linear Filtration], Moscow, "Nauka," 1976, 252 pages.

12!.

POROFFICIALUSEONLY
37.

38.

39.

40.

‘1.

42.

K. Spidi, R. Braun, and Drh. Gudvin, "Teoriya Upravleniya. Identifikatsiya
i Optimizatsiya Sistem Upravleniya" [Control Theory. Identification and
Optimization of Control Systems], Moscow, "Mir," 1973, 214 pages.

Yu. T. Tu, "Tsifrovyye i Impul'snyye Sistemy Avtomaticheskogo Dpravleniya"
[Digital and Pulsed Automatic Control Systems]. Hoscov, "Hhshinostroyeniys,"
1966, 703 pages.

Pirmen and Tite, "Digital Stabilization System of the Titan 38 Launch Vehicle."
VOPROSY RAKETNOY TEKHNIKI, 1970, No 7, pp 42-58.

Yu. A. Tsurikov, "The Stability of One Dynamic System," Illa. ZHURNAL.
HEXHANIKA TVBRDOGO TBLA, 1966, No 2, pp 193-195.

Ya. Ya. Tsypkin, "Teoriya Lineynykb Impul'snykh Sistem" [Theory of Linear
Pulsed Systems], Hoscou, "Ranks," 1963, 968 pages.

P. Chaki, "Sovremennaya Teoriya Dpravleniya" [Contemporary Control Theory],
Moscow, "Mir," 1975, 376 pages.

V. A. Shatalov, S. N. Seletkov, and D. s. Skrebushevskiy, "Primeneniye EVH

v Sisteme Upravleniya Kosmicheskimi Apparatami" [The Application of Computers
in Systems to Control Space Craft], hoscov, "Hashinostroyeniye," 1972,

240 pages.

Table of Contents

Introduction . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 3

Chapter One. Objects of Regulation . . . . . . . . . . . . . . . . . . . . . 9

1.1. Equations of Disturbed Rocket Motion . . . . . . . . . . . . . . . 9
1.2. Functional and Structural Schemes of Stabilization Systems with
OnboardDigitalcowuters..................... 19
1.3. Selecting a System of Sensors . . . . . . . . . . . . . . . . . . . 25
1.4. Characteristics of the Dynamics of a Stabilization System with
an Onboard Digital Computer . . . . . . . . . . . . . . . . . . . . 27

Chapter 2. Methods of Studying Stability and Transitional Processes . . . . . 32

2.1. Reducing a System of Equations to Canonical Form. Approximated

Formulas for Roots . . . . . . . . . . . . . . . . . . . . . . . . 32
2.2. Criterion of Stabilizability of the Object of Regulation . . . . . 43
2.3. Construction of the Solution Envelope. Determining the Ampli-

tude of the Limit Cycle . . . . . . . . . . . . . . . . . . . . . . 48
2.4. Consideration of the Variability of the Coefficients of Equations

of Disturbed Motion . . . . . . . . . . . . . . . . . . . . . . . . 57
2.5. Two-Frequency Oscillations in Nonlinear Stabilization Systems . . . 66

Chapter 3. Examples of the Application of Optimal Control Theory to Stabili-
zation Problems . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 76

3.1. The Case where the Object of Control Is Described by Solid

State Equations . . . . . . . . . . . . . . . . . . . . . . . . . . 76
3.2. Optimal Control with Consideration of Additional Degrees of

Freedom . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 82

125

IN)! (HHHCIAL.UEIZ(MNLY
Chapter A.
4.1.

Chapter 5.

FOR 0F1WCJAL USEZCMNLV

Stabilization Algorithm with Model . . . . . . . . . . . . .
Sequence of Solving the Problem of Synthesizing a Stabili-
“ti-on Algorith. C O I I O O O 0 0 O O O O 0 O O O I O O O I
Selecting the Method of Smoothing . . . . . . . . . . . . . .
The Case of Approximating the Input Signal with a Parabola
bytheLeastSquaresMathod.................
Scheme of the Algorithm with Model. Variation I . . . . . .
Finite Difference Equation of Variation I of the Algorithm. .
Calculation of the Roots of a Closed System Using the
Transfer Function of the Algorithm with Model . . . . . . . .
Consideration of Aerodynamic Moment in the Model . . . . . .
Construction of an Algorithm to Stabilize the Center of Mass
and Consideration of the Dynamics of Actuating Organs . . . .
Examples of Stabilization Processes Using the Algorithm
with mdel O O O O 0 O O O O O C O I O O O I O Q 0 O O O O 0

Algorithm for Active Influence on Oscillations of Attached

Oscillators . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .

5.1.

Conclusion
Footnotes

COPYRIGHT:

11,176

Formulating the Requirements Made by the Object of the
Amplitude-Phase Frequency Characteristics of the Stabili-
zation Algorithm to Insure Stability of the Closed System .-.
Structure of the Algorithm with Model "hen Actively Influ-
encing Oscillations of Attached Oscillators. Variation II.
Finite Difference Equation of the Algorithm. Variation II.
Two Examples of Constructing a Stabilization Algorithm . .
Modification of the Algorithm in Variation II . . . . . . .
System of Precise Orientation of the Object around the
Center of Mass Considering Elastic Oscillations . . . . . . .

e-oo

Elements of Adaptation in the Algorithm with Model . . . . .
Principle of Constructing an Adaptive Algorithm with

Mad 1. Variation III . . . . . . . . . . . . . . . . . . . .
Realization of the Adaptive Algorithm on an Onboard Computer.

Analysis of the Work Capability of a Stabilization System. .
Effect of Deviation in the Coefficients of the Model from
Feasible Coefficients on Stability of the System . . . . . .
Study of the noise Suppression of the Stabilisation System.
Nonlinear Element of the Saturation Zone Type . . . . . . . .
Nonlinear Element of the Type of the Relay with a Zone of
Monsensitivity . . . . . . . . . . . . . . . . . . . . . . .

Optimization of External Disturbances . . . . . . . . . . . .

oaeasasassseessssssosooeseaseas

osssaassaoosassssssseeaossseoso

Izdatel'stvo "Mashinostroyeniye", 1981

CSO: 1863/50

126

INDI‘OIIICJAI.lEﬂ!(HVLY
FOR OFFICIAL USE ONLY

UDC 519.86: 681.3

MACHINE MATHEMATICAL MODELING

Moscow REALIZATSIYA MATEMATICHBSKIKB MODELS? NA EVH in Russian 1981 (signed to press
22 Jun 81) pp 2-5, 153-144. 168-176

(Annotation. foreword. excerpt from chapter 6.1. bibliography and table of contents
from book "Machine Realization of Mathematical Hodels" by Viktor Aleksandrovich
leont'yev, [zdatel'stvo "Bnergiya", 7,000 copies, 175 pages]

[Excerpts] Annotation.

The problem of controlling a set of programs based on analysis of a real-time
"demand-production" model is examined. The criteria for effectiveness selected
are those associated with model dimension. accuracy in modeling and the amount of
nonproductive use of machine time. Effective algorithms are derived for solving
allocation and traveling salesman problems.

The book is intended for engineering and technical personnel engaged in the development
of models and algorithms, and also for statistical analysis of economic efficiency
in automated control systems.

Foreword.

The further upsurge in the national economy and the more complete satisfaction of
the public's material and spiritual needs can be accomplished primarily through
growth in the efficiency of social production and the acceleration of the scientific
and technical progress [1.2].

A special place is now assigned to improvements in labor productivity, the rational
utilization of material resources and manpower, and economical opening up and
exploitation of natural resources. And in this business. an exceptionally
important part is being played by improvements in the planning mechanism and the
organizational forms of management, and also in economic accounting based on the
development of state and sector automated control systems and special mathematical
models for solving the most urgent and complex socioeconomic problems.

The fundamental principle in building control systems and large models is the systmns
approach whose essence has been described in [3, page 455]:

127

FOR1DFFKJALIﬂﬂEONLY
FOR‘OFFKJAI.USEIONLY

l) formulating goals and clarifying their hierarchy before the initiation of
any activity associated with control; this includes decisionmaking.

2) obtaining maximum effect in the sense of achieving the goals set with minimum
cost by comparative analysis of alternative pathways and methods of achieving the
goals and making the appropriate choice;

3) quantitative analysis (quantification) of goals and the methods and facilities
used to achieve them. based on a broad and comprehensive evaluation of all possible
and planned results of activity.

Thus. the systems approach is a generalized. organizational-management principle
characterizing the highest stage in the development of the control process over

a given class of objects and it arms the developer and researcher with a powerful,
standardized tool for analyzing and synthesizing systems that differ in terms of
functions, character and structure and gives them a scientifically sound "template"
for action. In accordance with this approach. during the first stage individual
optimization problems and sets are resolved. special mathematical methods and
approaches are worked out for problem solving and methods for analysis and
measurement of the status of objects. and particular control problems are studied,
and so forth.

It is with the solving of precisely these questions. and also with the methods for
realizing and computing operating conditions for machine models of complex processes,
that this book deals.

The basic problems selected by the author are selection of dimension for the objects
modeled. accuracy in modeling and minimization of nonproductive use of machine time.
In accordance with this. methods and pathways have been worked out for achieving

set goals: an algorithm for selecting model dimension; a method for metareductions
[metod.metaprivedeniy] for solving allocation problems, to which the problem of
modeling accuracy is reduced; algorithms for solving traveling salesman problems

in enhanced dimension, in which a rational sequencing organization is set for the
operation of units in the program set.

It should be noted that the need to solve the problem of model dimension using
machine methods has now come to a head; but work devoted to this question can be

found neither in the Soviet nor the foreign literature. The method of metareductions,
based on iterative maximization of dual evaluation of allocations within a problem

as a problem in linear programing with specific matrix constraints may be of interest
to specialists in the the theory of algorithms and computing methods. In a number

of instances. the features of this method have required the introduction of
nontraditional terminology.

The approaches developed to controlling the realization of program sets are oriented
largely on the application of economic dynamics in the models. However, problems

of selecting model dimension and minimizing nonproductive use of machine facilities
can be applied to a broad class of models. The method of metareductions in discrete
programing presented is not linked with the features of any particular models and
can be used in all cases where the control problem for the process being considered
is reduced to a problem of allocations.

128

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

The author expresses his deep gratitude to doctors of technical sciences Yu.H.
Fatkin and I.V. Goryachev, candidates of physicomathematical sciences V.A. Antipov,
V.L. Arlazsrov and Ye.A. Dinits, and candidates of technical sciences A.L. Uzdemir
and 1.1. Bronshteyn, who participated at various stages in examining and discussing
the material forming the basis of the book; and also to T.N. Maharova and T.S.
Rukina for their help in preparing the material for print.

The author expresses his special thanks to candidate of technical sciences V.N.
Buslenko for his important criticisms and advice. which have been taken into account
in the final version of the book.

Enquiries and recommendations should be sent to: 113116. Moscow, “-116. Shlyuznays
naberezhnaya 10, "Energiya" Publishing house.

Chapter 6. Technical Means for Automating the Acquisition of Statistical Data.

In this chapter we consider special devices that free the machine user from the
need to carry out laborious, nonproductive work on acquisition, logging and initial
processing of statistical input data (that is, determination of matrix distances),
and conduct certain procedures that have traditionally been done directly in the
computer. Thus, in the devices described. a number of algorithms are derived for
initial data processing, leading to a reduction in the volume of input data and

'thus to a reduction in computing operations. In other cases the devices are designed
to carry out operations following which the search for optimal plane is accelerated.

The devices described can be used in control of industrial output production, for
example, filler (for drawing synthetic fibers). for analyzing specimens in studies
of metallic structures and geological samples. for doing electron microscope studies
on the quality of stored foodstuffs; and also in all cases where a large number

of small-dimension objects in a study have heating temperatures, degrees of
illumination. color and other attributes that differ sharply from the levels in

the background against which the objects are placed.

From a design viewpoint. the devices are a set of standard electronic com-
ponents, which execute measurement and logic functions and which are controlled

with the aid of a (control) program unit and memory. The unit should be thought
of as either a general-purpose or a control computer.

BIBLIOGRAPHY

l. "Haterialy XXVI s'yezda KPSS" [Materials on the 26th CPSU Congress], Moscow
Politizdat, 1981. p 223.

2. Brezhnev, L.I. "Velikiy Oktyabr i progress chelovechestva. Doklad na sovmestnom
torzhestvennom zasedanii Tsentral'nogo Komitets KPSS. Verkhovnogo Soveta SSSR
i Verkhovnogo Soveta RSFSR v Kremlevskom Dvortse s'yezdov 2 noyabrya 1977 gods"
[The Great October and Human Progress. Reported Delivered at a Joint Ceremonial
Session of the CPSU Central Committee. USSR Supreme Soviet and RSFSR Supreme
Soviet in the Kremlin Palace of Congresses, 2 November 1977], Moscow. Politizdat,
1977. p 30.

129

FOR OFFICIAL USE ONLY
3.

4.

5.

6.

7.

8.

9.

10.

ll;

12.

13.

FOR OFFICIAL USE ONLY

Gvishiani. D.M. "Organizatsiya i upravleniye" [Organization and Control].
Moscow. Nauka. 1972, p 536.

"Metodologicheskiye voprosy postroyeniya imitatsionnykh sistem: Obzor/S.V.
Yemel'yanov. V.V. Kalashnikov. v.1. Lutkov. B.V. Nemchirov" [Methodological
Questions in Building Simulation Systems. A Collection of Works by S.V.
Yemel'yanov. V.V. Kalashnikov. v.1. Lutkov and B.V. Nemchirov.]. edited by D.M.
Cvishiani and S.V. Yemel'yanov. Moscow. International Center for Scientific
and Technical Information. 1978. p 88.

"Bkspertnyye metody v sistemnykh issledovaniyakh" [Evaluation Methods in Systems
Research] edited by USSR Academy of Sciences academician D.M. Gvishiani and
corresponding member of the USSR Academy of Sciences S.V. Yemel'yanov, in
"Sbornik trudov VNII sistemnykh issledovsniy" [Collection of Works by the All-
Union Scientific Research Institute for Systems Research]. Moscow. USSR State
Committee for Science and Technology. 1979. 4th edition. p 88.

Yu.M. Fatkin. L.N. Blyoskina. J.N. Dmitrieva et a1. "Hierechical imitation
demand-supply model. Preprints IPAK 75. Sixth Triennial World Congress, Boston]
Cambridge. Massachisetts, pt III D. session 62; Urban. Regional and National
Planning, 62.5.

Avsnesov. Yu.A. "Prognozirovaniye sprosa v roznichnoy torgovle" [Predicting
Demand in the Retail Trade]. Moscow. Ekonomika, 1975. p 103.

Likhtenshteyn, V.Ye. "Modeli diskretnogo programmirovaniya" [Models in Discrete
Programing]. Moscow, Nauka. 1971. p 328.

Bales. E. "An Additive Algorithm for Solving Linear Programs with Zero-One
Variables," OPERATIONS RES.. 1965. Vol 13. No 4. pp 517-546.

Semenova. V.A. "Opredeleniye rstsional’nogo variants spetsializataii sel'sko-
khozyaystvennykh predpriyatiy v rayone" [Determination of the Rational Variant

in Rayon Specialization of Agricultural Enterprises] in "Bkonomiko-matematicheskiye
metody planirovaniya i analiza sel'skokhoayaystveunogo proitvodstvf' [Economic-
Mathematical Methods in Planning and Analysis of Agricultura1 Production].
Novosibirsk. Nauks (Siberian Branch). 1969. pp 93-115.

Cranberg. A.G. "Sel'skoye khozyaystvo v modeli optimal'nogo territorial'no-
proizvodstvennogo compleksa" [Agriculture in a Model for the Optimal Territorial-
Production Complex] in "Economic-Mathematical Methods in Planning and Analysis

of AgriculturalProduction," Novosibirsk. Nauka (Siberian Branch). 1969.

pp 53-73.

Dudkin. L.M. and Vakhutinskiy. I.Ya. "Vzaimouvyatka optimal'nykh planov ratnykh
urovney upravleniya metodami iterativnogo agregirovaniya" [Coordination of
Optimal Plans at Different Control Levels Using the Methods of Iterative

Sequencing] Moscow. Nauka. 1975. p 256.

Dinits. Ye.A. "Algoritm porazryadnogo sokrasheheniya nevyazok i transportnyye
sadachi" [An Algorithm for Bit Serial Contraction of Discrepancies and Transport
Problems] in "Issledovaniya po diskretnoy matemetike" [Studies in Discrete

Mathematics]. Moscow. Nauka. 1973. PP 56-57.
130

FOR OFFICIAL USE ONLY
14.

15.

16.

17.

18.

[9.

20.

21.

22.

23.

24.

25.

26.

27.

FOR OFFICIAL USE ONLY

Mikhalevskiy. 3.". "Model' narodnogo khozyaystva" [A Model of the National
Economy] in "Slovar'-spravochnik: Matematika i kibernetika v ekonomike" [A -
Handbook of Mathematics and Cybernetics in Economics]. Moscow. Ekonomika. 1971,
p 97.

Dinits, Ye.A. and Kronrod. M.A. "Odin algoritm resheniya zadachi o naznachenii"
[One Algorithm for Solving the Allocation Problem]. DOKLADY AN SSSR. 1969.
Vol 189. No 1. pp 23-25.

Bntsiklopediya kibernetiki [Encyclopedia of Cybernetics]. Vols 1-2. Kiev. Edited
by the Ursl'sk Soviet Encyclopedia. 1975. p 376.

Bellman. R. and Bndzhel. B. "Dinamicheskoye progrsmnirovaniye i upravleniya
v chastnykh proizvodnykh“ [Dynamic Programing and Control in Partial Derivatives].
Moscow. Mir. 1974, p 207.

Chernous'ko. F.L. and Banichuk, N.V. "Variatsionnyye radachi mekhaniki i
upravleniya" [Variation Problems in Mechanics and Control]. Moscow. Mauka.
1973. p 238.

Korbut. A.A. and Pinkel'ahteyn. Yu.Yu. "Diskretnoye programmirovaniye" [Discrete
Programing]. Moscow. Nauka. 1972. p 368.

Kantorovich. L.V. and Gorstko. A.B. "Optimal'nyye resheniya v ekonomike"
[Optimal Decisions in Economics]. Moscow. Nauka. 1972. p 231.

angvili. U.I. "Nelineynoye progremmirovsniye" [Nonlinear Programing], Moscow,
Sovetskoye Radio, 1973, p 311.

Yudin. 0.8. and Col'shteyn. Ye.G. "Zadachi i metody lineynogo programmirovaniya"
[Problems and Methods in Linear Programing], Moscow. Sovetskoye Radio. 1966.
p 736.

“Statisticheskoye izucheniye sprosa i potrebleniya" [Statistical Studies of
Demand and Consumption]. Moscow, nauka. 1966, p 259.

Lur'ye, A.L. "Problemy optimizatsii ekonomicheskoy sistemy" [Problems in
Optimizing the Economic System]. Moscow. Moscow State University. 1969.

pp 3-25.

Knssnv, V.V. "Mezhotraslevoy balanc" [The Interscctor Balance]. Moscow.
Ekonomika, 1966. p 223.

Ivanov. V.V. "Voprosy tochnosti i effektivnosti vychislitel'nykh algoritmov
(obzor dostizhcniy v oblasti kibernetiki i vychislitel'noy tekhniki)" [Questions
of Accuracy and Efficiency in Computing Algorithms. A Review of Achievements

in the Field of Cybernetics and Computer Technology]. Kiev. Ukrainian SSR

Publishing Commission. 1969. p 135.

Sergiyenko, I.v. "Metody urgenizatsii vychislitel'nogo protsessa na
vychislitel'nykh mashinakh. Obzor" [Methods of Organizing the Computing Process
in Computers. A Review]. Kiev. Ukrainian SSR Publishing Commission, 1971, p 162.

131

INDR 0F1WC]A1.USE§(NVLY
28.

29.

30'

31.

32.

33.

3b.

35.

36.

37.

38.

39.

FOR OFFICIAL USE ONLY

Lipayev, V.V. and Yashkov. S.F. "Bffektivnost' metodov organizatsii
vychislitel'nogo protsessa v ASU" [Efficiency in Methods for Organizing

the Computing Process in Automated Control Systems], Moscow, Statistika, 1975,
p 255.

Papkov. v.1. "0 statisticheskom issledovanii programm bystrodeystvuyushchikh
vychislitel'nykh mashin" [Statistical Studies on Programs in High-Speed Computers],
in "Vychislitel'nays tekhnika" [Computer Equipment], Leningrad. Bnergiya, 1972.
Second edition, pp 61-67.

IVANOV. V.V. "Nekotoryye voprosy optimizatsii vychisleniy" [Questions of
Computing Optimization] in "Matematicheskoye obespecheniye BTsVM" [Software
for Digital Computers]. Kiev, Ukrainian SSR Publishing Commission, 1972.

pp 149-172.

Knvslerov. 6.1. and Mandel'shtam, S.M. "Vvedeniye v informatsionnuyu teoriyu
izmereniy" [Entry in Information Theory of Measurements], Moscow, Energiya,
1976, p 375.

Rozenberg, V.Ya. "VVedeniye v teoriyu tochnosti izmeritel'nykh sistem" [Entry
in the Theory of Accuracy in Measuring Systems], Moscow. Sovetakoye Radio,
1975, p 304.

Sorenkov, 3.1.; Teligs, A.I. and Shatalov. A.S. "Tochnost' vychislitel'nykh
ustroistv i algoritmov" [Accuracy in Computing Devices and Algorithms], Moscow,
Mashinstroyeniye, 1976, p 200.

Venetskiy. I.G. and Kil'dishev, 6.8. "Teoriya veroystnoetey i matematicheskaya
statistika" [Probability Theory and Mathematical Statistics], Moscow, Statistika,
1975. p 264.

Cmurman, V.Ye. "Rukovodstvo k resheniyu zadach po teorii veroyatnostey i
matematicheskoy statistike" [Handbook for Solving Problems in Probability
Theory and Mathematical Statistics], Moscow. Vysshaya shkola, 1975. p 333.

Demidovich, B.P.; Moron, I.A. and Shuvslovs. 2.2. "Chislennyye metody analiza"
[Numerical Analytical Methods], Moscow, State Publishing House of Physics and
Mathematical Literature, 1963, p 600.

Yudin. 0.8. and Col'shteyn. Ye.G. "Lineynoye programmirovaniye" [Linear
Programing]. Moscow, Mauka, 1969, p 426.

Col'shteyn, Ye.c. and Yudin, D.B. "Zadachi lineynogo programmirovaniya
transportnogo tips" [Transportation-Type Problems in Linear Programing],
Moscow, Nauka, 1969, p 386.

Run, 6. "Vengerskiy metod resheniya zadachi o naznacheniy" [The Hungarian
Method for Solving the Allocation Problem] in "Metody i algoritmy resheniya

transportnoy zadachi" [Methods and algorithms for Solving the Transportaion
Problem]. Moscow, Coastatizdat. 1963, pp 92-107.

132

KROWKMLWEOMX
60.

1&1.

102.

63.

46.

(05.

66.

(07.

108.

b9.

50.

51.

FOR OFFICIAL USE ONLY

Florian, N. and Morton. M. An Experimental Evaluation of Some Methods of Solving
the Assignment Problem." CANADIAN OPERATIONAL RESEARCH SOCIETY, Ottava. 1970
Vol 8, No 2. pp 101-108.

Cavett, TJJ. and Plyter, Norman V. "The Optimal Assignment of Facilities to
locations by Branch and Bound." OPERATIONS RESEARCH. 1966, Vol 16, No 2,
pp 210-232.

Klein, H. "A Primal Hethod for Minimal Flow Costs with Applications to the
Assignment and Transportation Problems" HANAGBIENT SCIENCE, 1967, Vol 14,
No 3. pp 205-220.

Carfinkel, 11.3. "An Improved Algorithm for the Bottonesk [sic] Assignment
Problem." OPERATIONS RESEARCH. .1971, Vol 19. N0 7. pp 1747-1751.

leont'yev, V.l(. "Algebraicheskaya struktura nekotorykh zadsch diakretnogo
programmirovaniya" [Algebraic Structure of Some Problems in Discrete Programing] ,
in "Problemy Kibernetiki" [Problems of Cybernetics]. 26th edition, Moscow,

Nauka, 1973. PP 277-290.

Little, Dzh.; Hurti, IL; Suini, D. and Karel, K. "Algoritm dlya resheniya
zadachi o komivoyazhere" [An Algorithm for Solving the Traveling Salesman
Problem]. EKDNOHIKA I HATEMATICRESKIYB KETODY. 1965, No 1, pp 94-107. '

Leont'yev, V.A. "Hetod metaprivedeniy dlya zadachi o naznacheniyakh. Tesisy
dokladov na VI Vsesoyuznoy konferentsii po ekatremal'nym zadachami" [A Method
of Hetereductions for Allocations Problem. Theses of Reports at the 6th Allr
Union Conference on Extremal Problems] , Part II, Tallin, Estonian SSR Academy
of Sciences Publishing Commission, 1973. pp 17-18. '

Leont'yev, V.A. "Hated metaprivedeniy k resheniyu nekotorykh zadach kombinatornogo
tips" [A Metereduction Method for Solving Certain Problems of the Combinatorial
Type], KIEERNETIKA, 1971., No 7, Abstract 76621, p 69.

Ore, 0. Teoriya grafov" [Graph Theory], Moscow, Nauka, 1968. p 352.

Popecku, Dorina Comsa. ”An Algorithm for Solving the Transportation Problem.
Economic Computation and Economic Cybernetics Studies and Research." Bucharest,
1976, No 2, pp 101-51.

Verkhovskiy, 8.8. "Simmetrichnyye mnogoindeksnyye transportnyye zadschi"
[Symmetric Multiple Index Transportation Problems] in "Sbornik: Problem
optimal'nogo planirovaniya, proyektirovaniya i upravleniya proizvodstvom"
[Collection of Works: Problems in Optimal Planning, Design and Control in
Production), Transactions of a Moscow State University Theoretical Conference,
Moscow, Moscow State University, 1963, pp 1482-498.

Khutsishvili, I.G. "0b odnoy zadache razmeshcheniya" [An Allocation Problem],
Sakartvelos SSR Metsniyerebata Akademiks moambe. Reports of the Georgian 583
Academy of Sciences, 1971, Vol 63, No 3. PP 557-559.

133

roe omaAL use ONLY
52.

53.

5‘.

55.

56.

57.

58.

59.

60.

61.

62.

63.

6b.

65.

FOR 0F1IC1AI.USE13NLY

Anisimov-Spiridonov. D.D. "Metod lineynykh vetvleniy i nekotoryys ego primeneniya
v optimal’nom planirovanii" [A Method of Linear Branching and Some of its
Applications in Optimal Planning). Moscow. Nauks, 1964. p 119.

Anisimov~Spiridonov, D.D. "Metody i modeli bol'shikh sistem optimal'nogo
planirovaniya i upravleniya" [Methods and Models for Large Systems in Optimal
Planning and Control], Moscow, Nauka. 1969, p 360.

Gol'shteyn. Ye.G. "Transportnaya zadacha i yeye obobshcheniya" [The Transportation
Problem and its Generalization] in "Sbornik: Metody i algoritmy resheniya
transportnoy zadachi" [Collection of Works: Methods and Algorithms for Solving

the Transportation Problem]. Moscow. Gosstatizdat, 1963. PP 3-3h.

Dualer. P. and Caller. B. "Primeneniye metoda privedennykh matrits k resheniyu
obshchey transportnoy zsdachi" [Application of the Reduced Matrix Method in
Solving the General Transportation Problem] in "Methods and Algorithms for
Solving the Transportation Problem." Moscow, Gosstatizdat, 1963. PP 115-121.

Revenko, V.L. and Oleyarsh, 6.3. "A Problem in Allocation," KIBERNETIKA.
1972, No 2, pp 69-70.

Yefimov. A.I. and Maksimilian, S.V. "A Four-Index Transportation Problem" in
”Matematicheskiye metody v ekonomike" [Mathematical Methods in Economics].
Kishinev, Shtinitss. 1971, 3d edition. pp 3-34.

Staykova-Penkova. N. "Trekhindekans transportna zadacha" [A Three-Index
Transportation Problem], Transactions of the Higher Economics Institute.
Sofia, I, 1970 (1971), pp 1-19.

Pierskalla, H.P. "The Multidimensional Assignment Problem." OPERATIONS
RESEARCH. 1968. Vol 16. No 2, pp 422~631.

Haley, K.B. "The Solid Transportation Problem." OPERATIONS RESEARCH. 1962,
Vol 10, No 1., pp 448-463.

Corban. A. "Un model multidimensional de transport" [A Model for Multi-
dimensional Transportstion], Studii si cercetari matematice, Bucharest. 1972,
26, No 7, pp 1019-1082.

Junginger, w. "Ueber die Loesung des dreidimensionalen Transportproblems"
[Solving the Three-Dimensional Transportation Problem], Diss.. Dokt. Naturwiss.
Univ. Stuttgart. 1970.

leue. C. "Methoden zu Ordnungsproblemen" [Methods in Sequencing Problems].
Angevandte Information, Braunschweig, 1972. Vol 14. No A, pp 154-162.

Miller. 0.2.; Tucker, A.W. and Zemlin, R.A. “Integer Programming Formulation
of Traveling Salesman Problem." J. ASSOCIATER FOR COMPUTING MACHINES, 1960,
Vol 7, No a. pp 326-329.

Bellmore. M. and Nemhauser, G.L. "The Traveling Problem [sic]: a Survey."
opmnons- nssmcu. 1968, Vol 16. No 3. pp 538-558.

136

FOR OFFICIAL USE ONLY
66.

67.

68.

69.

70.

71.

72.

73.

74.

75.

76.

77.

78.

79.

FOR OFFICIAL USE ONLY

Burkov. V.N. and Lovetskiy. S.Ye. "Methods for Solving Extremal Problems of
the Combinatorial Type (a Review)" AVTOMATIKA I TWKA, 1968. No 11,
pp 69-93.

Lavler, ELL. and Hood, 0.3. Branch-and-Bound Methods: a Survey," OPERATIONS
RESEARCH, 1966. Vol 110, No 6. PP 699-719.

Bellman. R. "Primeneniye dinamicheskogo progrmirovaniya k zadache o
kommivoyazher" [Application of Dynamic Programing in the Traveling Salesman
Problem], in Riberneticheskiy obornik" [Collection of Works on Cybernetics],
HOScow, Mir, 1964, pp 219-222.

Lin, 5. "Computer Solution of the Traveling Salesman Problem." BELL SYSTEH
TECHNICAL JOURNAL. 1965. Vol 44, No 10, pp 2265-2269.

Webb, M.H.J. "Some Problems of Producing Approximate Solutions to Traveling
Salesman Problem with Hundreds of Thousands of Cities." OPERATIONAL RESEARCH
QUARTERLY, 1971. Vol 22, No I, pp 109-66.

Eastman. 14.1.. "Linear Programming with Pattern Constraints." Ph. D. dissertation,
Harvard, 1958.

Shapiro, D. "Algorithms for the Solutions of Optimal Cost Traveling Salesman
Problem," Sc. D. Thesis, Washington University, St. louis, 1966.

Bellmore, H. and Malone, J .c. "Pathology of the Traveling Salesman Subtour-
Elimination Algorithms," OPERATIONS RESEARCH. 1971, V01 19, No 2, pp 278-307.

"Sbornik: Metody i algoritmy resheniya transportnoy udachi" [Collection of
works: Methods and Algorithms for Solving the Transportation Problem], Koscow,
Gosstatizdat, 1963. p 151.

Kofman, A. and For, R. "Zaymemsya issledovaniyem operatsiy" [Operations
Studies], Moscow, Mir, 1966, p 279.

Barachet. L.L. "Graphic Solution of the Traveling Salesman Problem," OPERATIONS
RESEARCH, 1957. Vol 5, No 6, pp 861-8105.

Karg, L.L. and Thompson. 6.1.. "A Heuristic Approach to Solving Traveling
Salesman Problems," MANAGEMENT SCIENCE. 1963-1961., Vol 10, No 2, pp 225-248.

Leont'yev. V.A. "Postroyeniye na zadannom Innozhestve tochek gamil'tonova
tsikla, blizkogo po dline k naukratchayshemu" [Building on a Given Number of
Points in a Hamiltonian Cycle Close to the Shortest Length] in "Aktual'nyye
voprosy tekhnicheskoy kibernetiki" [Urgent Problems of Cybernetics Equipment],
Moscow, Nauka. [972. pp 244-248.

Author's Certificate No 331606 (USSR). A Computing Device for Solving the
Symetric Traveling Salesman Problem/V.A. Leont'yev, Published in BYULLETEN
IZOBRETENIY, 1972, No 9.

135

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

80. Author's Certificate No 385279 (USSR). A Device for Solving the Symmetric
Traveling Salesman Problem/V.A. Leont'yev. Published in BYULLETBN IZOBRBTENIY.
1973. No 25.

81. Kheld, M. and Ksrp, R.M. "Primeneniye dinamicheskogo programmirovaniys k
zadacham uporyadocheniya" [Application of Dynamic Programing in Ordering

Problems] in "Kiberneticheskiy sbornik" [A Collection of works on Cybernetics],
Moscow, Mir, 1964, No 9, pp 202-218.

82. Author's Certificate No 397915 (USSR). A Device for Sampling Oblique Arcs on
a Graph/V.A. Leont'yev. Published in BYULLETEN IZOBRETENIY. 1973. No 37.

83. Author's Certificate No «32550 (USSR). A Device for Scanning Two-Dimensional

Parameter Pields/V.A. Leont'yev. Published in BYULLETEN IZOBRETENIY. 1971..
No 22.

84. Author's Certificate No 42735! (USSR). A Device for Analyzing Point Source
Images/WA. Leont'yev. Published in BYULLETEN IZOBRETENIY, 1975, No 17.

85. Author's Certficate No 402735 (USSR). A Method for Determining Distances Between
Objects/V.A. Leont'yev. Published in BYULLBTBN IZODRETENIY. 1973. No 42.

Contents Page

Foreword OCOOIOOIOOOOQOOIOIOODOOOIIOIOOIOOOOOO0.0IOOOOOCOIOOCOOOCCIICDOOOOO 3
Introduction costs-cooessenceIosootouoooooocooeooollIonsooosloo‘sooosoooocos 6
Chapter i. The Statistical-Optimization Problem of Selecting Model
DmsionsI0......000.00.000.00...OD.OOOOOOOQODIOOOOOICOII... 12
"‘hat mdel dimsion 18 OOIIOOUOOOIIIOOOIOUOOOOOCOOIOOOOOODOUOOOOOOI12
How to select problem dimension ..................................... 17
An algorithm for solving the dimension selection problem .............21
A numerical example of dimension selection for problems and memory
d13tt1but1°n 1n the Pros!” "nits ooooocoo-soo-ooossosooooooooooooo 30
1.5 concluions 0.00......00...OIOIIOQOIIOIOOIIOOOOOIOOOOOOOI.O'COOOI'OO. 31

s—r—n—u—
O...
buNt—

Chapter 2. Statistics in Error and Modeling Control for the Accuracy
criterion I00......0.0.0.5900...OODIOOOOIOOODODOOOOOOIIOOOIOO 32

2.1 A brief digression on the accuracy problem ......................... 32
2.2 Calculating error in the functional ................................ 36
2.3 Practical calculation of modeling error ............................ 60
2.4 Reduction of the statistical problem in control over modeling

accuracy in assignment problem ................................... 44
2.5 “nelusions I.I.CDOIIOOOOODOOOOOOOOOI0.0000000000COOIIIICOCOOOooOCIO ‘9

Chapter 3. The Method of Metereductions in Assignment Problem for Statistical
Problm of Optimizing “06.11118 Accuracy oeeooaooooovooosobev 51
Status of the question of sssigment problems ....................... 51
Calculating initial evaluations .................................... 52
Elementary metareduction ............................................ 54
Complete metareduction .............................................. 62
Studying the structure of metareduction cost matrix ................. 68

e

o
Ult‘UNt—o

wuuuw
O I

136

FOR OFFICIAL USE ONLY
6
7
8

3

3
3.
3.9
3

113R 0F?NCJAL USEZCNNLY

Evaluating the number of iterations when computing an optimal plan ..
Building optimal plans on metareduction cost matrixes ...............

A numerical example in solving assigment problem with the

Mtareduction nth“ 00.000000000800000I...OIIOODDOOOIOOOIOOIOOOOO.
Questions of machine realization of the metareduction method ........
Clo uncluion‘ ICOOOOIOOOOOIIUOOI...OOOOIQOOOOOIIOOOOIOOOC8.0.0.00000000

Chapter 4. The Metareduction Method Applied in the Assignment Problem for

‘1

e

2
3
l;
5

&'&-&~&-&-5~
. m

.6
6.7

Generalizing the Statistical Problem of Optimizing Modeling
“cur.cy Cl...D.O..0U.O..0...I...D..00....IDIOOUOOOOOOOOOOOI
Formal description of the three-index assignment problem ..........
Equivalent cost ”attic“ CIOCCOOOIOIIOOOOICCIOOODCOCCCUCCOOOOOOII.IC
Elementary metareduction .........................................
“mlete utaredmt_1°n 0....0......0.0.0.0000...COCOOCOOOOOIOOOUOO
Properties of metareduction cost matrices .........................
Calculating evaluation (it and search for optimal plan on the
metareduction cost matrix ......................................

Conclulionl eeeessoeeee-eeeaeseaseeeeseeseeoeeeeaaeeeeeaeeaeessaee

Chapter 5. Statistics in Nonproductive Use of Machine Time and Controlling

U|U|U|Uiu|
.
ukuN—I

UIUVUV VI
0 s
O

a
OOH

Ch

0 'U
f!

O‘OO‘U‘O‘OO”
.
NOUIDWNU-

the Process of Minimizing It ...............................

Forml‘tion of the probl” OI.CDIOOIODDI'ICIOOOOOOOIOOOOOIOOOOOIO
Calculating evaluations of minimal pathways ......................
Branch in multiple decision trees ................................
Cost matrix conversion in multiple plan branch ...................
Excluding matrix elements in order to improve decision evaluation

in branch 00.800.00.000000UOIIOOOOCCOOIOOOOO0.....OOOOODOOOOOOO
One approach to increasing dimension in solved traveling

3.1m Problm 0.0.0...000.00.00.00.IOOOOOOOOOODOIOUIOOOOOII
Features of symmetric traveling salesman problems ...............
Heuristic approaches to solving traveling salesman problem .......

Conclulons seeseesee-eeaeeeeaeassoeseaeeeeeeeeaseeeeseveeeeeeeese

er 6. Equipment for Automating Statistical Data Acquiation .......

“natal reductions I.0..OI...OOOOOOOOODOIIOIDOOUOIOOOOOOOIIOOOOOI

A computing device for solving symmetric traveling salesman problem
A device for solving symmetric traveling salesman problem .......

A device for sampling oblique area on a graph .....................
A device for scanning two-dimensional parameter fields ............
A device for analyzing point source images .......................
A method for automatically determining distances between graph loci

Bibliography emaessveseaeaeesees.eseeeeasssassaseeeeeese06sseassseeesseass

COPYRIGHT: Izdstel‘stvo "Energiya", 1981

9662

C80: 1863/53

137

FOR OFFICIAL USE ONLY

73
75

80
83
87

88
88
91
93
99
106

109
112

116
116
119
120
123

12:.

125
131
136
161

162
162
166
169
153
156
161
165

168
FOR OFFICIAL USE ONLY

000 658.512.2

AUTOMATION 0P BXPLORATORY DESIGN (ARTIFICIAL INTELLIGENCE IN HACBINE DESIGN)

Moscow AVTOHAI'IZATSIYA POISKOVOGO KONSTRUIROVANIYA (ISKUSSTVENNYY INTELLEKT V
HASHINNOH PROYEKTIROVANII) in Russian 1981 (signed to press l8 May 81)
pp 2-5, 298-302

[Annotation, foreword, conclusion of book "Automation of Exploratory Design
(Artificial Intelligence in Machine Designr'by Aleksandr Ivanovich Polovinkin,
Rikolay Konstantinovich Bobkov, Genrikh Yazepovich Bush, Valentin Georgiyevich
Grudachev, Aleksandr Hikhaylovich Dvoryankin, Sergey Andreyevich Kudryavtsev,
Petr Hatveyevich Haturkin, Vasiliy Vasil'yevich Herkur'yev, Hark Abra-ovich
Holdavskiy, Sergey Arnol'dovich Nikolayev, Gennsdiy Sergeyevich Oshchepkov,
Buns Pavlovna Sarkisova, Oleg Ignat'yevich Senenkov, Anatoliy Nikolayevich
Sobolev, Yevgeniy Arsen'yevich Snirenskiy and Yuliy Tserarevich Taytellson,
Izdatel'stvo "Radio i svyaz'", 10,000 copies, 346 pages]

[Text] Annotation

The new area of automation of exploratory design is explained, with primary
attention devoted to heuristic and machine methods for finding new technical
treateents. '

The book is intended for engineers involved in developing and applying nethods
of finding new design treataents, as well as other specialists.

Foreword

Intensive research and develop-ant has recently been underway for the creation
and practical application of systens for auto-sting planning, design and

technological production preparation for various classes of technical devices.
The prinary purpose of these systens is to reduce the aaount of tine and labor

required to develop articles and, most ilportantly, to improve their quality.
The goal of practically all develop-eat work is to create and produce articles
on a level with the best aodels in the world. However, this goal is noet often

not achieved, since obtaining such articles requires inventing a couple: of
coordinated, as well as highly efficient, new technical treat-ants. This requires

138

IN]! OFFICIAL USI2€MVLY
FOR OFFICIAL USE ONLY

synthesizing and analyzing numerous treatment versions, which for many reasons
is difficult or impossible without using computers. At the same time,
formaliring and programing the process of searching for (synthesizing) new
technical treatments involves the statement and resolution of problems of
technical creativity, and causes significant difficulties.

The first automatic design systems made it possible to automate all stages and
operations (making engineering analyses, finding required data, optimising
parameters of assigned technical treatments, comparing drawings and other
technological planning documentation. testing experimental models, etc.),
except for selecting improved and new planning and design treatments. Only
recently have convincing results been obtained both here and abroad which make
it possible to resolve the problem of automating exploratory design, or
(according to the foreign literature) to use artificial intelligence in
machine design.

He can say that, on the basis of results which have been achieved in
automating exploratory design. development has begun on second-generation
automatic design systems with improved creative potential. There is
justification to assert that in the near future only second-generation
automatic design systems which include exploratory design subsystems will in
most cases make it possible to create new articles on a level with the world's
best models. The automated design system is one of the main and most

important areas in which exploratory design methods are used. however. as will
be shown below, this is not its only sphere of application.

This book disseminates the long years of results achieved by the collective of
authors, who have been developing the problem of automating exploratory design.
The first three sections of the book explain individual, and we might say
universal, methods which can be used independently from one another (or in
various combinations) to solve various exploratory design problems in the area
of instrument building, machine building and construction. Part 1 presents
heuristic methods aimed at applications not involving computers; the possibility
of using computers is indicated at the same time. Sections 2 and 3 present
special machine methods whose use without computers is inadvisable or impossible.
Section 4 presents the conception of the creation of exploratory design sub-
systems for second generation automated design systems.

The present book is not primarily a scientific monograph, but rather a

practical aid for developing and applying exploratory design methods and

systems. Besides specialists in the development and utilization of automated
design systems, this aid will be of interest for engineers in all specialities,
and accordingly to students at technical training schools who are interested in
methods of finding new design treatments, and for inventors, patent holders and
other specialists who are interested in problems of technical creativity and
artificial intelligence. In this connection, instead of providing theoretical and
experimental foundation for the methods, the book only provides references to the
appropriate literature; brief bibliographic references are given rather than a

139

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

substantive review and analysis of the work of other authors; because of limited
space, only the basic construction ideas are given for many algorithms, with
references to the literature for more detailed explanation; many examples are
limited to the initial data and end results, omitting the intermediate derivations.

The problem in question has required integrated coverage of a broad group of
interrelated problems, which resulted in definite difficulties in the exposition.
Considering that this is the first attempt to write such a book, the authors
request to be forgiven in advance if some places are not entirely successful, and
will be glad to receive any consents and remarks to improve the book.

The authors are extremely grateful to Academicians V.H.61ushkov, 6.1. Marchuk,
I.P. Obraztsov and 3.". Petrov, to Ukrainian SSR Academician v.s. Hikhalevich,
to USSR Academy of Sciences Corresponding Members “.4. Cavrilov and 6.8. Pospelov,
to 6.P. Sofonov, President of the Central Committee of the All-Union Society of
Inventors and Rationalizers, to professors Yu. 3. Borodulin, B.F. Goryunov,

".6. Zagoruyko, 6.P. Zakharov, 3.x. Kalinin, Yu.V. Kapitonova, I. Myuller,

V.A. Hyasnikov, A.l. Petrenko and D.A. Pospelov, as well as to engineer Yu.P.
Horozov for their valuable critiques and for supporting research on the problem,
which undoubtedly helped to improve the manuscript. The authors thank the
leadership of the Hariyakaya CPSU oblast committee and the Yoshkar-Ola CPSU city
committee, primarily comrades V.P. Nikonov and 6.“. Vodovatov for their years

of assistance, which facilitated formation of the collective and supported its
fruitful work. The authors also express their gratitude to official reviewers
Professor 0.“. Trifonov 1nd Docent A.Ya. Hedvedev, who made a number of valuable
comments on the manuscript which helped to improve portions of the book
significantly.

Conclusion

This book presents three heuristic methods (Chapters 1-3) which have been tested
in practice and which most designers can use without computers to solve many
exploratory design problems. It is indicated simultaneously that these methods
can be formalized and programmed in most cases, thus significantly increasing
their efficiency. Special notice should be given the generalised heuristic method
(Chapters 2,3) which can be used as the basis for obtaining a large number of
modifications of specialised heuristic methods aimed at individual classes of
technical systems and (or) types of exploratory design problems.

Most machine methods for exploratory design consist essentially of isolating the
functions of technical systems and their elements and finding means for
implementing these functions. In this connection, a methodology is developed and
presented (Chapter b) for analysing the functions of technical systems and

the construction of their functional structures -- the foundation for synthesizing
physical operating principles and technical treatments.

140

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

The book presents machine methods for exploratory design and their application for
the basic three types of search problems singled out above: physical operating
principles (Chapter 5), technical treatments for a given physical operating
principle (Chapter 6,7). and optimal parameters of a given technical treatment
(Chapter 9,10). The most effective and promising methods are those of synthesizing
physical operating principles. as well as the direction of using mathematical
programming approaches and methods to solve problems of finding new technical
treatments (Chapter 8,9).(and. obviously physical operating principles). which is
illustrated with the example of solving problems of synthesizing the optimal forms
of technical system elements (Chapter 11).

Although there is no doubt abOut the advisability of using the individual methods,
combined and integrated utilization of these methods is more effective in
designing certain classes of technical systems. In this connection, the conception
of creating exploratory design subsystems for automated design systems

is presented (Chapter 12,13). These subsystems are aimed at solving all three
types of exploratory design problems, and have the appropriate software, hardware
and information support. Special attention is devoted to substantiating the
efficiency of exploratory design subsystems (Chapter 16).

The results which have been achieved with regard to machine implementation of
individual methods and using these methods as the basis for creating the first
experimental exploratory design subsystem are now relatively primitive and
inefficient, and if we consider the substantial amount of work on preliminary
data preparation, they are not always competitive with traditional “manual"
technology based on the trial and error method. Current attempts to automate
exploratory design can be compared with the creation of the first artillery
pieces, which were far inferior to the bow and arrow in terms of range, accuracy
and rate of fire, as well as the first automobiles, which were significantly
inferior to horse-drawn carriages and wagons in terms of capacity, speed and
'drivability.

In this connection, the main result today consists of recognizing the requirement
for automating exploratory design, providing theoretical and experimental proof
of the possibility of solving this problem and providing a substantiated statement
'of practically useful goals and tasks. While it took several hundred years in

the Middle Ages to convert primitive artillery pieces to efficient weapons, and it
took several decades for the automobile to develop in the late 19th and early

20th centuries. if we consider the increasing rate of technical progress, we can
.assert that the road from today's primitive exploratory design systems to
efficient systems in the last quarter of the 20th century will be covered in

10 or 15 years.

Let us attempt to formulate the basic directions of work which will facilitate
the final formation and extensive practical application of machine technology

for exploratory design. First of all, the approaches and methods for solving
individual problems in the area of automating exploratory design which are

141

FOR OFFICIAL USE ONLY
FOR ()I-‘I-‘IﬂAI. USE ONLY

considered in the book need to be improved (and even replaced with principally
new, more efficient ones). In addition, we note the most important new
directions of theoretical and experimental research and practical development.

1. The practical application of individual methods and systems (or subsystems)
for exploratory design involves extremely laborious work to create data bases,
i.e., to prepare information and transfer it to machine media. This is
especially clear, for example, in constructing a general AND--OR tree of
technical treatments and then maintaining and updating it. In this connection,
one of the main directions of the work consists of automating data preparation,
or more precisely creating methods, algorithms and programs which reduce
significantly the amount of labor required.

2. The quality of the input data is very important in creating data bases. In
addition, keeping in mind the fact that many information files are to a great
extent invariant and will be used repeatedly in different areas of technology,
it becomes necessary to develop standard forms for describing information for
exploratory design systems. We have in mind the description of patent
information, scientific discoveries, new physical (including chemical and
biological) effects and laws, as well as new substances and construction
materials, construction elements, etc. The standard forms for describing
various units of information should basically be filled out by the authors
who create the information. which will ensure high quality and facilitate
essentially "automatic" development of data bases.

3. There now exist methods for automated solution of individual types of
problems: 1) synthesis of new operating principles; 2) synthesis of new
technical treatments for a given operating principle with the availability of
several known technical treatments; 3) determination of optimal parameters of
technical treatments. The following important problems, which facilitate
complete automation of exploratory design, remain unresolved in the sense of
efficient computer application:

-- using new physical operating principles (for which there exists no developed
technical treatment) as the basis for designing acceptable technical treatments;

-- statement of problems of optimizing parameters, and selecting a method of
solution, for new technical treatments.

4. The basic body of information in the technical sciences consists of
descriptions of fairly precise mathematical models (for calculating and
analyzing certain technical treatments), and their theoretical and experimental
basis. New physical operating principles and new technical treatments have been

evaluated intuitively, and occasionally experimentally, in engineering practice.
In connection with automation of exploratory design, it has become necessary to
develop methods of mathematical modeling for evaluating new physical operating

162

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

principles and technical treatments. The precision of these methods must
facilitate the proper selection of only the beat of several physical
operating principles (or several technical treatments), i.e., it may be
significantly less precise than the traditional mathematical models used to
determine the numerical values of the parameters of planned technical systems.

6. ﬂow that the first experimental autonomous exploratory design systems have
been created (which have small data files, severely limited sets of solvable
problems and small configurations of software and hardware), the next problem is
to create the first practically useful efficient exploratory design subsystems
which are organically interfaced with automated design systems, i.e., the problem
of creating a second-generation automated design system [50]. Besides
eliminating the shortcomings inherent in the first experimental systems, these
subsystems should also devote special attention to service software, which

makes it possible for designers to master a new tool quickly and easily.

6. Preliminary analysis has indicated that more than half of the software and
information and methodical support used in exploratory design subsystems is
invariant to the class of technical systems being designed. In this connection,
the important problem arises of creating standard software and information and
methodical support for exploratory design subsystems.

These directions reflect the current level of knowledge and understanding of the
problem in question, and naturally.do not pretend to be exhaustive even allowing
for other directions and problems formulated in the book in the course of
presenting individual problems. However, regardless of the limited nature of
this knowledge, the primary determining direction has become obvious: reinforcing
human intellect with the help of machines. The creation of automated systems for
exploratory design and-their integration with automated design systems, automated
experimental and scientific research systems and information retrieval systems
for patent and other scientific-technical information will make it possible to
facilitate the highest possible rate of technical progress and to maintain the
status of a technically developed country.

copvnxcm‘: Izdatel'stvo "Radio i svyaz'", 1981

6900
050: 1863/63

163

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

DATA PROCESSING EQUIPMENT

Moscow TEKHNICHESKIYE SRBDSTVA OIRABUCKI INPURHATSII in Russian 1981 (signed to
press 17 Feb 81) pp 2, 319-320

[Annotation and table of contents of book "Data Processing Equipment", by
Vssiliy Rikolayevich Kriushin, Nikolsy Matveyevich Surin, Valeriy Pavlovich
Chuprikov and Nina Crigor' yevna Chernyak. Izdatel'stvo "Pinsnsy i statistika",
12, 000 copies, 320 pages]

[Excerpts] This book has been authorized by the USSR Ministry of Higher and
Secondary Specialized Education as s textbook for students at higher educa-
tional institutions who are studying in the specialization "Organization of

Mechanized Processing of Economic Data."

Annotation

This textbook describes the operating characteristics, structural and schematic
diagrams. and primary units of contemporary keyboard, keypunch, and small elec-

tronic computer machines. It presents the methodological foundations of select-

ing the set of hardware for automated control systems and organizing technical
servicing of such systems. Considerable attention is devoted to procedures and
methods of work on the machines and the methodology of programming solutions

to economic problems. The book can be used by a broad range of practical
workers in the field of the application of computer technology.

Table of Contents

Formrd O O O O O O O O O 9 O O O I O O I O O O 0 0 O 0 C U 0 0 Q I I O I O 0
Part One. Keyboard Computing Machines . . . . . . . . . . . . . . . . . . . .

Chapter 1. Adding and Computing Machines
1.1. General Description . . . . . .
1.2. Adding Machines . . . . . . . .
1.3. Computing Machines . . . . . .

o o o m
s o s e
s o e s
s e o e
e e e o
m o o a
s s o o
m s e e
e o o e
s o e e
o o o s
a e o m
o s s s
m s s o
e o s o
s s s m
e e o o
e

Chapter 2. Bookkeeping and Invoice Machines . . . . . . . . . .

2.1. General Description . . . . . . . . . . . . . . . . . . . . . . .~.
2.2. Class 170 Askota Bookkeeping Machine . . . . . . . . . . . . . . .

14¢

FOI1OIFKJA1.UBIIN‘LY

.-
OQQ VI 9)

13

20
20
21
FOR OFFICIAL USE ONLY

2.3. Zoyemtron Electronic Invoice Machine . . . . . . . . . . . . . . . 33
2.6. Iskra Electronic Invoice-Bookkeeping Machine . . . . . . . . . . . 62

Part Tun. Keypunch and Small Electronic Computing Machines . . . . . . . . . 53

Chapter 3. General Description of Keypunch Computers . . . . . . . . . 53
3.1. The Keypunch Method and Basic Data Processing Operations

on Keypunch Computers . . . . . . . . . . . . . . . . . . . . . . . . 53

3.2. Classification of Keypunch Computers . . . . . . . . . . . . . . . 55

3.3. Punchcard and Coding Data . . . . . . . . . . . . . . . . . . . . 58

Chapter 6. Keypunch Machines for Preparing Punchcards . . . . . . . . . . . .63
6.1. Keyboard Punches and Verifiers . . . . . . . . . . . . . . . . . . 63
6.1.1. The PD65-2/1M Keypunch . . . . . . . . . . . . . . . . . . 65

4.1.2. The P80-6/m Keypmch O O O O C O O I O O O O O I I 0 O 0 71

6.1.3. The PA80-2/1M Alphanumeric Keypunch . . . . . . . . . . . . 73

6.1.6. The KA80-2/1M Alphanumeric Verifier . . . . . . . . . . . . 82

6.1.5. Work Procedures for Keypunches and Verifiers . . . . . . . 86

6.2. Automatic Keypunch . . . . . . . . . . . . . . . . . . . . . . . . 88
6.2.1. The PIBO-U Keypunch . . . . . . . . . . . . . . . . . . . . 89

6.2.2. The PRBO-U Reproducing Punch . . . . . . . . . . . . . . . 103

‘03. Decme “chines I I I O I O I O O O O 0 O I I I O I 0 O O I O O 115
4.3.1. The “8".2 Decoder . O O O O C O O O O O C O O 0 O I O 0 O 116

6.3.2. The RMBO Decoder . . . . . . . . . . . . . . . . . . . . . 118

Chapter 5. Keypunch Machines for Ordering Arrays of Punch Cards . . . . . . 119
5.1. Sorting Machines . . . . . . . . . . . . . . . . . . . . . . . . . 119
501010 The 880(45)‘5H Sorting “Chine. o o s o s s a s s s s s s o 120

5.1.2. The S80(65)-7 Sorting Machines . . . . . . . . . . . . . . 130

5.1.3. Technique and Methods of Work on 880(65)-5M and
880(65)-7 Sorters . . . . . . . . . . . . . . . . . . . . . . . . 132
5.1.6. The SAB80-3/1M Electronic Sorting Machine . . . . . . . . . 135
5.2. Collaters . . . . . . . . . . . . . . . . . . . . . . . . . . . . 151

Chapter 6. Keypunch Computers for Mathematical Data Processing . . . . . . . 162
6.1. General Description . . . . . . . . . . . . . . . . . . . . . . . 162
6.2. The T-SMV Digital Tabulator . . . . . . . . . . . . . . . . . . . 163
6.3. The TA80-1 Alphanumeric Tabulator . . . . . . . . . . . . . . . . 209
6.6. Aggregating Tabulators with Automatic Keypunches . . . . . . . . . 260

6.5. Electronic Computing Attachments for Aggretation with
Keypunch Cosputers . . . . . . . . . . . . . . . . . . . . . . . . . . 273

Chapter 7. Small Electronic Computing Machines . . . . . . . . . . . . . . . 282
7.1. General Description . . . . . . . . . . . . . . . . . . . . . . . 282
7.2. Primary Units of Computing Complexes . . . . . . . . . . . . . . . 286

165

FINR(HHHC1AI.IHNE(MMLY
FOR OFFICIAL USE ONLY

Part Three. Methodological Foundations of Selecting the Set of Hard-
vare for the Automated Control Syaten and Organizing Technical Servicing . . 292

Chapter 8. Methodological Pomdations of Selecting the Set of Hardware

for theAuto-atedControlSysten . . . . . . . . . . . . . . . . . . . 292
8.1. Stages of Work in Designing the Set of Hardware . . . . . . . . . 292
8.2. Methodology for Selecting the Set of Hardware . . . . . . . . . . 295
8.3. Calculating the Quantity of hardware . . . . . . . . . . . . . . 299

Chapter 9. Organization of Technical Servicing and Repair of Cowuter
Equip“: O O I O O O O O O O 0 0 O O O C 0 0 I O O O O 0 O 0 O O O O O 307
9.1. Planning and Organizing Technical Servicing and Repair of
Keyboard and Keypunch Conputing Machines . . . . . . . . . . . . . . 307
9.2. Organization and Planning Technical Servicing of
BlectronicCowutera ........................ 31‘

COPYRIGHT: Izdatel'atvo "Pinanay i atatietika", 1981

11.176
CSO: 1863/51

166

momauusaomv
FOR OFFICIAL USE ONLV

IIOHOGBNBOUS COHPUTER SYSTEMS, STRUCTURES AND DEVICES

Moscow ODIIORODNYYE V‘ICIIISLITBL'IIYYE SISTEHY, STRUKTURY I 8331” in Russian 1981
(signed to press 15 Jun 81) pp 2-11, 197-208

[Annotation, introduction, chapter 9 and table of contents from book
"homogeneous Computer Systems, Structures and Devices", by Eduard Vladimirovich
Yevreinov, Izdatel'stvo "Radio i svyaz'", 10,000 copies, 208 pages]

[Extracts] Annotation

This book presents the fundamentals of the construction of homogeneous

computing systems, structures and devices which use a model of the body of
computers which is based on principles of parallel execution of operations,
variable logic structure, and design homogeneity of the elements and connections
between them.

The book is intended for scientific workers and engineers specialising in the
area of computer technology and cybernetics.

sixty figures, 3 tables, 21 bibliographic references.
Reviewers: Professor S.D. Pashkeyev and Professor Yu. H. Shamayev.
Introduction

Upon the appearance of the computer, it was clear that computer technology can

be used in many areas of human activity. Subsequent research and practical
wtilization of computers demonstrated that there is no branch of the national
economy in which the use of computer technology would not provide significant
'economic effect . It became clear that, along with power engineering, computer
uechnology predetermines the capabilities of society to increase labor productivity

Jncreased labor productivity in a particular branch of the economy is determined,
first of all, by continual expansion of the sphere of application of computers
and, secondly, by constant growth in the complexity of the problems to be solved.

The requirement for computation has now increased to the extent that there is now

a requirement for qualitatively new mass computing technology which combines

high efficiency, reliability and computational economy with convenience and
simplicity of utilization.

167

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Mass computing technology and its technical and economic indicators. Mass
computing technology has a great deal in common with service technology.

It must provide users with complete computer support, low computational cost
and high reliability, convenience and simplicity of utilization and servicing,
etc. In other words, the computer must be just as simple and inexpensive as
any other everyday item: television sets, tape recorders, etc. No special
conditions or special training are required to accommodate and use the
computer. The requirement for low-cost computation is foremost; providing a
capability for augmenting computational resources as the complexity of the
problems which are solved increases is also important.

The direct relationship between labor productivity and the amount of computing
resources and the'social requirement for continually increasing labor productivity
lead to a requirement for continued increase in the amount of computer resources
with overall cost limitations. Under these conditions, the creation of mass
computing technology becomes one of the most urgent problems at the current stage
of social development.

The specific computing capacity V0 is the quantitative estimate of mass
computing technology. By analogy with power availability, this indicator
characterizes the availability to society of computing resources per
individual. The specific computing capacity is determined by dividing the
total capacity of all computing resources by the total population of the
country, and is measured in the number of standard computational operations
executed per unit of time per individual.

Another estimate of mass computing technology is the specific computing cost
Co. This indicator is determined by dividing the total capital expenditures
required to create the country's computing resources by their total capacity.

The specific computing capacity and specific computing cost are the primary
indicators which characterize the level of development of computing technology.

It is easy to understand that the annual expenditures for computing technology
cannot exceed some defined portion of the national revenues (5-102). of course,
with this limitation it is possible for V0 to increase continuously only if
there is a corresponding continuous drop in co.

Analysis of the trends of development of computer technology and requirements for
computing resources to solve national economic problems in order to

facilitate the required rates of increase in labor productivity allows us to
conclude that the specific computing capacity V0 must approximately double
annually up to 1 billion operations per second per individual. Then V0 can
double every 10 years. Such an increase in V0 will fully satisfy the
requirements for computing resources, allowing for the rate of population
increase in the country. This increase in V0 c.“ be provided if co is reduced

to l ruble per 100 operations/second during the first 10 years, to l ruble per

158

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

l
1000 operations/second in the second It) years, and finally to l ruble per
million operations/second (Figure 1.1).

c,,rubles I (ops/ see)

i lbsps/ sec per individual

n C. v. .

 

, rm ms 2m years‘
‘ Figure I.l.

Hith V0 and Co changing in this manner, three stages can be isolated in the
development of mass computing technology. In the first stage, with V0 .

. 103-40“ ops/sec per person and Co - 0.01 rubles per operation per second,
the required level of provision of mass computing technology is achieved

and its cost reduced simultaneously by two or three orders of magnitude as
compared with the cost of third-generation computing equipment. In the
second stage, with V0 - 106 ops/sec and C - 0.001 ruble, the requirement for
solving mass problems while further reducgng the cost of computer facilities
through mass production of same is satisfied. In the third stage, when

V0 - 109 ops/sec and co . 0.000001 rubles, the requirement for solving complex
problems while sharply reducing the cost of computing facilities by switching
to a new production technology is satisfied.

Unlinked, weakly-linked and strongly-l inked problems. All problems which can
be solved using computers may be diVided into three classes. depending upon the
structural singularities of the links: unlinked, weakly-linked and strongly-linked.

Unlinked problems represent a set (aggregate) of independent problems, each of
which can be solved within some accepted tolerable time using the resources of
one computer taken separately. In the simplest case, a set can contain a
single problem. If we assme that the acceptable problem solving time is

10" sec (approximatel 3 hours), then the maximum complexity of a problem to be
solved amounts to lol -- 1011 operations for third-generation machines
operating at 106 -- 107 ops/sec. Hhen the set includes problems with maximum
complexity of 1011 operations and the problems are not linked, a solution can
be achieved either by using the same computer serially, or by several computers
operating in parallel.

Weakly-linked problems represent a collection of problems which are interrelated
in terms of information exchange such that the total volume of interactions for
the entire set of problems does not exceed the volume of computation for a
single problem. Obviously, weakly-linked problems cannot be solved directly
within the accepted tolerable time, since their complexity may significantly
exceed the capabilities of a single computer, and it may be difficult to use
several computers because of the information links between the problems.

1109

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Furthermore, one important property of weakly-linked problems should be
pointed out. Because of the small amount of linkage between problems, there
are methods which can be used to transform a weakly-linked problem to a set

of unlinked problems requiring a slightly larger amount of computation.

Strongly-linked problems represent a set of problems which are interrelated

in terms of intonation exchange such that the total amount of interactions
for the entire set is bounded by the amount of computation for one problem and
the amount of computation for the entire set. It is impossible to solve such
a problem on a single third-generation computer within the tolerable time, and
the lack of methods for dividing a problem into independent parts makes it
impossible to solve these problems using a set of independent machines as well.

Unlinked problems are mass problems. In order to satisfy the demand of the
national economy for the solution of mass problems it is necessary to
facilitate an increase in the overall performance of the country's computer
pool; the performance of unified computing resources must be improved in order
to provide for solving weakly-linked, and especially strongly-linked, problems.
Since complex problems involving a large amount of computation (strongly-linked
problems) are encountered significantly less often than simple (unlinked)
problems, these two are close to one another in terms of the total amount of
computation required. In this connection, it is useful to pose the problem of
developing unified computing facilities which are identically convenient for
solving both a large number of unlinked problems using separate computer
resources, as well as a small number (within a single problem) of strongly-
linked problems using generalized computing resources.

Model of c utsr collective. In order to solve all three classes of problems
Zunlinked, weakly- and strongly-linked) it is necessary to turn to a
computational model which is qualitatively different from the traditional
computer model.

A computer model is the product of formalizing the actions of a human computer
engaged in problem solving according to predefined formal solution rules.

The computer model is built on principles of serial execution of operations,
fixed computational logic structure, and design heterogeneity of the basic
sections of the model and connections between them. The computer model provided
the basis for the construction of first-, second- and third-generation machines.

An essential shortcoming of the computer model is the presence of a theoretical
limit for computational capacity resulting from the finite information
transmission rate between elements of the model when operations are executed
serially. As the theoretical limit is approached, the technical problems
involved in creating a computer with the required parameters increase, and costs
also go up sharply. As a result of the fore oing, regardless of a fairly high
theoretical computational capacity limit (10 ops/sec), we must limit ourselves
to a technical limit of 107 ops/sec for third-generation machines.

150

FOR OFFICIAL USE ONLY
, FOR OFFICIAL USE ONLY

Another shortcoming of the computer model is the relatively large expenditures
on software and hardware with limited performance, which results in a high
specific computational cost. Even for the most sophisticated third-generation
computers the specific cost amount to between 1 and 10 rubles per operation per
second, and cannot be reduced significantly.

The computer collective model proposed by the author in the late 1950's and
early 1960's for constructing efficient high performance computer systems
differs in principle. This model is the result of formaliring the computational
process executed by a group of computers in solving a unified complex problem.
The complex problem is represented as a set of interrelated parts. Each part is
solved by an individual computer, and information is exchanged when necessary
with other computers which are then solving their own parts.

The computer collective model is based on principles of parallel execution of

a large number of operations, variable logic structure and design homogeneity
of the elements and interconnections.

When using this model, the computing equipment is represented as an aggregate
of computer models combined into a unified computer collective model with the
help of information exchange between one another.

In solving a complex problem, its component interrelated parts are distributed
among the computers and solved in parallel. The structure of the information
exchange network is-established in accordance with the scheme of interactions
between sub-problems. In solving a complex problem which represents an
independent set of simple problems, the latter are distributed among computers
for parallel processing. There is practically no exchange between computers.

The computer collective model has no theoretical performance limit thanks to
the assumption of a theoretically unbounded increase in capacity by adding
additional computers. The variable logic structure and design homogeneity

make it possible to achieve high reliability indicators and economy for the
computer collective model.

Computer facilities based on the computer collective model can be used to solve
all three classes of problems. The problem is actually to mass-produce

computers which are convenient and easy to use, reliable, economical, and
suitable for combination into a computer collective model for solving complex
problems requiring major unified computing resources. The possibility of
creating a unified physical-technological base and organizing mass production

of a small number of types of computers allows us to hope for an optimal solution
to the problem of satisfying the demands of the national economy for computer
technology.

The theoretically unbounded capability for increased capacity of computer devices
based on the collective model while simultaneously facilitating conditions for
mass production makes it possible to achieve the required specific computing

151

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

capacity while keeping the required specific cost within the necessary limits
in accordance with the demands of the national economy.

At the present stage of development of computer technology, a transition to
creating computer facilities based on the computer collective model is
becoming realistic thanks to the achievements of microelectronics in creating
inexpensive, reliable, small processors and microcomputers. It should be
noted that the computing resources of an individual microcomputer are limited.
This amplifies further the trend toward constructing computer facilities on
the basis of the computer collective model.

The difficulties in creating efficient software are also reduced significantly
here as a result of constructing distributed means for controlling computational
processes.

The changeover to computer facilities consisting of a large number of relatively
simple computers of the same type with regular interconnections makes it
possible to simplify significantly their development. manufacture. debugging
and operation.

All of this points toward the advisability of switching over to mass computing
facilities constructed on the basis of the computer collective model.

Homogeneous computing systemsI structures and facilities. The technical
foundation for implementing the computer collective model is the integrated

direction of homogeneous computing systems. structures and facilities which
was proposed and theoretically justified by the author in the late 1950's

and early 1960's. Now, after more than 20 years' development of this
direction, it has become obvious that it provides the basis for constructing
mass computing facilities intended for solving unlinked, weakly- and strongly-
linked problems. '

This direction includes many classes of computing facilities: distributed
computer systems, concentrated computer systems, hocogeneous computer structures
and homogeneous computing facilities.

Distributed computer systems represent an aggregate of spatially separated
computers (or computer systems) which are interconnected via communications
systems such that the required interchange between system elements is supported.
A distributed computing system can operate in the computer network mode, in
which a set of independent problems is solved, as well as in a dedicated mode
in which a single complex problem is solved using the overall computing
resources of the system. The limiting case of a distributed computer system

is the unified distributed computer system, which combines all of the

computer resources of the country and uses them to solve both individual

simple problems as well as a single complex problem.

152

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

At the other pole we find homogeneous computing facilities, which represent

a set of elementary computers which cannot be simplified any further
(elementary automate with programmable structure) which are linked together
with regular communications. Homogeneous computer facilities provide an

ideal basis for constructing computer facilities in a continuous technological
process. Thanks to the simplicity of the elements and the regularity of their
connections, thecomputing facility is manufactured in the first stage in a
unified technological process. In the second stage. each user uses software
to set the facility to implement any universal or special-purpose computer
which is maximally suited to the singularities of the problem at hand.

These two extreme classes of homogeneous computing systems encompass various
computing systems and structures which differ in the dimensions and types of
elements, and the communications configurations.

Homogeneous computer systems, structures and facilities now represent the most
promising direction in computer technology: they make it possible to eliminate
the limitations which third-generation machines cannot overcome with respect
to providing high performance for solving complex problems while sharply
reducing cost.

The changeover to industrial production of homogeneous computer systems,
structures and facilities will make it possible to facilitate uniform
distribution of problems within directions which have already been assimilated
by industry, concentrating primary efforts in creating families of computers
and minicomputers on user service quality, and on the operating efficiency of
time-sharing computer systems in creating multiprocessor systems. Homogeneous
computer systems, structures and facilities should be tasked to solve the
problems of achieving high performance and low specific computational cost,

as well as facilitating the transition to mass computing technology.

9. APPLICATION OF HOHOGENEOUS COMPUTER SYSTEMS, STRUCTURES AND FACILITIES
FOR SOLVING COMPLEX PROBLEMS

|

9.1. Application of Homogeneous Systems for Solving Problems in Economics
I

The first chapter pointed out that homogeneous computer systems, structures

and facilities are needed to solve all three classes of complex problems:
independent, weakly- and strongly-linked. This actually means that homogeneous
systems provide universal means for solving both mass problems involving
relatively small amounts of computation, as well as individual complex problems
whose solution requires the execution of a large number of operations. Since it
is necessary to use computer technology in all areas of the national economy,
and considering the increasing requirements for the execution of large amounts
of computation, homogeneous systems become mass computing facilities.

153

FOR OFFICIAL USE ONLV
FOR OFFICIAL USE ONLY

Under these conditions, it is difficult to enumerate all of the areas in
which homogeneous systems can be applied effectively in the national economy.
Therefore, we shall consider some of the most important ones.

Once such area of homogeneous system application is solution of problems in
economics, including problems involved in economic management. The difficulties
in solving these problems stem from the increase in their complexity due to

the continuing increase in the number of products produced, the increase in

the number of component parts of products, the increase in the complexity of

the technological processes involved in their manufacture, and the rapid
obsolescense of products.

The labor intensity of management problems increase to an even greater
extent. The complexity of many economic management problems is determined
quantitatively by material flows. An intensive increase in the ties between
enterprises is observed as the economy develops. we can conclude from this
that the increased complexity of economic management problems does not depend
so much upon the number of objects being managed as the number of connections
between them. It has been shown on the basis of experimental investigations
that the complexity of economic management problems increases faster than the
square of the total number of people involved in the economy. As the

economy develops, a moment will arrive at which the overall complexity of

the management problems will exceed the human resources of the entire society
which could be used to solve these problems.

Thus, if the limit of the economic management tasks which one person could
solve was reached earlier, which made it necessary at that time to change

over to collective management, we are now approaching the limit of the
capabilities of the entire society to manage the economy without using
technical means. The need for using computers to solve problems of managing
the econOmy is clear from this. According to estimates made in the late 1960's,
effective management of the economy in this country at that time required
computing facilities with a capacity of over 300 million operations per second.

Unfortunately, the problem of managing the national economy cannot be split
into independent problems which could be solved using several hundred isolated
computers. This means that homogeneous computer systems which make it possible
to solve complex problems with the required capacity are needed to solve the
problems involved in managing the national economy.

Solving the problem of managing the economy requires involving hundreds of
thousands of specialists, who are spread about the country, in the computational
process. This means that successful solution of the problem of managing the
economy requires that we switch over to creating distributed homogeneous computer
systems which combine the principles of centralized management and distributed
data processing in the proper proportions.

156

FOR OFFICIAL USE ONLY
Ff“!!)F1ﬂ(]Al.lEﬂE(NQLY

Thus, the creation of the National Computer Center Network and the construction
of the Nationwide Automated Data Acquisition and Processing System for
accounting and managing the national economy will become possible if homo-
geneous computer systems are widely distributed throughout all branches of the
national economy and joined into a unified national distributed homogeneous
computer system.

The central question in creating a unified distributed homogeneous computer
system involves development of a rayon homogeneous computer system. This is
because rayon systems are designed to solve problems which arise within
administrative rayona, of which there are several thousand in the country.
Therefore, rayon problem solving is of a mass nature. Hence, mass computer
technology is required which must have both high performance and low cost.
Based on the rayon population and the re uirement for providing specific
computing capacity per person of V0 - 10 operations per second the total
capacity of the rayon homogeneous computer system must reach 109 operations
per second with a specific computational cost per operation per second of

Co - 0.001 rubles. The rayon homogeneous computer system encompasses about
1,000 subscribers (enterprises, kolkhozes, sovkhozes and institutions), with
connections between them comprising a total of about 1,000 kilometers. The
capacity of the communications channels between elementary machines in the
rayon homogeneous system must be approximately 1 mbps. Under these conditions,
the rayon homogeneous system will achieve a capacity of 109 operations per
second regardless of the deployment of the elementary machines within the

territory of the rayon.

For a rayon homogeneous system it is advisable to co-locate the computer
facilities with the communications facilities; it is most convenient to install
rayon homogeneous systems at communications centers, especially at automatic
telephone exchanges. Then all subscribers have direct access to the rayon
system using existing communications channels. The presence of the rayon
homogeneous computer system at an automatic telephone exchange makes it
possible to place many of the functions of automatic communications (all the
way up to implementation of switching) on the computer facilities. Combining
computer and communications facilities in a unified data transmission, storage
and processing system makes it possible to form a unified technical and
organizational base for solving problems involved in managing the economy with
maximum efficiency.

In this respect, the rayon homogeneous computer system can be called the primary
system at the rayon level, similar to the fashion in which the primary network
is used to build up different communications systems. By combining all of the
rayon homogeneous computer systems into a unified nationwide distributed computer
system it is possible to obtain a primary data transmission, storage and
processing system. The unified rayon homogeneous computer system can be used

as the basis for the Unified System of Computer Systems and the Nationwide
Automated Data Acquisition and Processing System for accounting and management

of the national economy.

155

roa omaAL use ONLY
FOR OFFICIAL USE ONLY

9.2. Application of homogeneous Computer System for Solving Complex Scientific
and Technical Problems

The current state of science and technology is characterized by the occurrence
of a significant number of complex problems whose solution requires high-
capacity computing facilities. There is an increase in the complexity of
computation in certain classes of problems, and new classes of problems are
also arising in which the solution complexity is even greater. Such problems
include problems of computational mathematics, mathematical physics, linear
and nonlinear programming, pattern recognition, investigation and design of
complex systems, modeling of complex systems, etc. There is now a re uirement
for solving complex problems involving 1013--1014 operations with 101 --lOll
bits of information to be stored. The solution of such problems requires
computing facilities with capacities of 109--101° operations per second.

Ordinary computers based on the computer model have a technical performance
limit of 107 operations per second. Under these conditions, complex problems
can clearly be solved if we change over to homogeneous comButer systems based
on the computer collective model and having capacity of 10 operations per
second or more.

Concentrated homogeneous computer systems are most convenient for solving
complex scientific and technical problems: these can be based on modern
microcomputers, which are characterised by small size, low cost and high
reliability.

Let us consider some classes of complex problems and singularities of utilizing
concentrated homogeneous computer systems to solve them. Many problems in

radar, hydroacoustica, nuclear physics, geophysics, meteorology, medicine,
sociology, etc. can be solved using pattern recognition methods. However,

high capacity computer systems are required to solve these problems; in addition,
the requirements for efficient man-computer system information exchange make

it necessary to develop methods for inputting and outputting optical and audio
information using pattern recognition methods.

Pattern recognition problems are divided into three types. The first type
involves finding a decision rule in which the expenditures for construction are
minimal. The second involves finding a system of features with which the costs
associated with recognition errors and with measuring these features are
minimised. In problems of the third type it is necessary to find the version
of grouping realizations into patterns which would minimise the expenses
involved in using the patterns. Problems of empirical prediction are close to
pattern recognition problems.

Empirical prediction problems involve developing methods of representing initial
data, detecting regularities in a set of input data and representing algorithms

for predicting new regularities. The problem of empirical prediction is one ofthe
main parts of the problem of artificial intelligence.

[56

FOR OFFICIAL USE ONLY
FOR¢0FFKJAL USE(MNLY

The solution of pattern recognition and empirical prediction problems

involves a large amount of computation. Furthermore, these problems can

be represented as an aggregate of interconnected problems of lesser complexity,
which makes it relatively easy to construct parallel algorithms which can be
implemented efficiently in concentrated homogeneous computer systems.

An important class of problems whose solution is of major interest is comprised
by problems involved in automating the design of complex articles and modeling
complex systems. The problem of reducing planning periods and putting articles
into production is now becoming especially critical in machine building. This
problem can be solved by creating automated systems for planning, technological
preparation and management of production on the basis of homogeneous computer
systems. One of the planning problems is to develop effective methods of
constructing the geometry of the planned object. It should be noted here that
this problem is particularly complex in constructing the flow surfaces of
flight vehicles, ship hulls and light truck cabs, since the design requirements
call for optimal equipment placement and strength while the outside surface

must be smooth in accordance with the requirements of hydroaerodynamics and
aesthetics.

Hhen machine methods are used to solve planning problems, problems arise in
developing the mathematical description of complex contours and surfaces,
methods of configuring parts into assemblies, and determining the differential
and integral characteristics of the surface. These problems can be solved
especially effectively using the theory of nonlinear and linear cubic splines.
Spline-function methods have made it possible to create an effective
mathematical apparatus for representing contours and three-dimensional
surfaces which is universal, homogeneous and easily reduced to algorithmic
form. The particular value of these methods is their convenience in
implementing parallel computational processes in homogeneous computer systems.

An important area of application of homogeneous computer systems is the
investigation of complex object such as microcosmic physical systems. biological
and linguistic systems, etc. In terms of properties, all of these objects are
complex systems whose main singularity is that they cannot be divided into
independent parts. This makes it necessary to examine the entire system as a
unified whole. It becomes possible to solve such problems if concentrated
homogeneous computer systems are used.

9.3. Application of Homogeneous Computvr Systems for Implementing
Structural Models

Constructing a homogeneous computer system on the basis of the computer
collective model makes possible a different approach to the solution of a
number of complex problems. The use of homogeneous computer systems is
especially promising for the construction of digital models. ‘Hodeling
devices have proven themselves in analog technology; their advantages are that
it is simpler to assign the problem solving method, and the solution is

157

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

accelerated, thanks to the structural representation of the problem in the model.
The simplicity of assigning the problem solving method is combined with
simplicity in changing the solution scheme during the modeling process.
Structural representation of a problem makes it possible to observe the
behavior of sections of the model as a function of parameter variations.

Homogeneous computer systems can be used to design various automation devices,
control systems, ccnmaunications devices, special-purpose machines and automate.
An important circumstance in structural modeling is the capability of evaluating
the implementation complexity of a device or machine. Using homogeneous
computer systems, we can assign structural models of widely varying special-
purpose machines and devices without spending a lot of time. This makes it
possible to find the optimal structure in accordance with given criteria by
trial and error. The modeling system can be represented as the combination of
a homogeneous computer system and computer structure or device. A modeling
system based on a homogeneous computer system has all of the advantages of
analog systems in terms of convenience and problem-solving simplicity, but
avoids the shortcomings inherent in analog devices, namely low computational
accuracy and the requirement of using manual methods for structure assignment.

Let us consider some examples of implementing the computer collective model

in communications devices. One of the first examples of using digital modeling
systems in communications engineering is the microprocessor-based homogeneous
control system for existing electromechanical and quasi-electronic switching
systems. Such a system makes it possible to expand the scope and type of
services available to subscribers and to improve the technical servicing of
existing electromechanical systems; it also facilitates a gradual transition

to purely electronic systems and the associated possibility of gradual training
and retraining of personnel.

To these advantages of using microprocessor-based homogeneous control systems
we can also add increased reliability, which provides high viability for
homogeneous systems, and relatively low cost of control devices, which
facilitates mass production of small-nomenclature devices, good hardware
repairability and the capability to increase the number of switching fields
serviced easily by decentralizing control and adding control modules.

Automatic telephone exchange controllers using the computer collective model

are a natural complement to existing switching systems, since a switching field
is nothing more than a certain collective of connectors. In addition, this
collective has the same intrinsic functions as a computer collective: connections
are made by homogeneous devices (homogeneity), several connections can be

made simultaneously (parallel operation); depending upon the number of subscribers
serviced, exchange switching systems are built up by combining the necessary
number of standard switching field modules. This latter property is analogous

to the variable logic structure in the computer collective model. By establishing
a one-to-one correspondence between the connector collective model and the
computer collective model, we can thus realise automatic telephone exchanges
based on these principles.

158

FOR OFFICIAL USE ONLY
F0!.0FFKJAI.USE|DNLN

Figure 9.1 shows a functional diagram which illustrates the design principle
of an electromechanical switching system with a ring-type microprocessor-
based homogeneous control system. The switching equipment establishes the
connections directly. The service equipment provides the necessary signal
interface between the switching equipment and the microprocessor-based
control system. One characteristic feature of the control system, and
incidentally of all homogeneous systems, is that the control system memory is
made up of the memory of the individual microprocessors which comprise the
system.

This control arrangement makes it possible to divide the switching field into
separate zones served by separate machines in the computer collective model.
when any control system microprocessor malfunctions, its functions are taken
over by another processor which is free at that time, and the system continues
to function.

Further development of this principle consists of dividing the switching field
and controller into separate functional modules and constructing automatic
telephone exchanges on the basis of the computer collective model which is
realized using the modules. In the present version (Figure 9.2) the telephone
exchange architecture is represented by a decentralized homogeneous system.

 

Figure 9.1. Figure 9.2.
Key:
L. Switching system; 1. Switching system
2. homogeneous computer system. 2. Homogeneous computer system

The exchange consists of identical separate modules. A module is made up
of a switch, which makes connections directly. and a microprocessor-based
homogeneous control system, which organises the process by which connections
are made. In turn, the microprocessor-based control system consists of a

159

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

collection of microprocessors which are combined into either a ring or a
matrix system.

By isolating the required number of microprocessors, it is possible to provide
the required capacity and memory size in this case both for making connections
and for making various additional services available to subscribers, providing
the required viability, system repairability, etc.

The microprocessor-based control systems of the individual modules are joined
in the same manner, and represent the overall controller for the entire
automatic telephone exchange. The modules are connected through both the
required physical connection and under the control of the overall program
which controls the individual modules in the system.

In a special case, the microprocessor-based control system of a single module
can degenerate into a single microprocessor, but these microprocessors are
nonetheless combined into the homogeneous control system of the exchange.

BIBLIOGRAPHY

l. Akushskiy, I.Ya. Yuditskiy, D.l. "Mashinnaya arifmetika v ostatochnykh
klsssakh" [Machine arithmetic in residue classes]. Moscow, lzdatel'stvo
"Sovetskoye Radio", l968.

2. Anisimov, B.V., Chetverikov, V.N. "Osnovy teorii i proyektirovaniya
tsifrovykh vychislitel'nykh mashin" [Fundamentals of theory and design
of digital computers]. Moscow, lsdatel'stvo "Vysshaya Shkola", 1970.

3. Balashov, Ye.P., Knol', A.I. "Mnogofunktsional'nye zapominayushchiye
ustroystva" [Multifunctional memory devices]. Leningrad, Izdatel'stvo
"Bnergiya", 1972.

4. Glushkov, V.M. "sintes tsifrovykh avtomatov" [Synthesis of digital
automate]. Moscow, Izdatel'stvo "Pismatigis", 1962.

5. Varshavskiy, V.I., et. al. "Odnorodnye struktury" [Homogeneous structures].
Moscow, lzdatel'stvo "Energiya", 1973.

6. Golubev-Novorhilov, Yu.s. "Mmogomashinnye kompleksy vychislitel'nykh sredstv"
[Multi-machine computer complexes]. Moscow, lsdatel'stvo "Sovetskoys Radio",
1967.

7. Yevreinov, B.V., Kosarev, Yu.c. "Vozmoshnoati postroyeniya vychislitel'nykh

sistem vysokoy proisvoditel'nosti" [Possibility of designing high performance
computer systems]. Novosibirsk, Isdatel'stvo 80 AN 888R, 1962.

160

FOR‘OFFKJAI.USE(MNLY
10.

ll.

12.

13.

lb.

15.

l6.

l7.

l8.

19.

FOR OFFICIAL USE ONLY

Yevreinov, B.V., Kossrev, Yu.c. "Odnorodnye vychislitel'nye sistemy
vysokoy proizvoditel'nosti" [High performance homogeneous computer
systems]. Novosibirsk, Isdstel'stvo "Nauka", 1966.

Yevreinov, E.V., Prangishvili, I.V. "Tsifrovoye avtomsty s nsstranvayemoy
strukturoy (Odnorodnye sredy)" [Digital automate with adjustable
structure (Homogeneous medis)]. Moscow, Izdatel'stvo ”Energiys", 1971.

Yevreinov, B.V., Khoroshevskiy, v.6. "Odnorodnye vychislitel'nye sistemy"
[Homogeneous computer systems]. Hovosivirsk, Isdatel'stvo "Hanks", 1978.

Kalyayev, A.V. "odnorodnye kommutatsionnye registrovye struktury"
[Homogeneous switching register structures]. Moscow, Isdatel'stvo,
"Sovetskoye Radio", 1978.

Lazsrev, V.G., Savvin, 6.6. "Seti svyszi, uprsvleniye i kommutstsiya"
[Communications networks, control and switching]. Moscow, Isdatel'stvo,
"Svyaz'", 1973.

Pashkeyev, S.D. "Osnovy mul'tiprogrsmmirovaniya dlya spetsislizirovsnnykh
vychislitel'nykh sistem" [Fundamentals of multiprograsning for special-
purpose computer systems]. Moscow, Isdatel'stvo, "Sovetskoye Radio", 1972.

Pospelov, D.A. "Vvedeniye v teoriyu vychislitel'nykh sistem" [Introduction
to theory of computer systems]. Moscow, Isdatel'stvo "Sovetskoye Radio",
1972.

Pukhov, C.Ye., Samoylov, V.D., Aristvo, V.V. "Avtomatisirovannye
analogo-tsifrovye ustroystva modelirovaniya" [Automated analog-digital
modeling devices]. Kiev, lsdstel'stvo "Tekhnika", 1976.

Balashov, Ye.P., Smolov, V.B., Petrov, G.A., Puzsnkov, D.V. "Mnogo-
funktsionsl'nye regulyarnye vychislitel'nye struktury" [Multifunctional
regular computing strucrures]. Moscow, Izdstel'stvo "Sovetskoye Radio", 1978.

"Mul'tiprotsessornye vychislitel'nye sistemy" [Multiprocessor computer
systems]. Ya.P. Khegaturov, editor. Moscow, Isdatel'stvo "Bnergiys", l97l.

Prangishvili, I.V., et. a1. "odnorodnye mikroelektronnye assotsistivnye
protsessory" [Homogeneous microelectronic associative processors]. Moscow,
Izdatel'stvo "Sovetskoye Radio", 1973.

Prangishvili, 1.V., et. a1. "Mikroelektronika i odnorodnye struktury dlya
postroyeniya logicheskikh i vychislitel'nykh ustroystv" [Microelectronics

and homogeneous structures for constructing logical and computer devices].
Moscow, Izdatel'stvo "Nauka", 1967.

161

FINICNHWCLAI.[EHE(MMLY
APPROVED FOR RELEASE: 2007I02/09: ClA-RDP82-00860R000600030018-4

FOR OFFICIAL USE ONLY

20. Glushkov, V.H., Hyasnikov, V.A., Ignat'yev, H.B., Torgashev, V
"Rekursivnye vychislitel'nye mashiny" [Recursive computers]. I
1977 (ITHVT AN SSSR Preprint)

21. Marchuk, 6.1., Kotov. V.Ye. "Hodul'naya asinkhronnaya rasviva;
Kontseptsiya" [Modular asynchronous developmental system. Co:
In two parts. Novosibirsk, 1978. (V'l's 80 AN SSSR Preprint).

Table of Contents

Introduction

1. Complex Problems

1.1. Complex systems and problems

1.2. Unlinked, weakly-linked and strongly-linked problems

1.3. Estimating computational complexity. General requirements

for computer facil ities

Computer Collective Model

. General conception of computer collective model

. Design principles of computer collective model

. Structural and functional diagram of computer collective
model

.4. Basic properties of computer collective model

5 Basic classes of computer collective models and areas

of application

2.
_2.
2.
2.

UNH

3. Fundamentals of Construction of homogeneous Computer
Systems, Structures and Devices

3 1 General conceptions of homogeneous computer systems (HOS)
3.2. Hicrostructure theory of ROS

3.3. Hacrostructural theory of 303

3 lo Basic classes of computer collective models

. Distributed Homogeneous Computer Systems
1 Singularities of ones
2 Computer network's and DHCS
3. DHCS model and functioning modes
.6. Functional diagram of DHCS and DHCS classification
5 DECS software
6 Quasi-distributed computer systems

Concentrated Homogeneous Computer Systems
General conception of DHCS

l.
2. Singularities of development of CICS technical devices
3.

S .
5 .
5 .
5 . CHCS theory

162

FOR OFFICIAL USE ONLY

APPROVED FOR RELEASE: 2007/02/09: ClA-RDP82-00860R000600030018-4
FOR OFFICIAL USE ONLY

6. Homogeneous Computer Structures
6.1..Singu1arities of homogeneous computer structures 146
6.2. Universal homogeneous computer structures 148
6.3. Problem-oriented homogeneous computer structures 152
7. Homogeneous Computer Facilities
7.1. Singularities of homogeneous computer facilities 161
7.2. Design fundamentals of homogeneous computer facilities ' 165
7.3. Adjustment of homogeneous computer facility 170
7.6. Physical foundations of homogeneous computer facility design 173
7.5. Design of digital devices in homogeneous computer facilities 177
8. Software for Homogeneous Computer Systems, Structures and Facilities
8.1. Basic approaches to software system development 179
8.2. Parallel computation methods, parallel algorithms and

languages I 182
8.3. HCS software 187
8.1:. H05 architecture 190

9. Application of Homogeneous Computer Systems, Structures and
Facilities for Solving Complex Problems
9.1. Application of Homogeneous Systems for Solving Problems

in Economics 197
9.2. Application of Homogeneous Computer System for Solving

Complex Scientific and Technical Problems 200
9.3. Application of Homogeneous Computer Systems for

Implementing Structural Hodels . 202
Bibliography 206

COPYRIGHT: Izdatel'stvo "Radio i svyaz'", 1981

6900
CSO: 1863/61 - END -

163

FOR OFFICIAL USE ONLY