FOR OFFICIAL USE ONLY

’RS L/10387

5 March 1982

USSR Report

VCYBERNETICS, COMPUTERS AND
AUTOMATION TECHNOLOGY

(FOUO 3/82}

FB|S FOREIGN BROADCAST INFORMATION SERVICE

FOR OFFICIAL USE ONLY
NOTE

JPRS publications contain information prinarily from foreign
newspapers, periodicals and books, but also fro- news agency
transmissions and broadcasts. Materials from foreign-language
sources are translated; those from English-language sources
are transcribed or reprinted, with the original phrasing and
other characteristics retained.

Headlines, editorial reports, and material enclosed in brackets
[] are supplied by JPRS. Processing indicators such as [Text]
or [Excerpt] in the first line of each item, or following the
last line of a brief, indicate how the original information wls
processed. where no processing indicator is given, the infor-
nation was summarized or extracted.

Unfamiliar nanes rendered phonetically or transliterated are
enclosed in parentheses. Words or names preceded by a ques-
tion mark and enclosed in parentheses were not clear in the
original but have been supplied as appropriate in context.
Other unattributed parenthetical notes within the body of an
item originate with the source. lines within items are as
given by source.

The contents of this publication in no way represent the poli-
cies, views or attitudes of the v.5. Government.

COPYRIGHT LABS AND REGULATIONS GOVERNING OUNERSEIP 0T
ESTERIALS REPRODUCED HEREIN REQUIRE THAT DISSEHINATION
OF THIS PUBLICATION BE RESTRICTED FOR OPTICIAL USE ONLY.
FOR OFFICIAL USE ONLY

JPRS L/ld
15 March

USSR REPORT
CstNNETIcs, Commas AND AUTOMATION TECHNOLOGY

(row 3/82)

SELECTED ITEMS FROM ”Cm TECHIDLOBY
OF THE SOCIALIST COUNTRIES'; N0. 9. 1981

CONTENTS

mum Tamale” of the 8&1th “mwi‘é: O...OOOCOOOOOOOOOOOOOOIOQ

Technical and Economic Justification in Selecting Charocterist‘cs
0f Parmtric 381.103 0: W8 O...0.0.0.00.0.0000...OOOOOIOOOOOOO.

Concept of res-1060 Computer Design and nevaiop-ent...............;.....
Unified Secondary Power Supplies for Series-2 Unified System Computers"
Data Preparation Unit Development in Bulgaria ..........................
Isa-1016 Computer, Characteristic Features .............................
Videoton Pail: of Intelligent Alphanumeric Tenninals ..................
Yes-2335 Arrw Processor for Yes-1035 Computer System ..................

System for Design of Application Proamn Packages for Calendar-
Subject Planning and Monagementfor UnifiedSystam Computers ..........

Digital Simulation of Continuous Processes on Unified System Computers...

Problem-Oriented Lugnage for System of Computer-Aided Design of
Manufacturing hoceeses of Mechanical Machining of Parts .............

Experience in Use of Time Sharing System for Program Development .......
SPAR-77 Integrated Programing System for Complex Automation ..........

- a - [In - neon - no son 1

FOR OFFICIAL USE ONLY
mu OFFICIAL USE ONLY

m RT 3881-13.” omratmg system 00000000000900.0000.00000000000000.0000!

301‘th for Con-unication Between Couputer System and Specialized
”wags”, for m” ”messing OOOCCOOOCOO0.0.0.0.0....OOOOCOOOOOOOOOOC

Automated System for Knee Preventive Treatnent a: Population (SAHPD)......
mta Acquisition and ”messing syn“ for m Gas Industry oeeeeeeeeeeee
Acquisition of Data on Counter Hardware Operation in German Democratic

”public 0.000.00000.oOOOOOOOOQOOOOOOOOOOOOOOO00000090000000.0000..0000.

New Small Computer Hardware Fran German Democratic Republic ..............
Wm Algorimc unsung. 00.000'00...0.000.000.000.00...0.00.00.00.00.

mmusemv

87

91
96
102

107
113
119
FOR OFFICIAL USE ONLY

COMPUTER WWY 0? m 806M181 couimms

Hoecow “CHISLITBL' MYA mm SOTSIALISTImsKmhsm in N001“! a) 9, 193].
(eigned to preee 21 Hey 81) pp 2-6, 172-173, 176-179 ‘

[Innotetiom foreword, teble of contente end ebetrecte from book "Computer Technolo-
y of the Socieliet Countriee", edited by H. Ye. Reykovekiy, e collection of erti-
clee, ledetel'etvo "Pineney i etetietike", 16,000 copiee, 186 pegee]

U‘ext] Thie internetionel collection deele with problmee of reeeerch, devtlopent,
"ep’plicetion end operetion of conputer fecilitiee developed in eccordence with the
giant on cooperetion in couputer technology between the NR3 [People'e Republic
Bulgerie]. the VNR [lingerien People'e Republic], the GDR [Germen Democretic
Republic], the PM [Polieh People'e Republic], the Republic of Gabe, the SR]! [Socie-
liet Republic of Ronenie], the USSR end the Ch88R [Czechoelovek Socieliet Republic].

In the collection, epeciel ettention ie peid to proble-e of computer epplicetione
in ASU [eutometed nenesenent eyeteee] end computer-eided deeign eyetene.

The collection ie eddreeeed to worker-e engeged in development end uee of the
fecilitiee in the Unified Syetem of Computere in verioue eeeeore of the netionel
economy.

Foreword

Since 1979, Yes computer ueere heve been receiving coQutere in the eecond pheee
of the Unified Syeten. Induetry hee now completed fully the treneition to produc-
tion of theee new mechinee. Their functionel cepebilitiee ere reieing the techni-
cel end econoaic effect from computer epplicetione in the noet veried epheree of
the netionel economy of the eocieliet countriee. ‘l'hie ie feciliteted eleo by the
new operetins eyetm thet permit inplenentetion of the time-eherins mode in ehered-
uee eyetene, virtuel dietribution of nechine-reeourcee, reel-time control of
objecte, etc. 1he cepebilitiee of the new mechinee end the eyeteee beeed on them
heve been expended through en increeee in mein etbrege cepecity, uee of lOOH-byte
diek etorege unite, end uee of new teleproceeein; fecilitiee end epecielized pro-
ceeeore.

The theeetic direction of e nmber. of erticlee in this collection ie the develop-
ment of the Unified 8yetem of Compute". Mother pert conteine erticlee deelin;
with computer-eided deeign [CAD] eyetene (SAPR) beeed on ueins the Unified System
end Syeten of ﬁell Compute". CAD eyeteee e're one of the moet effective

MOMCIALUSEONLY
I-Ull UHICIAI. USE ONLY

applications of computers. CAD permits reducing the time for design of complex
objects two to three-fold end raises considerably their technical and economic

parameters. Articles on the problems of improving programing are included in
this collection.

The remaining articles in the collection pertain to problems of application and
operation of the Yes and 8!! computer hardware and software. Articles on new
hardware and softvare are in the last section.

The editorial board for the collection: 1!. Ye. Ilekovskiy, chief. editor
(Coordination Center. “PK [Intergovernmental Cosmiesionl), N. V. Gorshkov (Council
on Complex Maintenance of the as m), Kh. Choppe (GDR). Ye. N. Hel'nikove,
responsible secretary (Coordination Center, m), B. N. I'm-0v (Council of Chief
Designers of the SH mm), L. Nemet (VNR [Hungarian People's Republic]), P. Popov
(NR3 [People's Republic of Bulgarian, V. V. Prehiyelkovskiy (Council of Chief
Designers of the Yes EV"), Yu. P. Selivenov, editor-in-chief (USSR). A. Ye.

Petey ev (USSR) and N. I. Cheshenko (Council on Application of SV‘I [Computer
Technology] ) .

Contents Page

Foreword

1. International Cooperation Between the Socialist Countries in Computer
Technology

Selivenov. Yu. P. end Novitskas, Yu. IL. Tesk of Technical end Economic

Justification in Selecting Characteristics of Par-setric Series of
Computers 5

II. Computer Hardware

Antonov. V. 8.; Orayevskiy, K. 8.; and Avtonomov, B. 3. Concept of the
Yes-1060 Computer Design end Development 12
Fayzulayev, B. N.; Batyukov, Ye. 1.; and Htrtchyen, 2h. A.
Unified Secondary Power Supplies for "Series-2" Unified System

Computers 19

l‘opelov. T. A. Development of Date Preparation Units in the People's

Republic of Bulgaria 28
Kuchukyen, A. 1.; Sarkisyen, ‘l‘. Ye; and Htrtumyen, I. 3.

Characteristic Features of the Yes-10105 Computer 32
Nyles, L.; ﬂudoba, 6.; and Bornemissze, J., "VMOOWII" hill! 0f

Intelligent Alphanumeric Terminals lol
Nikolov, G. P.; Lezarov, V. D.; Deekalov, P. P.; . lvenove, Y. V.; and

Kirov, K. D. “3.2335 Array Processor for the Yes-1035 Computer System 47
Ill. Computer Software

Hetulis. V. A. and Chaplinskes, A. A. System for Design of Application
Program Packages for Calendar-Subject Planning and Management for Yes

Computers 51
Yezhdmbek, Ya. Digital Simulation of Continuous Processes on Yes
Computers 58

Tsvetkov, V. D.; Tolkechev, A. A.; and Cher, I. Problem-Oriented Languege
for CAD System for Manufacturing Processes of Mechanical Machining of
Parts 65

2
FOR 0W“. USE ONLY
FOR OFFICIAL USE ONLY

Druedeyline. 0. Experience in Uee of Time-altering Syeten for

Progren Development 73
Merek, A. SZPAK-U Integrated Progre-Iing Syetem for Cmplex Iatometion 81
Shube, A. D08 RT Peel-Time Opereting Syetem 86
Auerbech, D. Syetenetic Development of Projecte end Progrene for

Dete Proceeeing - 90
Ivenove. Y. end Ateneeov, T. Softvere for Col-unicetion Between Computer

Syetu end Specielired Proceeeore for Arrey Proceeeing 100
Botev, Kh. Ye. Univereel Deecription Lenguege for CAD Syeteme 105
Schubert, D.; Boelke. V.; end Ettrig, X. “me ALDI-l Algorithm Storege

end Betrievel ant- 109

IV. Applicetior. of Computer Fecilitiee
Rekovich, A. 6. end Semek, A. Concept end Peeturee of Progren Peckege

for CAD of Drilling Devices 117
Pikler, D. end Mei, 1. CAD for Diee 124
Aeterdzhiyen. 0.; Deyev, 3.; end Reychev, D. Antometed Syeten for Heee

Preventive heetment of Populetion (SAHPO) 127
Moletr, N. Dete Acquisition end Proceeeing Syetem for USSR Gee Induetry 133
Beubech, G.-D. Unified Technology for Application Progrem Development 139

'V. Computer Operetion end Heintenence
Ileniech, B. Acquieition of Dete on Computer Herdvere Operetion in the
GDR 149
VI. Intonation on New Computer Pecilitiee
Leidler, K. New anell Computer llerdvere from the GDR 155
Alekeendrov, A.; Yefremove, 3.; end Alekeendrove, 21. he HPLI600
- Algorithmic Lenguege 161
Yezhovich, E. end Vitkove, G. A Concept of Generelired (Stenderd)
Progrea Producte 166
Abetrecte
TASK OF TECHNICAL AND BCOWIC JUSTIFICATION Ill SELECTIIB CHARACTERISTICS OF
PARAMETRIC SERIES OF commas
[Abetrect of erticle by Selivenov, Yu. end Rovitekee, Yu.]
[Text] Beoic foeturee of e fuily of computere ere coneidered ee e peremetric
eeriee of mechinee performing dete proceeeing in verioue epplicetione. Technicel

end economic criterie for optinizetion of cherecterietice of peremetric eeriee of
ccmputere end veye of eolving optimizetion problene are preeented.

3
FOR OFFICIAL USE ONLY
FOR!0FFICLAL.U8210NLX

CONCEPT OF YES-1060 mum DESIGN AND DEVELOPMENT
[Abstract of article by Antonov, V; Orayevskiy, K. and Avtonomov, 3.]

[Text] Stege-by-stage development of the Yes-1060 computer, design principles and
characteristics of central units are described. Processor structure, providing high
efficiency in data processing, end the structure end characteristics of the Yes-4001
universal channel are presented. A properly selected direction for stage-hy-stage

development of a model, that enables developing a computer with high technical and
economic parameters, is shown.

UNIFIED SECONDARY POHER SUPPLIES FOR SERIES-2 UNIFIED SYSTEM COMPUTERS
[Abstract of article by Fayzuleyev, B. N.; Batyukov, Ye. I. end Mkrtchyan, 2h. A.]

[Text] Basic specifications for computer secondary power supplies are cited. Modu-
lar design of functionally complete power supplies is justified. Basic technical
end economic features of the power supplies are given. Design features for power
supply systems for hardware in second phase of Yes EVM and problems of using second-
ary power supplies with input without transformers are considered. Specific charac-

teristics of power supply systems for the first and second phases of the Yes EVM
are compared.

DEVELOPMENT OF DATA PREPARAIION UNITS I" BULGARIA
[Abstract of article by Topolov. T. A.]

[Text] Basic functional features and technical data of key-to-tape and key-to-disk
units are considered. Information of the Yes-9002 and res-9003 key-to-tape units
and key~to-floppy disk units developed and manufactured in Bulgaria is given.

CHAPACTFRISTIC FEATURES OF THE yrs-loas COMPUTER
[Abstract of article by Kuchultyen, A. T.; Serkisyan, T. Ye.; and Hutu-yen, I. 3.]

[Text] Basic parameters of the Yes-1045 computer. set of standard and optional fa-
cilities and ways of obtaining new configurations are analyzed. The structure of
the CPU and characteristics of its components are given. A highly developed check-
ing and diagnostic system. providing higher reliability and repairability for the
machine, is described. System capabilities of the model and organization of the

array processor and additional capabilities that result when it is connected are
discussed.

VIDEOTON FAMILY OF INTELLIGENT ALPHANUMBRIC TERMINALS
[Abstract of article by Nylas, L.; Uudoba, G. and Iornemissza, J.]

[Text] General trends in terminal development are discussed. Methods of developing
terminals with alphanumeric displays at the Videoton enterprise are shown. Func-
tional capabilities of new video terminals with microprogram control, based on
microprocessors, for the Yes and SM computers are described. Technical character-
istics for the SM-7219, Yes-7168N, SM-7601 and UT-ZO units are given.

h
FINICMHNCLAL UEEICNNLY
FOROI‘HCIALUSEONLY

YES-2335 ARRAY PROCESSOR FOR THE YES-1035 CGIPUTBR SYSTEM

[Abstract of article by Nikolov, G. P.; Lazarov, V. 1).; Daskalov, P. P.; Ivanova.
Y. V.; and Kirov, K. 1).]

[Text] 1he Yes-2335 array processor functional capabilities, general structure and
methods of connection to the computer are described. It permits a significant in-
crease in computer throughput for special tasks.

SYSTEM FOR DESK?" OF APPLICATION PWRAH PM“ FOR WEAR-SUBJECT PLANNIK} AND
“ANION!“ POI! YES COMPUTERS

[Abstract of article by Hatulis, V. A. and Chaplinskas. A. A.]

[Text] Basic system characteristics are given; package design technology is des_-
cribed. Given as an example are progran packages for five-year planning of program
development in the "chine-building sector, and for quarterly and annual planning of
program development for enterprises using the system described.

DIGITAL SIMULATION OF CONTIMDUS PROCKSS 0“ m mms
[Abstract of article by Yazhubek, Ya.]

[Text] The DIANA problem-Oriented programing language, used to describe a system
to be simulated in digital form, is presented. The language permits solving prob-
llgs written in the form of differential equations or an analog block-diagram. The
basic functions of the language, all its functional statements and the structure of
a DIANA program are given. Advantages of this language compared to other similar
ones, 08!? for ample, are considered with regard to the need of. solving problems
on the small Yes models. '

PROBLEM-ORIENTED LANDAGB FOR CAD SYSTEHFOR WWII“; PROCESSES 0P HECEANICAL
MACHINING 0P PARTS

[Abstract of article by Tsvetkov, V. 1).; Tolkachev, A. A.; and Cher, 1.]

[Text] The language is intended for design of informational models of parts to be
processed in systems for CAD of manufacturing processes of mechanical machining of
parts. Facilities and rules for formalized description of structural elements and
nachine parts as well as the dimension and precision links between these elements
are given. ‘lhe language may be used in CAD systems for industrial processes and to
prepare control programs for machine tools with mneric control.

EXPERIENCE IN U33 0? THE-MI?” SYSM 5'03 PM“ 0mm
[Abstract of article by Brusdeylins, 6.]

[Text] A year's experience in using facilities of a time-sharing system to improve
development of probln-oriented software is described. The individual stages of

program compilation in the time-sharing mode are discussed in detail; technical and
economic effects are evaluated.

5
momma ONLY
NR OFFICIAL USE OIL!

”FAX-77 INTEGRATED WWW ”8m ’03 mm MIC"
[Abstract of article by Adereh, A.]

[Text] The basic elements of the 82PAK-77 syst- are presented. It is a form sys-
t- of programing. Its language allows convenient writing of data acquisition and
preprocessing algorithms. Process variable processiu algorithms can be extended
by using auxiliary prong in the extended RT-PORTIAN-IV-B language. The 82PAK-77
system has an interactive language for co-Iunication with the operator to input
changes into the system, expand it, initiate standard reports, etc.

D03 RT uau‘rnm (”mm SYSTEM
[Abstract of article by Shuba, A.]

[Text] The features, purpose and degree of complexity of the DOS RT for the 81193
and Ski-lo minicomputers are described. The cyst- offers the capability of creating
an environment of several concurrently operating program processes that interact
with each other and with interactive operators and external processors.

SYSTEMATIC memm 0? PROJECTS m Pmm FOR DATA Pmssm
[Abstract of article by Auerbach, 1).]

[Text] A unified approach for developing data processing projects at the stages of
design. inplanentation and testing is suggested and based on modern programing
technology. The basis of this approach is the systematic decomposition of the task
into a hierarchy of subtasks with well-defined rules of subordination for transfer
of control, organization of the data stream and error processing. Brief information
is given on the most important principles at each stage of development, implementa-

tion and testing. Current shortcomings in the method and ways of updating it are
shown.

SOPTHARE FOR CORIUNICATION amen MEIER SYSTEM AND SPECIALIZ. PROCESSORS FOR
ARRAY PROCESSIIC

[Abstract of article by Ivanova, Y. and Atanasov, T.]

[Text] Features of software supporting methods of access to array processors are
described. M cases are consideredi the Yes-2335 array processor without its own

storage and the array processor with its own storage. The set of matrix operations
supported is given. -

UNIVERSAL DESCRIPTION mumﬁ FOR CAD SYN
[Abstract of article bybotev, Rh. Ye.]

[Text] The languege, developed for writing, inputting and updating date in a data
file for a CAD system, features flexibility, universality and simplicity. A trans-

lator is provided. In each specific case, the user himself defines the structure
and contents of the input data stream. Data on the file structure and rules for

filling fields are stored in a permanent system file. The facilities developed may
be used in any system with files of the type considered.

’03 orncm, ”83 our!
1’03 OFFICIAL USE ML!

ALBI-l “£0le SWIM! AND RETRIEVAL SYSTEM
[Abetract of article by Schubert. 1).; Boelke, V.; and attrig, 1.]

[Text] Thie eyeteu ie baeed on the amos programing ayetu, which eetabliehee a
unified technique and criteria for algorithm deecription. The deecription language
and eleoente of the retrieval language are diecueeed.

COME?! AND FEATURES OF PRWRAM PACKIGB FOR CAD OP DRILLDB DEVICES

[Abetract of article by Rakovich, A. G. and Sarah, A.]

[Text] Coneidered are the principlee for deeign of a package and ita Iain coupon-
ente with emphaeie on describing the library of progran nodulee for eyntheeie and
docuentaing deeigna. Intonation ie given on hardware for inplenentation of the
device deeign program; a brief econouic evaluation of the uee of the package ie
given; information on proepecte for ite developaent and inprovenent ie given.

CAD OF DIES

[Abetract of article by Pikler, D. and Turai, 1.]

[Text] Generalized ie the experience of developing a eyeten for couputer-aided de-
tign of dies, in which an attempt ie made to eolve the problem of limited knowledge
by mechanical engineere of conputere and the linited capabilitiee for writiu algo-
rum for deeign proceduree.

WED SYSTEM FOR MASS PREVEM'IVS TREATMENT 0? POPULATION (SAHPO)

[Abetrect of article by Aatardzhiyan, 6.: Bayev, 3.; and Iaychev; 3.]

[Text] lhie eyeten for preventive treatment of the population ie an application
progran package to be need in real tine under control of the 8011’ program eyetela,
baeed on Yesm teleproceaaing hardware. Hardware, package functional featuree and
data bank organization are coneidered.

AOQUISITION MD nocrssm: SYSTII‘I FOR 0888 GAS INDUSTRY DATA

[Ab-tract of article by Holetz, NJ

[Text] Reeulte of epecial aoftware developent are given. General review of eye-
teIa etructure and ite couponente ie given; area of effective application are ehown.

UNIFIED mmY FOR APPLICATION 1’me 9mm
[Abstract of article by Baubach, G.-D.]

[Text] Deecribed ie technological proceee of developing application prograne. The
technology ie euitable for developing large progran ayetenezcharactarized by diveree
functione. high conplexity and dynamic developaent of eree of application. Proceee
begine with formulation of requirelaente for the program and ie continued with deeign
of the hierarchy of functions, data and docuaentation.

7
ton orncm use ONLY
FOR OFFICIAL USE ONLY

MUIslTION 0? DATA 0" COMPUTER WA” ”M10" IN OUR
[Abstract of article by ﬂanisch, 3.]

[Text] Experience gained in use of systu for acquisition and analysis of data on
computer and device reliability in 6!)! is described. The system effects continuous

monitoring of the entire computer park and allows taking tinsly steps to maintain
high reliability of manufactured hardware.

NEH SHALL comma WARE m GD!
[Abstract of article by Leidler, K.]

[Text] Features, operational capabilities and brief infatuation on software for
two microcomputers, a printer and a marl: reader in the SH family are presented.

HPLI600 MORITIIHIC LAIBUIBE
[Abstract of article by Aleksandrov, A; Yefrsmova, 1.; and Aleksandrova, 21.]

[Text] The “PL/600 algorithmic language oriented to the 831.600 microprocessor fusi-
ly and the Fin/600 cross-cwpiler for the Unified system of Computers are considered.

Intonation on required computer configuration and average compilation time is givn.
Described are lsnguage capabilities and features, compiler operation, language s3

tax and rules for writing individual statements. Difference between Elm/600 and
PLll is pointed out.

CONCEPT 0? GENERALIZED (STANDARD) "aim PRODUCTS
[Abstract of article by Yethovich, E. and Vitkova, 6.]

[Text] Described is the ADAPTOR progr- system, a formal msans for creating and
using flexible program products: etmdard elements of software for ASU's of varying

scale and generality. The system belongs to the class of macroprocessors which do
not depend on the type of source language.

COPYRIGHT: lzdstel'stvo "Pinansy i statistika", 1981

8565
080: 8164/0138

8
FOR omcm. us: 0qu
POI! OFFICIAL USE ONLY

TECHNICAL AND mm JUSTIFICATION III 331mm WRISTICS 0? PWIC
SERIES 0? ms

Moscow VYCIIISLITBL'NAYA 73mm smmlsncntsxm 8“ in Russian lb 9, 1981
(signed to press 21 by 81) pp 5-11

[Article by Yu. P. Selivanov, engineer (USSR), and Yu. ll. lbvitskas, candidate of
economic science (0883)]

[text] ‘lhe principles, developed in nachine building, for creating parasetric
_ series of machines are also applicable to computer science as the field concerned
With the design, production and operation of data processing hardware. he use of
these principles nay be of considerable help in developing general approaches to
the development of flailies of computers and in quantitative and qualitative
evaluation of the characteristics of such a family.

In accordance with [l], as applied to computers, a paruetric series should he
understood as the aggregate of its elsments--h‘srdware, aoftvare and date conpatible
type sizes of conputers for an operational purpose, 'i.e. intended for use in a
specific macro area, having unified architecture, having limited interchangeability,
differing fro- each other by the nueric value of the main paraleter, throughput,
end intended for aeeting the given needs of society for processing of data.

As apparent from the above definition of a par-stric series, throughput is usually
accepted as the train computer parameter. Q: the one hand, this parameter is closely
tied to all the other computer characteristics and often prescribes than, and on the
other hand, it nest fully reflects both the user properties of these Iachinea and
the cost for their production and operation.

In our view, based on the general theory for design of parametric series of Iachines,
in the most general sense, throughput should he thought of as an indicator that
takes into account not only the effective rate of the aggregate of functional units,
but also the labor productivity of the personnel preparing the process of data pro-
cessing and participating in it. This means that computer throughput must be

spoken of as a man-nechine system, which it basically is. Hence, it follows that
the problea of increasing computer throughput must include the very important
partial problem of reducing the share of cost of direct labor in the overall aggre-
gate of direct and indirect labor needed to process a unit of information in solving
one type problem. The way to solve this partial problem is to transfer to hardware
and system software facilities for implantation in the autonatic node of those
functions for solving the probl- (development of the algorithm and program,

 

9

FOR OFFICIAL [BE ONLY
FOR OFFICIAL USE ONLY

preparation of data, providing for an efficient mode of processing, operation of
hardware, etc.) that have been previously performed manually in parctice. This
leads not only to a decrease in total inputs of time needed to process a unit of
information, but also to an increase in these inputs for the share of machine time
at the expense of the manual, which is a mandatory prerequisite for further automa-
tion of all the processes in data processing in the national economy based on
qualitatively new computer hardware.

This methodological approach to the evaluation of the throughput of a parametric
series of computers permits determining the technical and economic effectiveness of
the application of this parametric series in the entire macro area for which the
series is designed. Also, this approach does not preclude the usual methods of
evaluating throughput that permit determining the physical parameters of computers
in solving problems of a specific type from the given macro area.

A major property that computers forming a permeetric series must have is inter-
changeebility. The classification by features of interchangeability of type sizes
of a parametric series of machines and the characteristics of each type are given
in [2]. The problem of interchangeability of computers as type sizes of a para-
metric series has not yet been adequately studied and requires separate considera-
tion. By limited interchanegability, which computers in this series must have
according to the definition of a parametric series given above, is meant the caps
bility of replacing one type size of the series by at least one other, which, how-
ever, entails certain economic losses, for example, the substituting computer
solves the same problems at the same qualitative level as that being replaced, but
it costs more to do so.

a prerequisite and mandatory condition for interchangeability of computers forming
a parametric series is their hardware, software and data compatibility.

Hardware compatibility of computers in a parametric series provides the capability
of building them on the modular principle, i.e. by assembly of all computers in a
parametric series from a unified set of functional devices, aggregates that are a
set of structurally and functionally unified standard unite and assemblies connected
to each other by unified links. A relatively small number of unified units and
assemblies is needed to obtain a large number of modifications of functional devices
built on the modular principle. This approach reduces hardware development and
manufacturing time and simplifies and reduces the coat of operating it. Unification
of interfaces creates the capability of improving any of the devices independently
of the others with subsequent inclusion of them into the configuration of a machine
already in operation. 1111s enables the development of the technical capabilities
of the individual members of the parametric series, preventing obsolescence and
extending thereby the life cycle of the series.

The modular principle penits developing the technical capabilities of an existing
computer not only in depth, by improving the individual functional units of the ma-
chine, but also in width, by controlling the machine configuration. Using this
principle of designing hardware combined with ensuring software and data compatibil-
ity and the use of special additional facilities permits forming complexes of com-
puters, creating structures with a qualitatively new level of system organization
and qualitatively new technical and econaic par-eeters.

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Hardware, software and data compatibility of computers in a type sire series is
based on the unity of their architecture which has a modular structure and the
development of which therefore can be effected without loss of software compati-
bility of the machines with computers previously manufactured.

A brief consideration of the characteristics of the properties of computers as
type sizes of a parametric series permits formulating the requirements imposed on
them from this viewpoint. They must be hardware, software and data compatible,
have the property of interchangeability, have flexible configuration and lend thus-
selves to complexing. These requirements, in particular, have been fully met by
the second phase of the Unified system of Computers. In the first phase, the. re-
quirement of instrchangeability was not fully realised since the Yes-1010 and

Yes-1021 computers do not have the property of interchangeability with the other
machines.

The features peculiar to a parametric series of computers and which characterize it
as a type size series of machines are multidimensionality and multilevelness.
mltidimensionality of a paranetric series of computers is expressed in that the
machines forming it differ from each other not only by the numeric values of the
main par-aster, but also by the numeric values of other parameters, basic and
secondary, for sx-ple, by the main storage capacity, channel throughput, floor
space occupied, etc. In some areas of application, these additional parameters
at turn out to be the main ones. for exasple, for information systems with large

external storage, channel throughput may be the decisive parameter in choosing a
machine.

The multilevel nature of a parametric series of computers is manifested in the
fact that not only the computers, but also the functional units forming them and
the modules of the-lower levels, including the integ'stsd circuits, are elements
of specific parametric series. In other words, each computer, being an eluent of
a parmsetric series of these machines, consists of devices, units and elements,
etc. that in turn are elements of a corresponding partial series. he multilevel
property is especially characteristic of the second phase of the Unified System of
Computers. In the first phase, only central units formed paranetric series. Que
could single out groups of peripherals that did not form a parametric series for

the main parueter, for example, several types of disk storage units with identical
capacity of 7.25)! bytes.

A major characteristic of a parametric series of computers, just as of any other
parasetric series, is its density, i.e. number of type sizes. Parametric series of
casputers car-able of performing the sale mount of computational operations at the
s-e qualitative level may consist of a diverse masher of type sizes (differ in
density), and series with an identical numuber of type sizes (equal in density) may
consist of type sizes diverse in the numeric value of the main perimeter.

Thus, a certain amount of work on data processing may be performed with the aid of
different parametric series of computers. One cannot compare computers in a para-
metric series with separate computers that do not form this series, since the para-
meters of the computers forming the parnetric series are selected and optinized on
the basis of the tasks set for the entire series. hue user cost of data processing
in all these alternatives is identical since they permit performance of the same

- msount of work at the sue qualitative level, but the labor cost is not equivalent

11

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

since the performance of the sens mount of work requires different eocielly
needed inputs of lsbor. In other words, inputs for develoulent, production, com-
missioning and operation of computers depend on how the series is constructed (on
the masher of type sizes end density of their errsngenent in its individual inter-
vele, defined by the numeric value of throughput peculiar to the models in this
series).

Consequently, the problem of choosing the optimal psrsmetric series of computers
from ell possible alternatives hes to be solved. To solve this problem, it is ex-
pedient to use the method of comparative economic effectiveness, the caleculetion
of indicetors of which is based on monetery measurement of inputs. The inputs
listed above essocisted with the development of peremetric series of computers are
synthesized in two nonetery indicetors: capital investment end opsrsting expenses.

Capital investment eesocieted with development of the i-th alternative of .s pers-
metric series may be defined by the formle.

Kpo‘“2 "con“ (1)

[-4

where KCOH U is the cepitsl investment needed for development, menufecture end

cosmissioning of e computer of the j-th model of the ¢-th parametric series.
rubles/computer.

'l‘he velue of K0001 1) for each j-th model of computers in the series has to be

determined with regerd to the wholesele price for the minimum configuration of the
model; inputs for design of the peremetric series, including inputs for development
of the softwere system per model (if for some reeson these costs are not included
in the wholesale price for the mechine); inputs for trensportetion of the computer
to the inetelletion site, assembly, edjustment and etsrtup of it; end costs of
machine floor spece occupied (including specs needed for servicing end repsir).

Expenses for operation of each i-th alternative of the design of s peremetric
series of computers cen be calculsted es

Eb. 1’; Econu' (2)

where Eco“ 11 is the enan expense for operating a canputer of the j-th model of

the i-th psremetric series, W.

The velue of EcoN 13 must include: besic end supplementery seleries for personnel

servicing the type configuretion of the mschine; emortisstion of the computer;
cost of services performed by specielired enterprises for complex centralised
msintenence of computer herdwsre per mschine; cost of routine computer repsir per-
formed by maintenance personnel; cost of power consued; cost of euxiliery meteri-

als (magnetic tapes, perforsted tapes, psper. etc.); and nortizetion of mschine
floor space occupied.

12
NR OFFICIAL USE ONLY.
NR OHICIAL USE (FLY

Ihe economically optimal alternative of a parametric series of computers is chosen
based on the monetary criterion of comparative effectiveness, the indicator of unit
adjusted costs for the i-th alternative of a design of the series. This indicator

is determined by the expression , _...
I I
2 50mm + 'hon u
W.,,=.:m:_h'5u£= -' -' , (3)
'p.‘ - .
2 4mm:

1-“

\vhersEu is the normative factor of effectiveness of additional capital investment,

1Iyear;
q” 1 is the total annual throughput of all models of the computers forming the ioth

parametric “ﬂ“, thousands of ogrationslzear;

series of computers .
is the annual throughput of a computer of the j-th model of the i-th

and q
00“ 1) thousands of mretionslmr tm tashelxoar

parametric seriee,

_ computer computer

Considered economically optimal is that i-th alternative of the design of the para.
metric series of computers by which

etc.

H d )1 C line (1.)

Thus, based on what has been said above and with regard to [1], an economicelly op-
timal parametric series of computere should be considered a parametric series of

The basic requirements imposed on an economically optimal parametric series of com-
puters are: '

long-term nature. ensured by including in the series future type sizes of computers,
the need for which cannot be met imadiotely or may arise later;

optimality of period of manufacture, i.e. an ecormically optimal term for the
series models being in production. determined by the technical level and quality of
these models, rate of technical progress in computer manufacture and sectors re-
lated to it, and rate of change in the national economy of the value and structure
of information subject to processing on computers of this type;

technical and economic justification which includes a technical and economic
analysis of the parameters of computers manufactured by domeatic and foreign indus-
try; selection of computer parameters determining the technical level and quality
of these machines; analysis of the actual data and forecasts for the values and
structure of information subject to processing on computers of a given type; defi-
nition of the need by the national now for such machines; selection of a
rational m [regressive base design for the computers and the software system
(from the viewpoint of performing computations with the minimal socially needed
inputs of labor); determining and comparing cost required to implement the different
alternatives of a parametric series of computers of a given type, etcn,

optimality of nomenclature. of computer technical parameters prescribed by standards,
and selection based on objective criteria not only of the main, but also of the
basic parameters of the machines from the set of existing parameters.

13
FOR OFFICIAL USE. ONLY
FOR OFFICIAL USE ONLY

In setting out to design a perusetric series of computers, first of all one must
establish its users, the most typical" operating conditions and the demand by the
national economy for the machines of the various type sizes. After this. the el-
tsrnetives of the parametric series have to be outlined and the alternative that
most fully meets the requirements of production adn operation of these machines

hes to be chosen on the basis of technical end economic analysis end with regard to
the criterion of optimality (4).

The starting point for development of an economically optimal parametric series of
computers is the definition of demand by the national economy for the given type of
machines. In turn, computer demand is based on the data value and structure that
it is economically expedient to process by using machines of a given type. Greet
difficulties arise in analyzing the demand for tasks to be handled by using compu-
ters and the distribution of these tasks by parameters describing them. Still.

this is the only kind of analysis that permits defining the demand by the national
economy for computers of specific type sizes with technical parameters optimally

corresponding to parameters of the tasks to be handled.
BIBLIOGRAPRY
1. "Tipovaye metodika optimizatsii mogomsrnykh parnetricheskikh ryadov"

[Standard Technique for Optimization of Miltidimensional Parnetric Series],
Moscow, Isdatsl'atvo stendardtov, 1975.

2. Ivenov, A. V., "Bkonomika ryedov mashin" [Machine Series Economics], lbscow,
Izdatel'stvo standartov, 1975.

COPYRIGHT: Izdatel'stvo "Finansy i statistilta", 1981

8545
C80: 81104/0138

1h

FOR OFFICIAL USE W11
FOR OFFICIAL USE ONLY

CONCEPT OF YES-1060 COMPUTER ntsmu AND DMIDMNT

Moscow WCHISLITEL'NAYA TEKHNIKA SOTSlALls'l‘ICHESKIm SM in Rutsimn ﬂo 9,1981
(signed to press 21 Hey 81) pp 12-19

[Article by V. 8. Antonov, cendidete of engineering science (USSR), K. 8.
Oreyevekiy, engineer (USSR), end 3. B. Avtonomov, engineer (0883)]

[Text] A trend in the evolution of the Unified System of Computers is the improve-
ment of models previously produced by extending their functionel cepebilitiss. Such
development eesumes meximum pressrvetion of the besic structure end conceptuel solu-
tines edopted in the centrel unite of the computer. the processor, the 10 chennele
end the mein storege unit, end of their interfece principles. this permits extend-
ing the term for series production of the computer end et the seme time provides the
cepebility of developingfor the computer newly introduced functions, principles for
implementetion of them end new versions of the opereting systeme to fecilitete their
introduction end ensure continuity in the models being produced. This epproech to
computer development es e whole becomes especislly importent in developing the pro-
cessor, since introduction of new functions, primerily expending the instruction

eet, introducing new types of interruptions, etc. is reflected meinly in the pro-
cessor.

Now. when the progrem for further development of the Unified System of Computers hes
been formuleted, it is ueeful to genereliee the experience of developing the
Yes-1060 computer.

In designing the Yes-1060 computer, the following teske were solved:

development of e high-throughput computer thet implements the principlee of opere-
tion of the second phese of the Unfied System of Computers;

reising the technicel end economic cherecteristice competed to those of the compu-
ters in the first phese of the Unified System;

reising the internel speed of the processor;

increeeing the cepecity of mein storege;

reising opereting reliebility;

development of checking end diegnostic fecilitiee; end

introduction of the new technologicel design end element bese.

Development of the Yes-1060 computer begsn while the principles of operetion for

the second phese of the Unified System of Computers were still being worked out, but
the besic concepts hed elreedy been formuleted end edopted, such es the orgenizetion'
end fecilitiee for providing virtuel storege, expending the instruction set end the

15
won omcm. use onu-
I'UI 0"“.th USE. UNLY

system of interruptions. The Yes-1060 computer had to become a transition model;
therefore, it was oriented to further development. In doing so, a path of stage-by-
stage development was chosen, and the computer of the first stage had to become a
series model. let us consider the ways and amthods of solving the basic problems

in designing the Yes-1060.

The main technical and economic characteristic of a computer is the throughput-cost
ratio. This characteristic can be improved by either increasing computer through-
put or reducing hardware cost. In turn, throughput can be increased through both
more efficient organization of the computing process, raising the level of multi-
programming and reducing unproductive inputs of machine time, and through increasing
the internal speed of the processor, IO channel throughput and rate of operation of
the external devices. However, increasing processor speed and 10 channel throughput
requires additional inputs of hardware, which increases computer cost somewhat.

Increasing computer throughput requires in the first place expanding the capacity of
main storage which enables efficient use of the computer.

In the Yes-1060 computer, the technical and economic characteristics have been im-
proved as a result of the optimal combination of the methods mentioned. Thus, for
example, considering the capabilities of teh element base used, a relatively simple
structure was selected for the processor with overlap of instruction processing '
three levels and application of efficient microprogram control, which permitted 0.-

taining a throughput of over one million operations per second with comparatively
low costs for hardware.

A large main storage unit was developed in the Yes-1060 computer in the first stage
through the incorporation of mcre modern design solutions for the ferrite storage
used previously. This enabled quadrupling the storage capacity in a rack. In the
second stage, integrated circuits were used as the storage medium.

A major problem in developing a computer is raising operating reliability, which
means faultless operation, automatic recovery of the computing process when system
serviceability is damaged and reducing repair and maintenance time. The checking
and diagnostic facilities are aimed at accomplishing this.

Parity checking facilities incorporated in the Yes-1060 computer cover up to 90 per-

cent of the equipment in the main processing assemblies and data transmission paths.
Hamming coda checking was also introduced for main storage. This enables detection
of single and double errors and correction of single errors of data in storage.

Diagnostic facilities include both software and microdiagnostic tests that together
with the checking facilities permit detection of practically all malfunctions or
failures of central unit hardware. processor, storage and channels, and localization
of malfunctions with a precision down to a group of TEZ's [standard exchange cards].

These facilities reduce considerably computer maintenance and repair time and also

provide for operation of recovery facilities. The latter include hardware retry of
instructions and procedures in the CPU and channels and software facilities in the

operating system that provide for retry of programs or sections of programs.

Standard solutions for the Unified System of Computers were adopted as the basis
for mechanical processing of the Yes-1060 computer. To raise the level of machine

16
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

manufactureability in series production and improve operating qualities, a number
of new industrial processes was introduced in machines of this class, such as wire-
wrapping in assembly of panels, assembly of inter-panel connections by flat cable,
etc.

ECL, the 18500 series of instgrated circuits, was chosen as the computer element
base. This series includes 26 types of circuits with medium density of about 10
gates per package with typical delay time of 1.5-2 as per element and average dis-
sipated power of about 250-300 m" per package. Subsequently, the number of types
of integrated circuits reached 67 as a result of introduction of more complex func-
tional elements and development of storage elements. Average number of gates per
package grew to 15-20.

Using the 18500 made it possible to implement an advanced structure for the central
unite in the computer with rather limited structural bulk and with a relatively
short operating cycle.

The Processor. In analyzing the capabilities of improving the processor structure,
the conclusion was drawn that units such as the instruction processing unit and the
arithmetic unit control unit must be the most dynamic and adaptable. Analysis of
thg experience in developing and adjusting the Yes-2060 processor showed that the
grQQtest difficulties are encountered in developing the control circuits.

The primary use of microprogram control and the use of loadable storage of micropro-
grams allow for development of the processor, introduction of new functions and
extension of the instruction set without substantial adjustment to the apparatus.
Hicroprogram control also provides efficient diagnostic facilities that can be de-
veloped without additional costs for equipment. The expediency of this solution
was confirmed both during adjustment of the pilot model and during development of
new versions of the operating systems.

The res-2060 processor (fig. 1) has three basic units: the storage control (UP)
unit, the central control and instruction processing (Tau) unit and the arithmetic
unit (BA). The storage control unit services requests coming from the processor
units and 10 channels for reference to main storage. The main functional assemblies
in the storage control unit are high-speed buffer storage (3?), 10 channel buffer
storage (BK) and dynamic address translation facility (DTA) and the storage adapters
(AP). The central control and instruction processing unit fetches instructions from
main storage, processes them in the overlap mode, generates operand addresses and
fetches operands from local and main storage. Its functional assemblies include

the buffer registers for instruction processing (RB), the instruction counter

(SchK) and the microprogram control unit (MU). The arithmetic unit performs opera-
tions on operands in the process of executing operations and writes the results to
local and main storage. The main functional processing assemblies in the arithme-
tic unit are the parallel adder (SH), the shifter (SD) and the fast multiplier (UN).
The control units for the central control and instruction processing unit and for
the arithmetic unit are microprogrammed. Control signals are generated by the
microprogram control units.

The chosen structure of the processor permits solving the problem of matching the
relatively long access time from main storage with the short CPU cycle and provides
for efficient overlap of the operation of the [0 channels and CPU with main storage.

17
FIII(HﬂﬂC1Al.USE(MNLY
FOR OFFICIAL USE ONLY

1. UP [storage control unit]

2. A! [storage adapter]

3. 0K [10 channel buffer storage]
a. DP [high-speed buffer storage]

5. DIA [dynamic address translation]
6. rs” [central control and instruc-
tion processing unit]

7. SchK [instruction counter]
8. RB [buffer registers for
instruction processing]
9. H0 [microprogram control unit]
10. BA [arithmetic unit]

11. SH [parallel adder]
12. SD [shifter]

13. UN [fast multiplier]

 

Fig. 1. Structural diagram of the Yes-2060 processor

These problems are solved by incorporation of the mode of interleaving of main

storage (interlacing of addresses), the high-speed buffer storage and the buffer
storage for the IO channels in the storage control unit. '

The specified speed of the CPU is achieved through, first, overlapped processing of
instructions which permits obtaining results of execution every two steps of the
processor operation; second, more efficient structure and algorithms for execution
of operations in the arithmetic unit which decreases the average number of steps in
instruction execution; and third, as a result of incorporation of the high-speed
buffer storage which reduces the effective cycle of main storage threefold.

CPU characteristics are:

principle of control hardware-microprogram
instructions realizable 183
overlap levels 3

throughput, measured on the basis of
statistical mixes for scientific and

technical tasks 1,060,000 instructions/second
operating step 160 ns
buffer storage: capacity 8K bytes
cycle 160 ns
18

IN)! OIWHCIAI.IISI2(MVLY
FOR1OFFKJA1.USE‘0NLY

The Yes-1.001 Univereal mltiplexer Clunnel extende the functional capabilitiee of
the computer 10 eyetem. It unitee groupe of functionally independent channele in
one device (fig. 2). The byte-multiplexer channel (BM) eervicee low-epeed

Key:
“95”." 1. 30}! [unit of exchange bueee]
2. am [byte-multiplexer channel]
3. GK [main channel]
lo. PM! [local etorage for main
channel]
5. SPK (0, l, 2, 3) [eelector
eubchannele]
6. “PK [block-multiplexer eubchannel]
7. mew [block-multiplexer channel]
8. ”To? [CPU interface unit]
9. no [data buffer unit]
10. BSPU [peripheral interface unit]
11. sum [block-multiplexer channel]
12. em [block-multiplexer channel]

 

haired: node-dude
IO interface

Fig. 2. Structural diagram of the Yes-4001 univereal multiplexer channel

peripherale in both the multiplexer and huret modee, and medium-epeed devicee in
the burst mode. The baeic functional unite of the byte-multiplexer channel are
the main channel unit (GK), four eelector eubchannele (SPK) end the block-multi-
plexer eubchannel (NPK). The main channel unit enablee exchange of eignale with
the CPU and storage control unit, exchange of data and control vorde with main
etorege, and etorage and modification of control data. The main channel exchangee
data with the CPU through the unit of exchange bueee (50M). ‘lhe main channel ex-
changee data with the multiplexer eubchannel in bytee. Storage and unpacking of
double vorde ie performed in local etorege (M) for the main channel. Selector
eubchannele have their own data buffere and exchange data in double vorde with the
main channel.

A block-multiplexer channel eervicee high-speed peripherale. The device ie con-
nected through a feat two-byte interface, permitting data tranefer in both the one-
byte and two-byte modee. The baeic functional unite are the CPU interface unit
(lS‘l’eP), the peripheral interface unit (BSPU) and the data buffer unit (330). Data
ie exchanged with the CPU through the unit of exchange bueeee in double Horde over
a hue cannon to the block-multiplexer channele.

The block-multiplexing mode allowe a coneiderable increaee in 10 eyetem efficiency
and efficiency in the uee of channel equipment. he univereal channel eupporte:
the indirect addreeeing mode in the channels;

19
FOR OFFICIAL USE ONLY
PW Ul'I‘ICIAI. USE ONLY

the twoobyte interface with throughput of 3H bytes/second for connection of
advanced high-speed devices;

expansion of the TO instruction set; and

facilities for instruction retry and recovery after failures.

Thchnical characteristics for the Ye8-6001 channel are:
block-multiplexer channel:

number 3

throughput, one-byte interface 1.5“ bytes/second

throughput, two-byte interface 3H bytes/second
byte-multiplexer channel: 1

aelector subchannels 6

block-multiplexer subchannels 192

selector subchannel throughput 0.5M bytes/second

block-multiplexer subchennel

throughput 0.1M bytes/second

The main storage unit for the Yes-1060 computer is built with integrated circuits
with a capacity of 16K bits per package, giving 8" bytes in the standard rack.
which also holds the power supply for main storage. The use of dynamic integretd
circuits required the regeneration mode in the CPU storage control unit.

Unit cycle time is 680 ns and access time is 520 no.

In the first stage of development of the Yes-1060 computer, basic efforts were
directed toward developing a processor as a unit reflecting to the highest extent
the the technical characteristics of the computer.

The Yes-5012 and Yes-6035 units, that were part of the Yes-1050 computer, were used
as the IO channels. The Yes-3206 main storage unit was built with ferrite cores
with the application of technology developed in the main storage unit for the
Yes-1050. The power supply system also made use of the secondary power supply
unite for the Yes-1050 computer. This permitted using series manufactured devices
and units and thereby reducing the labor-intensiveness of development and the
period for putting the computer into series production.

The standard configuration of the central units in the computer in the first stage
was: the Yes-2060 CPU, the Yes-4012 multiplexer channel, two Yes-£035 selector
channels, and two Yes-3206 main storage units with a capacity of 2H bytes.

The standard configuration took up nine racks, including four for the CPU and chan-
nel power supply system.

In the second stage of development of the Yes-1060, the problem of developing a
computer that fully implements the principles of operation of the second phase of
the Unified System of Computers was solved; this required development of the new
universal channel, the Yes-6001. The problems of developing main storage with in-
tegrated circuits and improving the power supply system by using more powerful
secondary power supplies were also solved. The main efforts in this stage were
aimed at developing the Yes-6001 universal channel and developing operating system
versions for the virtual organization of storage.

20
summon“
. I'I'Oll OFFICIAL USE ONLY

In the second stage, in the standard configuration. the number of 10 channels was
also increased to four and main storage capacity to 8“ bytes, and the operating,
technical and economic characteristics of the model were substantially improved.

The-standard configuration of central units in the Yes-1060 computer in the second

stage includes the 258-2060 CPU, the Yes-6001 unit with one byte-multiplexer and
three blockqmultiplexer channels, and the aﬂ-byte main storage unit.

The total racks for the central unite is four.

During the period of improving the first-stage computer for series production, CPU
facilities were developed that support the principles-of operation of the second
phaae of the Unified System of Computers, the 08 6.1 version of the operating sys-
tem and facilities for recovery after failures in the CPU.

The experience of the development, adjustment and operation of the Yes-1060 compu-
ter confirmed the correctneae of the chosen direction of staged development of the
model, vhich permitted development of a computer with high operating, technical and
economic characterietice. Further improvement of the Yes-1060 may involve

reducing the CPU operation step, raising the reliability and expanding the
diagnostic facilities for maintenance.

GQQYRICHT: chatel'atvo “Finansy i statistika". 1981

8555
C50: 8164/0138

21
me OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

UNIFIED SECONDARY me SUPPLIES POI SERIES-2 UNIFIED SYSM 001901333

Moscow WCHISLITSL'NAYA mum SOTSIALISTICHBSKM SM in Russian No 9, 1981
(signed to press 21 Hey 81) pp 19-28

[Article by B. N. Feyzuleyev. doctor of engineering science (U883), Ye. I.
Betyukov, enineer (U883), end 2h. A. litrtchyen. engineer (US$01

[Text] Distinctive feetures of the second phese of the Unified Systml of Computers
ere the wide renge of throughput (from tens of thousends to s'everel millions 'of
operations per second), improvement of the throughput-cost retio, use of feet inte-
greted circuits with en enhenced degree of integretion, unified principles for the
design of power supplies and the use of unified secondery power supplies (UVIP).'

The power supply system (83?) for the Unified System Computer he'rdwere is pert of
the electronic equipment end lergely determines the technicel end economic indice-
tore for computers in the Unified System end their individuel units; therefore,
improving the peremeters of the power supply system wee e mejor tesk in developing
the Unified System of Computers.

ﬁre power supply system for the Unified System of Computers is the eggregete of the
trensformers for the industriel power supply line, distributing, reguleting end
switching devices. protection end control units, end the secondery power supplies
thet form the mein pert of the power equipment for the'herdwere.

me besic requirements imposed on herdwere power supply systems for the Unified
System of Computers ere:

modular principle of design;

structurel end electromegnetic competibility between the power suppliesend elec-
tronic end logic units, ellowing then to be used together in the besic design;
unif icetion end stenderdizetion of the. nomencleture end design of secondery power
supplies (VIP) [398] end power control units (30?);

unified system interfece for power supplies;

high stebility of voltegee output from SP8;

enhenced iamunity to the effect of msin power line end cross Inoise;

provision of the necessery protection end control functions with steble thresholds
for operetion; '

high efficiency fector; end

high degree of unificetion of circuit engineering end design solutions with regerd
to reducing lebor-intensiveness of development of verious systems end orgenizetion

of their lerge series production.

22
FOR OFFICIAL USE ONLY
non OFFICIAL USE ONLY

These requirements were worked out at the stage of developing the first phase of
the Unified System of Computers and formulated in a series of standards and
methodological instructions.

During development of the units and systems for power supply to the "Series-l"
hardware, much attention was paid to solving the problems of electromagnetic com-
patibility between the SP3 and electronic equipment and to improving SPS unit
characteristics. Let us discuss these problems in more detail.

Computer power supplies for the first and second generations were largely based on
line regulators that are characterized by a low level of pulse and high-frequency
noise; their unit indicators fully meet the requirements of the electronic equip-
ment built with discrete elements. with the shift from discrete components to in- ’
tegrated elements in third-generation computers, the absolute noise inunity of the
element base declined due to the decrease in amplitudes of the working signals,
while the SP8 noise level increased considerably due to the use of pulse regulation
methods, the use of key SP8 and increased power consuption per structural unit.

Due to the small working signals of modern integrated circuits [IC] and the small
absolute value of noise imunity, it became necessary to protect computer hardware
from noise in the industrial power line and cross noise generated by the computer
hardware itself. The shape and amplitude of external noise depends on the nature
of the occurrence. However, most dangerous is industrial noise that occurs on the
main power line. Recording and studying it is difficult because it is irregular
and has a wide range in duration of effect and amplitude. Reliable operation of
hardware, in particular the time between breakdown and failure, depends on the
amount and spectra: of noise affecting the power supply and the capability of the
latter to impede the passage of noise to the load to a considerable extent. From
the viewpoint of inunity to industrial and cross noise, the following requirements
on the Unified Computer System power supply system were formulated as a result of
research:

insunity to the effect of voltage deviations in the industrial supply by 80V for
20-30 ms; and

inunity to the effect of voltage spikes with an amplitude of lOOO-lSOOV and
duration of 2-10 microseconds.

Electromagnetic compatibility under the conditions of main supply, cross and inter-
nal noise was provided for the SP8 as a result of adopting a number of complex
measures:

exacting design of the electronic portion of the power supply system and system for
electronic assembly of hardware elements and assemblies;

use of main line noise suppression filters in the SPS and devices;

use of converters for the primary supply line (motor-generators, static converters,
etc.); and

development of a protection system for units and devices.

In first-phase Unified System computer devices, the power supply system makes up a
significant portion of all electronic equipment (50 to 70 percent of computer bulk).
This is because the size of electronic equipment was considerably reduced compared
to that in second-generation computers owing to the application of IC's, while SP8
consisting of various types of discrete electronic and radio items do not lend

23
FOR OFFICIAL WE ONLY
I'UK OFFICIAL USE ONLY

themselves to effective microminiaturizstion. Because of this, for third-genera-
tion computers, reducing the structural bulk of power supplies and in the first
place increasing the unit indicators of SPS became a basic problem. The increased
requirements on SP8 parameters and device packaging density, and the need for
raising the manufacturesbility and reducing the labor intensiveness in manufactur-
ing power supplies required substantial improvement in power supply characteristics
at the stage of developing the second phase of the Unified System.

At the same time, the structure of the power supply system adopted for the Unified
System had notable advantages: standard interface and modular principle of design
based on the developed unified series of unified power supplies (UBP) permitted
development and putting into production power supply system for all hardware
within a short term.

The design and introduction into large series production of unified power supplies
indicated that that was the only way to enable development of the required quantity
of SPS, install them in the various Unified ﬁsts!- hardwere and achieve high
quality with minimal outlays;

The modular structure of the functionally complete units with an autonomous systr"
for protection and control is a characteristic feature of the design for power
supply systems for the Unified System of Computers. Use of it made it possible to:

organize large series production of the units used in all Unified System hardware;
enable centralized development and high quality fo the units;

employ joint packaging of power supplies and electronic units in the unified base
design for various types of hardware;

reduce the labor intensiveness for development of Unified System hardware; and
continually improve and modernize power supplies irrespective of the development
and production of Unified System hardware.

Considering the advantages of the power supply system used in the first phase of
the Unified System of Computers, listed above, this structure was kept when the
power supply systems and units were developed for "Series-2" hardware.

The main task in developing power supplies for second-phase Unified System hardware
was to reduce the size of the power supply systmn and increase specific output
power of SPS two-three fold compared to that for the first-phase unified power
supplies, noise immunity and efficiency factor. The latter is necessary primarily
to ensure normal heat conditions under the conditions of increasing specific out-
put power while keeping the previous structures and to save energy while power
consunption is increasing continually in the national economy.

A unified series of unified secondary power supplies was developed and introduced
into series production for second-phase Unified System hardware. ‘lhsse units meet
the requirements formulated above and are built on the basis of high-voltage key
regulators on the high-voltage side with application of high-frequency power
semiconductor instruments manufactured domestically.

The unified nomenclature of the unified secondary power supplies and the modular

compatibility of them with the basic designs of all Unified System hardware have
enabled their wide application in devices used for various purposes.

21:
FOR OFFICIAL use ONLY
FOR(HHNC1AI.USE(MVLY

._.__._____._____._._._._ aﬂﬁum

   
  

EBB Banana-unann-
EUE EHEHEHEHEU
EEBEEE

. . . a .un can a: <m= «an:

eunuch-s began-cu cc. moan-unanc.§4:Ouuoo~ooun¢
cu undouuuoo—o uo sedu¢~smou can cauouuaeadmeocuaaou new

nodulu590l
gueuauo-nan
gnu: uouuo>cu
odn~u¢uouocuuu
o~o~ouo~ncum

 

Azusmv down-naval
Auvatno-uaa.:UaI
cucuoaoccuu
gnu: nouuo>¢u
o~n¢~u¢>

hams“
wmuamnxuOEnzcuh

non-uswou ocuu
unnuso gun?
Aneuouanuu conga

co cocoau
80‘ 0‘00.“

vo-ouucoo

nouuusuou

aged usauso
can: nouuo>cu
vouquuouocauu
caacuu¢>

.Illllllllllllll
uuaouao . .I. «mummummu

caducuauou
$6! 60d0h0>§8

Aooquaan no: . c uncandco u AV
ha <nu new sea—nan. nexus unaccoun-

3383 2.2.8.: uo 3:28:92 4 2.3.
aqua-Egan:— Hgn

=======. mmﬁm
======= umﬂ

__=__________ g%

======= uﬂH _
__. ..__________ mmw.
stIs 2. List of uni‘isd secondsry pews: supplies (UVIP)

  
  
 
     

     

   

 

- (4) 0- nu»
1.91%.... use- .. :1;
_ "0:2. 2::

EC-1'200I3001

20 ISA no 0 20 I 2.0 0.0
20 400 Isa-120010000 m 0 200 2 I2.0 II.2
2n IOOA 0012001qu In JO 000 0 I2.0 II.I
24000 ammo/00m I/I0 I.0 00 I II.2 I2.0
0000 BOW!!! I/I0 2.0 00 I 20.0 I0.0
240000 so I0 I12 I0 000 0 10.0 I0.1
00 18A some/0002 m 0 20 I 22.1 2.0
00400 50120010004 m 0 000 a 20.I 20.0
0020A 50120010002 I/2 II.0 100 a 00.4 20.0
0.2000 50120013000 I/0 0 I40 I 20.0 I0.0
0.20400 00720013000 I14 0 000 a 22.2 20.0
0.20000 :c-mo/sooI I/2 II.0 100 0 20.4 00.0
0.38“ EC-WBOI? I/I0 I.0 00 I I0.8 11.5
12810M scam/How I14 0 I10 I I0.o I0
I2.0021I ammo/w: I/I0 I.0 00 I I4.0 I4.0
I2.002oA ammo/son - 1/2 10 400 a In 20.2
I000A sown/Hm I14 2 I10 I I2.0 II.0
2002A ammo/son I/I0 I.0 00 I 20.0 22.2
200 4A 00120013024 II: 5 I” I 24.2 I0.0
200 NA coma/0000 1/2 20 000 0 20.2 I0.0
21020 50.1200/00Io I/I0 I.0 00 I am 30.0
2102A sc-‘r2oo/00I0 I/I0 I.0 00 I 0I.1 00.0
21000 sown/0020 I10 0 I20 I 24.0 I0.0
$0? SEMI-[004 VI; I00 % ? £0 3':
00qu acme/12002 I/2 - - 0 40.0 40.0

l'sospmue pump-I ma tssosos nuns 8638M. II:

(10) IMXI‘IOXZIS:
m— I12xI10x2Ia;
I/0—09xI10x2I0;
I/I0-44xI10x2I0.

povsr supply typo, B . Volts, A - laps, (, - .)

nodsl mnbsr, SC-Yss, r-r, B-V, ll-N

dtnsnstonsl share of sundsrd Untftsd Sysm psnsl
night, kg (9 . 0)

pom: consumption, Imus

tssd 11m, nunbsr of phssss

speciﬁc povsr '

"Id.3 (, O s)

"/k‘f (, . s)

dnsnstons of slurs of stsndsrd Untftsd Systsn psnsl, I-
rust urn-tutu. var. UNIJ

There is a trend to using SPS with transformsrlass input in both domestic and
foreign development of computer hardware power supplies. Thble 1 shows the applic-
ability of the different principles for electrical conversion and regulation in SPS
for computer hardware and other radioelectronic apparatus. Analysis of scientific,
technical and patent literature indicates that the majority of foreign firms tend

to use the method of pulse-width voltage regulation; in the process, used as output
stages are transistor bridge and half-bridge variable inverters with transformsrlass
input. In a number of cases, single-cycle converters and line voltage regulators
have been found to be more efficient for SP8 with output power of less than 100“.

Table 2 lists the unified secondary power supplies developed and put into large
series production. Characteristics of the unified power supplies and unified
secondary power supplies [8P8] are:

UPS SP8.
Total instability, 1 5 3:9
Retention of output voltage, microsec. 0.131 10:30
Efficiency factor, I 353§0 65
Specific output power, H/dm3 10012 303ﬁ0
W 1.031.135 0.55

From this information, it can be seen that with the design of the SPS, specific
output power was increased two to threefold, amount of total instability of output
voltage was reduced 1.5-fold and the efficiency factor was raised 1.3-2 fold which
permitted keeping the total heat release within the supply casing.

The basic indicators of the key SP3 with transformerless input, used in the central
part of the computers, in specific indicators are similar to the SPS of the
socialist countries.

It is interesting to compare the basic specific indicators for the power supply
systems and units for the first and second phases of Unified System hardware. The
first-phase system was built on the base of unified power supplies (USP) with trans-
former input, devaloped by using linear and combined principles for converting the
electricity. The most powerful unit in this series, the USP 5V/60A, was designed
according to the structural scheme with a variable thyristor inverter with trans-
formsrlass input and 1 kHz conversion frequency. Introduction in Unified System
power supply systems of 03? series units afforded their electrical and structural
compatibility with Unified System hardware; in the process, the ratio of power sup-
ply size to total computer device size was 0.5 to 0.7.

Using modern methods of high-frequency conversion and pulse regulation of electri-
city in power supplies for the second phase of the Unified System of Computers per-
mitted reducing the size taken up by the power supply to 0.3-0.5 of the total size
of the electronic equipment. Thus, for example. the power supply for the Yes-1060
computer processor with 05? type units (thyristor inverter with 1 kHz conversion
frequency) took up 2.5 standard racks; switching to the SPS permitted placing the

corresponding power supply system in just one rack. Thus, the change from US? to
the more economical and smaller SPS with transformsrlass input and conversion of

electricity at the increased switching frequency of 20 kHz permitted reducing the

28
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

corresponding size of the power supply system two to threefold. This made it pos-
sible to place the electronic portion of the hardware and power supply units in one
cabinet and to meet the requirement on electromagnetic end structural compatibility
between the power supplies end Unified System computer hardware. The increased
requirements for electromagnetic compatibility were met, including through intro-
duction of motor-generators in the computers. -

Structurelly, UVIP [unified secondary power supplies] are units (see photo) with a
width equal to a main panel. The height end depth of ell units are identical. The
maximum dimensions of these SP5 correspond to the dimensions of a half panel, end
the minimum to 1/16 of a panel. Placed on the front panel are controls for the
continuously adjustable level of output voltage, for switching to the mode of pre-
ventive change in the levels of output voltage by z§1 of the rated value. and a
warning light. The unit rear panel hes a connection for the control and protection
circuits, a connection for input of the main supply voltage, end an output for the
feedback end output voltage circuits for low-power sources. Sources with dimen-
sions of 1/6 and 1/2 of a panel have special terminals to feed the output voltage.

 

Generel view of the unified secondary power supply

898 built by using high-frequency conversion end pulse regulation on the high vol-
tags side (300-600V) with pulse regulators and voltage converters are promising for
further development of the Unified System of Computers. In designing future power
supply systems and units, consideration should be given to a 10-15 fold increase in
the next five to seven years of the density of packaging of logic elements in third
and fourth generation Unified System hardware built with matrix LSI circuits and
LSI storage. This trend has to be considered in the design of 3P8 and power supply
systems to ensure their electrical and technological design compatibility with the

29
FOIKOFFTCIAL USII(MVLY
POI U'IILIAI. UDI'. UNI-V

electronice of the proceeeing devicee. In the proceee, edvence development of the
elenent beee ie becoming e topicel queetion. The deeign of this beee Inuet be
developed under e col-on plen coordineted elong the countriee thet perticipete in
the egreeoent on development of the Unified Syeten of Conputere.

Achieving epecific indicetore of 120-150 is» required for the neer future end in-
' dn

creeeing the efficiency fector to 0.75-0.8 prinerily involve developing e highly
efficient power eleoent beee:

treneietore with working voltege to 1-l.5kV, evitching currents to 10A, threehold
frequenciee of 10-20 Kl: end turn-off tine of 0.25-0.5 nicroeecond;

verieble thyrietore with turn-off time of 1-3 licroeeconde;

rectifier Schottky diode: with working currente of 30-100A;

electrol tic cepecitore vith high indicetore for epecific electricel energy

(5-50 % for conpecitore with working voltege to 16V); end
do
integreted circuite for 525 control end protection circuite.

Ueing methods of high-frequency convereion end pulee reguletion of electricity end
development of e new element beee will ellov creetion of highly efficient power
eupply eyetene for future conputere in the Unified Syeten beeed on SP8 vith puls
reguletore end high-frequency convertere of uein eupply voltege with
trenefornerleee input.

COPYRIGRT: Izdetel'etvo "Finensy i etetietike". 1981

8565
C80: 8164 [0138

30
FOIOF‘FICIALUSEONLY
FOR OFFICIAL USE ONLY

DATA PREPMION UNIT DEVEIDPHBNT IN 3015“!“

Hoscov VYCﬁISLI‘l'EL'NAYA mum SOTSIALISIICHBSKIKH STEAK in 30001” No 9, 1981
(signed to press 21 Hay 81) pp 28-32

[Article by ‘1'. A. Topalov, candidate of engineering science, (People's Republic of
Bulgarian

[Text] Bulgarian specialisation in external magnetic media storage units allows
Bulgarian specialists to solve a number of problems involving the design and pro-
duation of data preparation uni is (UPD) [DPU] using magnetic media. In doiu so,
ample: engineering problems have to be solved: development of electric motors
vith special characteristics, magnetic heads, contactlass switching elements,
methods of magnetic recording and others. Also, davelopent of DPU's requires the
optimal solution to a nuabnr of problems characterizing the "operator-device"
medium-computer” system, for ample, choosing the media for data preparation and
entry to a computer systan. ‘

‘lhe BPU's developed and manufactured in Bulgaria use standard magnetic tape with a
width of 12.7 I, recording density of 32 bits/III and a floppy disk with a diameter
of 203 In. ‘lhe kayoto-tape units developed earlier than others have-adequate ca-
pacity and fine quality and are produced in the socialist countries. lhay are com-
patible with computer external storage units. The floppy disk is compact and re-
liable. Kay-to-disk units are characterised by random access and using them is
promising for mini and microcomputer systems.

Used in developing DPU's is the experience of optimising the data preparation pro-
cess gained over many years of operation of key punch units, since the new DPU's
must be sufficiently close in a systems sense to the key punch units. Otherwise.
the new units would not be applied in the data processing process already estab-
lished.

The first kay-to-tapa unit developed in Bulgaria was the Yes-9002. Compared to key
punch units, work efficiency is raised considerably by the high speed of software
and manual control of the data format input or verified from the keyboard, charac-
ter display of current intonation, quiet operation of the unit and simple selection
of the mode or function. The Ye8~9002 gives the user the capability of achieving
high economic indicators because of its high reliability, longer amortization time,
tine-saving computer entry operations. verification of data file preparation (which
requires special devices with paper media), and the capability of reusing tapas.
Produced over several years. the Yes-9002 is in successful use in a masher of

MMCPAlllJSIOMY
FOR OFFICIAL USE ONLY

countries. Hodificstions heve been mede to this unit, for exeeple, the
Yes-9002.02 cen print out infatuation from ngnetic tepe.

The Yes-9006 is en updeted version fo the Ye8-9002; it hes substentielly inproved
functionel, design end opereting cherecteristics. It hes e current dete block dis-
pley, besed on s CRT with television scen or the "Blektronike “.100" end “Yunost'
603" consumer television receivers. This unit is very flexible with respect to the
cherecter set end recording density; for example, it is eesy to modify the Yes-9006
for e recording density of 8 or 22 bits/en. The user hes the option of heving the
unit equipped with the functions for modqu 10 sum, modqu 11 sum end totel sue of
ell fields.

The use in the Yes-9004 of circuits with en increesed scsle of integretion, connec-
tors with improved cherecteristics end s more successful design for the tepe drive
permits e substentiel increese in the indicetor for meen time between feilures.
The unit hes e deteched keyboerd end smeller dimensions end weight. The cepebility
of connecting e number of 10 devices extends significently its sphere of spplice-
tion.

The Yes-9006 hes these nodificetions:

the Yes-9006.02, with output to the Yes-7187 printer;

the Yes-9006.03, with input from the 120T 6001 cerd reedsr;

the Yes-9006.06, with e modem for dete exchenge over telephone lines;
the Yes-900mm, with input from s perforeted tepe render;

the Yes-900mm, with output to perforeted tepe; end

the Yes-9006.07, with floppy disk storege.

The following teble comperes the Yes-9002, Yes-9004 end the HDS Dete Record 6401
used in cepitslist countries.

The devices operete in these modes: dete entry, verificetion end retrievel; pro-
gres entry end verificetion; end buffer storege input, verificetion end reedout.

 

 

Peremeter HDS 6401 Yes-9002 Yes-9004
buffer storege ferrite integrsted integreted
element bese discrete 10's 10's
displey bit cherecter block
tepe drive pressure 1 roller 1 roller
roller

recording method m1 _ m1 NR2].
density, bit/tie 32 32 8, 22, 32
tempereture renge, 'C 10-38 5-40 5-40
weight, kg 122 66 48
dimensions, sen 7910x763x1092 582x641x583 1.813396%”
dete velidity, bits -- 107 1.08
HTBF, hours -- 500 1000

FOR omciﬁl. USE ONLY
FOR OFFICIAL USE ONLY

In recent yeere, e cooplex of DPU'e ueing floppy dieke hee been developed end ie
being eeeinileted in Bulgerie. Teete on the Sit-6910 key-to-floppy diek unit heve
been eucceeefully concluded. Prototype eeriee of the Yes-9112.01 key-to-floppy
diek unit end the Yes-9113 floppy-tootepe converter ie being coapleted. All theee
unite ere built with microproceeeor circuite ee the element beee. They ere noduler
end heve e coIIIon externel ehepe.

The 88-6901 includee e reck with keyboerd, electronic unit end power eupply, cebinet
with two floppy disk etorege unite end power supply, end e video monitor.

814-6901 cherecterietice:

element beee LSI circuite
ISO conpetible yee
program 10 7
dete velidity 10
ms. houre 500

weight, kg 133

‘lhe Ski-6901 perforce the following functione: entry, proceeeing, checking. retriev-
el by eddreee, retrievel by content end end of dete; initielizetion; count of totel

M check eun; copying of content of floppy, file, epecific block; operetion with
chein of progrene; etetietice of operetor work.

The Yes-9112 .01 differs from the Ski-6901 only by the codee of the cherectere in the
DKOI [deciml interchenge code]. Dete prepered on the Yes-9112.01 end Ski-6901
unite cen be entered into e computer directly front e Yes-5057 unit for Unified Sye-
ten computers end froa externel floppy diek etorege unite for the Syeteu of anell
Conputere.

The Yes-9113 converter cen perform ell the functione provided by the Ski-6901 end
Yes-9112.01 unite end e number of edditionel onee:

finding e tepe work;

finding en end of file on tepe;

retrievel by content on tepe;

movement of tepe forwerd;

movement of tepe beckwerd;

copy from floppy to tepe;

copy from tepe to floppy;

copy from floppy to tepe on e specific condition;
copy from tepe to floppy on e epecific condition;
key-to-tepe recording; end

deletion of dete blocke on tepe.

The Yes-9113 includee e reck with keyboerd. electronic unit end power eupply.

cebinet with two Yes-5074 mm [floppy diek etorege unite], cebinet with Ski-5300
Mil. [negnetic tepe etorege unit] end e video monitor.

The uee of microprogren control in theee unite end externel etorege unite with ren-
dom ecceee leede ue to expect e further increeee in operetor productivity conpered
to that obteined with the Yes-9002 end Yes-9004 unite.

33
FOR OFFICIAL USE ONLY
rust UH'ILIAI. USE ONLY

The res-9003 multiconsole key-to-tapa system handles the complex problems involving
data preparation and entry of files into a computers. Use of e generalopurpoae
microprocessor in the system determines the implementation of a set of complex func-
tions. The Yes-9003 system is built with the following hardware:

120? 310 CPU (32K 12-bit words storage);
SH-SbOO/Ol "MD [magnetic disk storage unit] (6! byte capacity, 1500 rev/min);

8H-5300 NHL [Hagentic tape storage unit] (recording speed is 32 cm/s, density is
32 bits/nae, method is m1);

120? 0232 operator console;

Yes-7186 mosaic serial printer (rate: 180 cps, 132 char/line);

Yes-0101 keyboard (16 keys); and

video monitor with display of 128 characters (6 lines of 32 characters each).

However, the high cost of the system units make it noncompetitive with standalone
buffer storage units in configurations using less 8 to 10 consoles.

Studies have shown that operator productivity is increased from 40 to 120 percent
when these units are used, compared to key punch operations, and data preparation
expenses, which account for 30 to 50 percent of total computer operating cost, are
substantially reduced.

Irrespective of the fact that on-line processing is more promising, data preparation
in the batch mode will predominate in a number of cases. Naturally, for this it is
necessary to continually raise the technical and economic indicators of the hardware
employed. Efforts are underway in Bulgaria primarily in two directions: optimiza-
tion of the operator-device interface by expanding functional, editing and proces-
sing capsbilities and by improving operating characteristics, especially hardware
reliability. by searching for new design and engineering solutions.

COPYRIGHT: Izdatel'stvo "Pinansy 1 otatiatika", 1981

8565
080: 8166/0138

3h
l-‘OR omcw. use onur
FOIOFI'ICIALUSEONLY

YES-1045 COMPUTER, WRIS‘I'IC mucus

Noecov WCHISLmL'NAYA mm WMISTIW STEM in Rueeien lie 9, 1931
(eigned to pron 21 Hey 81) pp 32-61

[Article by A. ‘1‘. Kuchukyen, ‘1'. Ye. Serkieyen end I. B. lkrunyen, ell cendidetee
of engineering ecience (0883)]

[Text] The Yes-1045 ie e generel-purpoee conputer with nod-in throughput deeigncd
to eolve e broed renge of ecientific, technicel, econonic, iniornetionel end logic

gunmen. .

The logic structure of the 2.5.1045 neete the require-onto iepoeed on the logic
etrucmre of the eecond pheee of the Unified Syeten of Go-putere.

The Yes-1065 conputer herdvere i'e noduler which ellove e ueer to deeign epecielized
coleputer eyeteee correeponding to the wrpoee of the eyeten being creeted to the
higheet extent without eeking eny chengee to nechine etructure end deeign.

1.3.1045 couputer herdvere cen be cleeeified ee etenderd, pert of my eyoten con-
figuretion, end optionel, delivered upon cuetoner requeet.

Yes-1065 etenderd fecilitiee ere:

fecilitiee for proceoeing in the beeic end extended control nodee;
the Unified Syeten univereel inetruction eet;

dynelic eddreee treneletion [DAT];

indirect dete eddreeeing in chennel;

inetruction execution retry;

nonitor iecilitiee;

progr-e event recording [Pm-3

feet Bit-byte butter etorege;

byte-mitiplexer chennel 0; end

block-nultiplexer chennele 1 end 2.

Yes-1M5 optionel fecilitiee ere:

f loeting-point ine tructione;

direct control fecilitiee;

fecilitiee for orgenizing e duel proceeeor eyetel;

block-nultiplexer chennele 3, lo end 5;

e eecond byte-multiplexer chennel (replecee block-nultiplexer chennel k);

monatlnouu
I'UK UH'ILIAI. USE ONLY

one or two channel-to-channal adapters;
logic repeater; and
configuration panel.

The basic set of the Yes-1045 computer is placed in three standard Uhified System
racks (processor and 10 channels, main storage and power supply). The channel-to-
channel adapters and-logic repeater are placed in the same racks.

In the res-1005 computer, CPU control is hardware-microprogram with a machine step
of 120 ns. Yes-1045 throughput using a Gibson mix for scientific and technical

problems reaches 880, 000 operations/second; for economic problems using a GPO mix
it is 540, 000 operations/second.

The CPU includes a microprogram control unit (BHU). instruction fetch and interrup-
tion servicing unit (BVK) and operations unit (30).

The microprogram control unit is designed to control CPU and 10 channel operation
by means of microprograms stored in control storage (UP). Machine control storage
is made with bipolar trarsistors and consists of two parts: permanent control
storage (UPP) and loadable control storage (UPZ).

Permanent control storage (addresses with the ranges of 0-6 and 7-8! words) is
designed for storage of CPU and 10 channel control microprograms; loadable control
storage (addresses 6-7K words) holds microprogarms for console operations and diag-
nostic microprogrems. loadable control storage can also be used to introduce
special operations in solving specific user problems on the YeS-lOkS. Micropro-
grems are loaded from the ML-kS magentic tape cassette storage console unit.

The instruction fetch and interruption servicing unit is designed to prefetch,
store and partially decode instructions, fetch operands and service interruptions.
The version adopted in the YeS-IObS computer processor is an instruction fetch unit
with buffering which enables overlap of instruction fetching from the instruction
buffer storage (BPK) or main storage with execution of instructions in the CPU.

Instruction buffer storage is made with integrated circuits and has a capacity of
32 8-byte words. It is designed to hold 66 words of instructions, prefetched from
main storage. with the capability of their rapid fetching and moving into the CPU
to fill three instruction buffer registers. These registers are filled after the
contents of two of them are used. Instruction fetch time with this scheme is
actually determined by the transfer from one buffer register to another. Because
of this and the availability of the instruction buffer storage, instruction fetch
efficiency is appreciably enhanced since practically the majority of problems make
use of blocks of instructions with cyclic repetition within these blocks.

The operations unit consists of four- and one-byte data paths; it is designed to
execute a broad set of arithmetic and logic operations used in the Unified System.
A special high-speed processor-accelerator is provided in the operations unit to
speed up execution of certain "long“ arithmetic and logic operations. Executed in
the accelerator are all multiply operations (except extended), binary-decimal trans-
lations, packing and unpacking, all primary shift operations, and some move and
store operations, 25 operations in all. Thanks to incorporation of the accelerator
in the operations unit structure, CPU throughput increased an average of 15-17 per-
cent while equipment bulk increased only 5-6 percent.

36
Ft!!!)FFIC1A1.lﬂ§E10hﬂJY
FOR OFﬂCIAL USE ONtY

The main storage control unit (BUOP) organizes data exchange between the CPU, IO
channels, array processor and main storage; provides for rapid access of frequently
used data and instructions from the appropriate blocks of buffer storage without
referencing main storage; converts virtual addresses into real; determines and
signals violations of storage protection; and organizes a common extent of main
storage of two computers in a dual processor system.

Buffer storage (3P) with a capacity of 8192 bytes is made with integrated circuits
with data access time equal to a CPU step. The entire l6-byte block of date is
kept in buffer storage when the CPU references main storage for some part of this
block. Thanks to the algorithm used to fill buffer storage, the probability of
finding the next operand in the buffer is about 75 percent, which reduces the
average time for fetching data used most often by the CPU.

Virtual addresses are translated into real by using the special apparatus, the
dynamic address translation facility (DPA) and the corresponding segment and page
tables. This process is speeded up (intermediate references to main storage are
excluded) by the translation-lookaside buffer (BBP), where the reel addresses are
written for the pages last referenced. Fetching a real address from the translation-
lookaside buffer [TLB] does not lengthen the main storage reference operation.
Provided in the YeS-lObS computer is the capability of eimulateneous storage in the
TLB of the results of translation for three blocks of virtual storage, which allows
avoiding a complete purge of the TLB when a program is replaced. The DAT hardware
facilities provide the capability of using up to 16" bytes of virtual storage.

The main storage adapter provides the interface between the main storage control
unit and main storage, directly controls main storage operation in the read or
write modes, and detects errors when data is read from main storage by using the
modified Hamming code checking apparatus. Single errors are corrected by using the
correction circuits; corrected date is sent from the adapter to the data exchange
control unit. in the process. the data in main storage is not corrected.

Storage protection facilities provide protection of individual zones of main stor-
age from unauthorized access. The protection mechanism provides protection in the
store mode alone, and during both the store and read modes. A ZOQB-byte block is
the protected unit in main storage. The main hardware protection facility used is
the high-speed storage with a capacity to 4096 bytes, which provides protection to
a maximum of 8H bytes of main storage.

There are two types of channels in the res-1045 computer: byte-multiplexer (BTHK)
that can operate in the byte-multiplexer and burst modes; and block-multiplexer
(BLHK) that can operate in the block-multiplexer and selector modes. The 10 chan-
nels in the Yes-1045 are controlled by the combined hardware-microprogram method.
Data is exchanged through the 10 interface under control of channel hardware facil-
ities concurrently with CPU operation. Date exchaneg between 10 channels and main
storage and processing of control information are performed by CPU facilities under
microprogram control. IO channels share control storage apparatus with the CPU.
During operation of 10 channels under microprogram control, execution of the cur-
rent instruction in the CPU is halted, and the HP [array processor] facilities and
other CPU facilities are made available to the IO channel. When several 10 channels
request microprogram service as the same time, service is given based on the hard-

were priority scheme.

37
FIMICHﬁﬂ(JAl.USE(NNLY
FOR OFFICIAL USE ONLY

Control words of the active subchannels for all six 10 channels are stored in a
section of local CPU storage with a 66-word capacity; each channel is allocated

8 words. The last 16R-byte area of main storage is used to store control words for
passive subchannels. Up to 10 devices at a distance up to 60 m can be connected
physically to each channel. A logic repeater is made part of the machine to extend
the distance or number of devices connectable through the 10 interface. Throughput
of each byte-multiplexer channel is 47! bytes/sec in the multiplexer mode end up to
110K bytes/sec in the burst mode. Without considering data chaining, block-multi-
plexer channel throughput ranges from 0.5M to 1.5“ bytes/sec as a function of the
number of them. Total throughput of all 10 channels is 5H bytes/sec.

The res-1045 computer has a highly develoepd checking and diagnostic system. The
main components of this complex of facilities are hardware-microprogram recovery of
179 instructions when random failures occur, microdiagnostics that enable checking
all computer facilities in the static and dynamic modes, central checking and mea-
surement of power supply, and automatic preventive checking and diagnostics of
faulty integrated circuits in TEZ's [standard exchange cards]. '

Yes-104$ computer recovery facilities enable continuation of computer operation when
single errors occur in main storage, bypassing the consequences of failures in the
CPU and channels through hardware-microprogram retry of operations, and recovery f
the operating system with the aid of software facilities.

The Yes-1045 computer can also operate with a reduced amount of buffer storage
when a part of it fails.

when the check circuits detect a machine error, control synchropulses are blocked,
i.e. execution of instructions at all levels of overlap is terminated, and hardware
logging of computer status is performed in the control console storage (PPU) with a
capacity of 512 bytes. Hardware logging in the control console storage is performed
during the first and eighth retry attempts. Control console storage allows pre-
serving the computer.status at the time of the malfunction when servicing of inter-
ruptions from the check circuits is suspended, and the sufficiently large capacity
of it provides the capability of having information on the status of practically all
machine flipflops and registers. After hardware logging is completed, CPU and chan-
nel registers are purged, the possibility of retry of the interrupted operation is
analyzed. The retry method depends on the type of operation, computer status at the
tune fo the error and the type of error.

Checking for change in initial data is provided for in microprograms of instructions.
when the data is changed, the microprogram branches to alternate execution of the
instruction. Preservation of initial data is provided for to recover computations
during a malfunction. The following facilities are used for this in the YeS-lObSé

blocking of change of the first operand in 83 and RX format instructions upon an
error signal, which permits dispensing with storage of initial data;

storage of address of second operand in work area of local storage and recovery of
it during retry, which permits dispensing with storage of base register contents;
storage of the changed part of the first operand with subsequent recovery of it
during failure in decimal arithmetic instructions;

storage of the count of successfully processed bytes in RR format logic instruc-
tions with continuation of processing upon failure with retry of processing of one
byte;

FOR AI.USE(NVLY
IINIOFFNJAI.USE(NVLY

checkpoints in microprograms of certain instructions, thanks to which upon retry,
the successfully executed part of the instruction is not repeated.

In the Yes-1065 computer, hardware-microprogram recovery of IO instructions is pos-
sible to a certain threshold, determined by the start of communication with s de-
vice through the interface. If the threshold of hardware-microprogrem retry of an
10 instruction is passed, an 10 interruption is executed and the usual and expanded
status word containing the data specifying the location and condition of the error
is stored. After this, recovery is performed at the program level by using the

CC“ and 382 programs. The CO“ program at the same time generates a record in the
log file.

In the Yes-106$ computer channels, retry of channel cealmnds is also provided for
at the request of a device equipped with the special facilities for issuing this
request to a channel. Thanks to this, when an error occurs in a device during
execution of a chain of conmmnds, the channel supports reissue of the last
command upon request from the device.

Hardware diagnostic facilities include the service adapter and the HL-bs console
storage unit. The service adapter enables finding and reading of data from the
console storage unit, accumulation of date, decoding of diagnostic operations,
execution of microdiagnostics and comparison of computer status withte reference
standard. To simplify the loading path, data from the console storage unit goes to
the service adapter in series code and after its translation into parallel goes to
the CPU circuits. This small amount of hardware fecilities_for the diagnostic unit
(seven TEZ's [standard exchange cards] for the service adapter and five for the
electronic part of the HL-AS) substantially increases the operational reliability
and repairsbility of the YeS-thS computer. Tb check the hardware part of the com-
puter, the service adapter makes use of data paths and microoperations that exist
in the computer.

Yes-1045 computer diagnostics consist of three stages.

At the first stage of the microdiegnostics, control of the halted CPU is monopolized
by the service adapter. The CPU executes individual microoperstions upon orders
from the service adapter. To poll computer status, the service adapter uses data
serialized with the aid of a multiplexer, i.e. data on the status of computer regis-
ters and flipflops in the form of a serial stream of bits. Each data byte in the
serial strems has its own address and during the mlcrodiegnostic procedure is
fetched from the general stream to the data register in the control console; signals
output from here go to the circuit for comparison with the reference value kept in
the diagnostic register in the service adapter.

The standard procedure in first-stage microdiagnostics includes:

loading of a microinstruction from the console storage unit into the data register
in control storage and execution of it. Test sets are defined by the specifying
field of the microlnstruction. Executed in this mode are the microinstructions
needed to check the functions of the assembly being tested;

reading from the PNK [expansion unknown] of the address of the register (in the
general stream of serialized data, the content of which is compared with the stan-
derd, end the reference standard itself;

3
FOR OFFICIA9L USE ONLY
rust UH'ICIAI. USE ONLY

comparison of the result with the reference standard in the comparison circuit
SBRAD [expansion unknown];

halts with display of the halt number on the control console lights. The halt num-
ber is used to locate the comments in the microdiagnostic printouts that contain
the identification of the improperly functioning flipflop, list of faulty TEZ's
[standard exchange cards] and recommendations for locating the malfunction.

In the error halt status, service personnel can obtain additional information on
the system indication.

Comparison of the low-order bits of the address of control storage with the
reference is provided for to check the microopsrations of analyses in the diagnostic
apparatus. This permits identifying the microopsrations of analyses of modification
of control storage address bits that enable branching according to the various com-
puter states. First-stage microdiagnostics also check the facilities for manual
control fo the Yes-1065 console by simulating actions of keys and switches. Con-
venient facilities for test cycling and microinstructions in the microdiagnostic
test are provided to facilitate finding malfunctions in the diagnostic unit.

Checked in the first stage of microdiagnostics are all hardware facilities of the
CPU, channels, storage control, some fo the storage units. console typewriter er
channel-to-channel adapter. Apparatus is checked in microoperations at the rate
specified by the rate of reading of data from the console storsgn unit, which simu-
lates the "rapid" step mode more closely than the actual machine rate of executing
microoperationa. Therefore, tests in the first-stage microdiagnostics cannot

identify some errors associated with the timing diagram of operation of computer
units.

Second-stage microdiagnostics, making use of loadable control storage checked in
the first stage. identify errors associated with the timing diagram. In this stage.
microdiagnostics are performed under control of the computer itself at the actual
machine rate the following way:

a diagnostic microprogram is input to control loadable storage from the console
storage unit and receives control after loading;

the diagnostic microprogram checks computer assemblies in the diagnostic mode, i.e.
at the actual machine rate; after storage of the check results, control is returned
to the service adapter for analysis of the check results by comapring them to the
reference standard under control of the service adapter.

The set of microdiagnostic state is fixed and designed for the maximum configuration.
The type of channel connected under a specific number or its availability in the

system is determined by microdiagnostics by polling the special facilities of the
channel that store this information. Hhsn some channel is not used in a system,
the microdiagnostic tests for this channel are automatically skipped. The amount
of main storage in its microdiagnostics is determined by the condition of the '
invalid address that enables checking the amount of storage that is available in

the system. Increasing the amount of storage with such organization of the micro-
diagnostics.does not require changing it.

The first two stages of microdiagnostics permit checking and localizing a malfunc-
tion in the res-1045 computer hardware facilities, including all storage devices.

ho
m 0mm us: on“
FOR OFFICIAL USE ONLY

The third stage of computer diagnostics is performed by using the facilities of
functional (software) diagnostics. Ihe purpose of this stage is to check and detect
improperly functioning system facilities: the system of instructions for external
devices, external device control units and concurrent operation of devices. the
Yes-1065 computer functional diagnostic facilities are teh basic test, the set of
test-sections executed under control of the diagnostic monitor, and the set of
autonomous diagnsotic tests. Checking the functional facilities of the system
begins with a check of the nucleus of the instruction system by using the basic
test. Fardware facilities in the diagnostic unit permit loading the basic tait into
main storage from the console storage unit. The basic test checks the group of CSU
instructions, 10 instructions and the paths for communication with the standard

external devices-tape drives and the typewriter. Further checking of system func-

tional ﬁacilities is performed in the test-sections of the xrro [maintenance program
complex . '

Computer operating experience indicates that localization of failures in the power
supply system and fans, places of excess heat, and preventive checking of the volt-
age of secondary power supplies, the number of which is several dozens, require
considerable time. lb obtain the required parameters of operating reliability in
the Yes-1065 computer, there is a system for checking and diagnosing power supplies
which performs the following functions:

automatic checking and measurement of output voltages from power supplies;
automatic and manual setting of preventive levels of power supply voltages (UVIP);
localization'of the place and type of emergency malfunctions, such as hot spots,

fan failures and power control unit (SUP) failure with audible and light warning
signals.

In measuring voltages output from UVIP [unified secondary power supplies - USPS],
the measuring switch connects the outlet of the selected USPS to an analog-to-

digital converter of a digital voltmeter; information from this goes to a comparison
circuit.

Hhen USPS voltage deviates beyond tolerances, a signal is generated that goes to
the display.

Preventive five-per-cent levels of USPS voltages are set either automatically
through the lZ-channel interface from the diagnostic unit or maunually from the sys-
tem console. The USPS address goes to the decoder; after decoding it controls the
switches for the preventive check, to the input of which also comus the condition

of the level of :ﬁi.

An audible alarm signal is generated and the address of the malfunction is displayed
when overheating occurs, fans stop or the power control unit malfunctions.

A basic problem in operating computers with incomplete ZIP [kit of spare parts,
tools and accessories] is repair of faulty 122 [standard exchange cards - SEC].
Manufacturers have to set aside up to five percent of their capital, investing it
in ZIP's, and the cost of storing them in warehouses is rather high. Also, the
volume of repeated return of faulty SBC's has increased. It is estimated that
about 50 percent of the 530's is returned to the user without repair since no mal-
function is detected in them. It is cheaper to repair the SEC's on site. This is
possible with the Yes-1065 computer because of the availability of the integrated

lu
son omcm. use ONLY
fluttﬂﬂﬂtlAL USII(”§LY

autotester, diagnostic tests, references that are part of the operating documenta-
tion and the PET-l tester. The Yes-1065 computer autotester uses the facilities of
diagnostics and the console storage unit to test 886's. The advantages of the auto-
tester are its low cost (it has only three 836's), simplicity and convenience of
maintenance, detailed diagnostic documentation, quick recovery, low demands on the
classification of maintenance personnel and the capability of reducing ZIP's.

Trial operation of the YeSc1065 has indicated that the checking and diagnostic

facilities described above substantially raise computer operating efficiency and
may be recommended for application in other machines.

The y.s-1oas computer structure allows setting up dual processor and multimachine
systems. Dual processor systems are established on the basis of a common extent of
main (up to 8M bytes) and external storage for both processors and peripherals
operating under the control of a single operating system. A special configuration

panel combined with the appropriate‘equipment provides the capability of controlling
the modes and configuration of the duel processor system.

Hultimachine systems are set up by complexing at the channel level by using the
channel-to-channel adapter, direct control facilities, a common extent of external

storage and common peripherals; each computer operates under control of its own
operating system.

The array processor (HP) is an option for the Yes-1045. It is a specialized compu-
ter connected to the res-1065 computer as the seventh channel. It is used to pro-
cess numeric series encountered in problems where repeated operations have to be

performed on a group of data (series, arrays), thereby relieving tah load on the
CPU.

The array processor is organized for parallel processing of data in the CPU and
array processor. It has three units: control, arithmetic and microprogram control.
As a conveyor, the array processor executes arithmetic operations according to the
expression a - y 3 vx. Vector operations, spectra correlations, complex multipli-
cation and fast Fourier transforms are performed in the array processor. Its basic
cycle is 155 ns and it is fitted in'a standard Unified System rack.

The array processor is used by s set of access method programs that expand the
capabilities of Yes 08.

The high throughput of the computer complex made up of the Yes-1065 and the array
processor permits a substantial increase in the efficiency of solving problems on
pattern recognition, processing of geophysical data, etc.

COPYRIGHT: Izdatel'stvo "Finansy i statistika", 1981

8565
CSO: 8144/0138

1:2
F0! omcuu. use ONLY
FOR OFFICIAL USE ONLY

VIDBUNN FAMILY OF WELLICINT W810 TERMINALS

macaw WCBISLITKL'NAYA mm SOTSMLISTICHZSKM SM in N001“! No 9, 1981
(eigned to preee 21 May 81) pp 61-67

[Article by L. Nylee, G. liudoba and J. Bornealiaeu, all engineere from the
Bungarian People'e Republic]

[Text] Producta from the Videoton conuter hardware plant, which hae a decade of
emrience in manufacturing computer hardware, are in great denand among both
lyngarian and foreign epecialiete. The popularity and wide dietribution of Video-
til devicea ie due not only to their technical parametere, but alao to high quality
and fine eathetic and hman engineering characterietice. An ample of the reaulte
achieved by Videoton ie the family of intelligent alpham-eric tarminale baeed on
nicroproceeeore .

Hicroproceeeora were developed to eimplify date proceeeing and control hardware,
increaae ite reliability and reduce coat while raiaing functional flexibility at
the came time. Hicroproceaeor throughput approachee that of early emall conputere.
Howaver, to uae the. ae computera requiree expending Iain etorage, connecting
external etorage unite, providing facilitiee for interruption proceeaing, etc.

Hicroproceeeor ayetem aoftware development ie proceeding in two directionex firat,
microproceeeor eoftware ia being developed on ao-called 8081' nachinea, and auxili-
ary eoftware for development, euch ea Aeeembler and Simulator, ie run on thie ma-
chine; aecond, microproceaaore are being made capable of aoftware devlopment.
Videoton choee the latter path.

In 1976, microproceeeora began to be ueed at the plant in data tranelnieeion and
proceaeing eyetena. The no 56100 unit with microproceeeor control dependent on a
built-in program wee developed at that time and ueed ae a eynchronoue or aaynchro-
noue terminal. From a functional point of view, the moat advanced model in the

V'l's 56100 terminal line is the office video terminal with two external atorage cae-
eettea. It can be progrenned by the uaer, ueed in large eyetena, providee exteneive
offline functione for data baee naintenance, etoring and editing; beceuee of thie,
thie unit ie recouended primarily for uae in the noninduetrial ephere.

In 1976, development began on two, eeeentially new diepley faniliea which then went
into aeriee production. The development waa baaed on the experience gained in the
development, production and uae of the well-known V1 360 diepley (Yes-7168 and
Ski-7206), as well aa the m $6100 microproceeaor fully of video taminala, and

10
FOR OFFICIAL USE ONLY
NR OFFICIAL USE ONLY

with regard to the requirements and capabilities specified by the Unified System
and System of aall Computers programs.

The one family is built with basic devices with small power consusption, made with
highly reliable LSI circuits and they provide great functional flexibility and
broad capabilities. The early devices in this family are the 88-7219 terminals
(which passed international tests within the framework of the System of ball Oom-
putere in 1977), the res-neon terminals and improved Yes-7168 terminals.

Devices in the other family are terminal stations: intelligent alphanueric video
terminals with a set of external devices, easily prograunable by the user in

Assembler or a high-level language. lwo devices in this family have been approved
at the international level: the Sid-71001 which has a built-in minicassette storage
unit (which passed joint tests within the framework of the System of hell Compu-
ters in 1978), and the VI 20 equipped with large disk storage. These devices meet
world standards in reliability and functional capabilities in their category.

A measure of the intelligence of these progratanable tarmianls based on microproces-
sora is the sggregate of these capabilities:

expanded random access storage that enables loading and running of various user
programs;

connection of high-capacity external storage units, forexample, Ml. [tape drives].
noun [floppy disk units] and MD [disk] with permanent or replaceable disks that
support processing of data files;

connection of paper-tape 10 devices to maintain compatibility with older systems;
connection of serial or parallel printers; and

connection of various parallel and serial data transmission channels.

The capability of connecting external devices to an intelligent alphanusric termi-
ml is shown in the block diagram (fig. 1). Naturally, all connection capabilities
cannot be used at the same time in one device; besides arrangement problems, this

would cause a shortage in the time resource for the central unit. However, through

suitable selection, one can build a configuration most suited to a specific applica-
tion. .

Providing the circuit capabilities listed above and others still does not make a
machine intelligent: without an efficient software system, all this would rmnain
just a possibility.

The basic unit in a Videoton intelligent alphanumeric terminal is a microprocessor
minicomputer structurally integrated with an image generation system. Let us list
the components of the block diagram of the device (see fig. 1) and their character-
istics.

Central processor: byte processing of data
instruction execution time of 2-9 microseconds
seven internal registers
interruption processing
three internal timers
storage, expandable to 61.! bytes.

141;
FOR OFFICIAL USE ONLY
“W £2 2.».
y~5 5§

”WM' cu m...“ (3) mm Ea ﬁ-

Hicroprocoe “’33:: ““”’"’"." B Q

(6)

 

(7) Aayrcmmuumi ud- uwd u can mmu

mm! m wumuv m mow: Mud: Ml “mfms. ‘-
uu‘uxmn All!" MA "I MINI-I‘m neummu
Z ‘ I

O ,_ (13)
. e' .
W ' . . E
O O
- :32), not m5}32,.,,.,,; (18)
"It": ‘92,! Eu. 2 Manta“, rig" and unit
I I (17) napalm-nu

Fig. 1. Coneolideted block diuren of {any or intelligent ephemmeric video

teminele

Key:
1. eynchromue/eeynchronoue node- " 11. ninicueette tepe interfece
2. eynchronoue/eeynchronouo lntertece 12. cm [floppy disk] interfece
3. keyboerd interface unit 13. pepertepe 10 interfece
6. 20V 20 nicroenp intertece 16. CRT monitor
5. cluster control unit interface 15. diet: taxi-u of lo a: I: + 5H bytee,
6. perellel intertece 6 x 2.5 «t 2.5!! bytee
7. tvo-vey to end etorege hue" 16. linicueette tepe etoroge.
8. inge control 2 3,100! bytee
9. printer interfece 17. floppy dieke
10. diek- interface 18. pepertepe Io

Dieplcy: 10 x 12 dot matrix

2 x 6!. elphemneric cherectere

66 opeciol eynbole, for exelple droning of linee
Greek letters etc.

ecreen cepecity 25 x 80 or 26 x 80 chcrecten
field and line inese orgenizetion.

1.5
mmusaomr
FOR OFFICIAL USE ONLY

Koyboard: atandard typowritor otyla arrongomont
ooparato numoric koypad for data procoooing problama
function koyo
uppor and lowor coco
automatic ropoat of choractoro
andiblo oignola.

Data tronomiooion lino: oynchronouo or aoynchronoua

intorfaco according to roco-aondation 24 of tho mm
[Intornotional Tolophono and Tolograph Consultativo
Omittoo] or a cnrront loop of 20‘? 20aa (82, 131’s)

cluator control unit on ooynchronouo lino

maxim rota witho arial data tranomiooion io 9600 bond
with tho capability of progrc-ing

parallol intarfoco

progrmablo procooa for data tranoniooion and orror
protaction.

IO davicoo: parallol or ooriol matrix printor
card roador
card punchor

Extornol nagnotic
otoraga unita: two minicaooottoo with capacity of 2 3: 100K bytoo
two floppy dioka with capacity of 2 x 250R bytao
roplocoablo dioko with capacity of 5 + SH bytoo or
2.5 + 2.5!! bytoo.

Extarnal magnatic otoraga unita can to optionally connoctod to tho baaic dovico.

Operating Syotom. Tho intolligont alphanuoric vidoo torminal (PAV) and tho VT 20
unit can ho uood firot of all oo otandolono unito oaaily prograI-ahlo by tho uoar.
Tho diffaronca botwoon than io that the PM! hoo two builtoin minicaoootto topo
otoraga unito. whilo tho VT 20 oporataa with 10“ bytoo of diak otoraga. Tharaforo,
tho oparating oyotomo for thou dovicoo diffor oomowhat bocauao tho VT 20 mot uoko
officiont uao of tho advantagao and capabilitioo offorrod by dioko. Tho gonoral
ochomo of tho ooftworo ayotan (SPO) io ohown in fig. 2. Amoro dotailod gonorol
plan of tho oyaton io ohown in fig. 3.

The basic ooftworo for tho programabla dovicoo hoo tho following programo:

rooidant program. The programablo road-only moory (PPZU) [PROM] contains the
pormonant program that aoaumoo control automatically when tho dovico ia ovitchod on.
It perform tho initial odjuotnont and providoo tho capability of loading and otart-
ing programo writtan on magnotic tape or diak;

nonitoro. Tho dovico hoo throo monitor programo. Tho firot dobuga programo and
corrocto arroro; tho oacond hoo functiono of programing in tho PROM; and tho third
can control toot program. Tho programo pot-nit loading and otartup of program of
voriouo formato, changing otoraga contanto. printing otoraga contonto, output of
otoraga contonta on data aodim in loadablo format, and funtiono of programing tho
PROM; ' -
programing longuagoo. Tho Aooonblor tranolator tranalatoo programs written in
Moublor and indicatoo ayntoctic orroro. It worko in two paoooa, providing thoroby
uoa of pootdofinition lobalo;

116
FOR OFFICIAL USE ONLY
I‘OIOFFICIALUSEONLY

    
    

[Wulmﬂlul
autumn:

Pig. 2. General achaoe of aoftvare ayetan

Kay: .
l. organizer program 3. programing languagee
2. aervice program It. preventive program

    
  
 
    
 

 

( I. 2 Curmu-

am
mun-W

momma uo
unumu n
“mm (Mu

Fig. 3. General plan of ayaten

Key:
1. editing and correction of eource a. 10 control ayate-
uterial S. caaaette (diek) atorage
2. other aervice and preventive 6. data traneuieaion line
prograu

3. dieplay control

baaic interpreter providea the capability oi running prograna vrittan in Baeic.
lha interpreter ueee optional circuit capabilitiee of the device. Alao, the
inetructiou set ie expanded by operationa on operationa on character atringa;
editing and correction of eource uterial ie uaad to create alphanumeric filee
that are recorded on magnetic tape or dick by aeana ot the keyboard or diaplay

ecrean and to change eource alphamneric filer;
10 Control. The VT 20 operating eyatea with tile aharing enablea execution of

h? .
mmuaomr ‘
I'VA vrrauanu use. unu

of logical control of external devicoe;

preventive prograle. ‘l'hooo include the teat progrcae that check all device unite
and the toot monitor that controlo than;
other program. he device hoe m-eroue program need to oolve Problem often

encountered in practice. The loot important of the: la the data file‘aanagooont
eyotala on dial: that vaa developed for office ayotuae.

The efficient operating ayoten, maeeroua uoer program and flexible echellatic
design, the intelligence of the device, enable uoo of theae dovicea in all eectora

of econouica, atarting with devicea for data tranaoiaaion and procoaaing to
deoktop conputora.

Recouended Areaa of Application. In query applicationo, the device furniahea the
operator rapid ocean to data bank filoo kept on diak. The device can be uaod to
update filea and for inquiries in teh interactive mode.

In data writing applicatione, the video terainal replacoa traditional unite. for
ample a card puncher, and can be used to update source files and etore data in

the onlino or offline node, making uae of the advantagoa offered by the display and
external negontic atorago unite.

COPYRmH‘l‘: Izdatel'etvo "Yinanoy i etatiotika", 1981

8545
680: 8164/0138

FOIOFFICIALUSEONLY
FOR OFFICIAL USE ONLY

YES-2335 ARRAY PROCESSOR FOR YES-1035 mm srsnu

PbocOIl WCHISLITEL'NAYA MIRA SOTSIALISTICHISKM mum in Russian No 9, 1981
(signed to press 21 May 81) pp 67-50

[Article by G. P. Niholov and V. D. Lazarov, candidates of engineering science,
and P..P. Dashalov, Y. V. Ivanova and K. D. Kirov, scientific associates, all
from the People's Republic of Bulgaria]

{Text} Constantly growing is the number of users of computer hardware for perform-
ing rapid and efficient digital processing of large files of data represented in
the form of arrays or vectors. Processing of such data files is required in ssimsic
exploration (geophysics, searching for oil, ges and mineral resources); in studies
of turbulence (meteorology, ocsanology, aerodynamics); in radiolocation and proces-
sing of results of photography for enhancement and processing of images; in space
exploration (telemetry, trajectory control); in research in nuclear physics; in
matrix arithmetic; in mathematical statistics; for solving differential equations
and digital processing of signals.

however, modern general-purpose computers, despite the continuous increase in speed,
are not capable of meeting the requirements of throughput and system computing
capacity for these types of problems. Execution of repeated aritl'mletic operations
on elements of large files of data is practically unrealizable. Thus, it is
necessary to develop specialized computer facilities to solve these problems.

There are several ways of developing efficient array computers. (he of them, in
our opinion the most successful at the current stage of development fo the Unified
System of Computers, has been implemented in the Yes-2335 array processor (HP). It
was shown in 1979 at the exposition entitled "Facilities of the Unified System of

Computers and the asall System of Computers and their Application." let us consi-
der some characteristics of this processor.

‘Ihe Yes-2335 model-dependent specialized peripheral processor performs high-speed
calculetions within the Ye8-1035 computer system. Processing in the array processor
is parallel and independent of that in the Yes-2635 CPU.

The Yes-2335 connects to the Yes-2635 CPU through a specialized adapter that re-

places a selector channel in the CPU. The adapter and array processor are linked
by a specialized IO interface.

h9
roe omcm us: ONLY
ruse urn-stares. UM UNIJ

From the system aspect, the array processor and adapter can be considered a complex
IO unit combining the functions of a channel, control unit and external device.
This complex is controlled by using the same system of control words used in the
Unified System IO system (10 instructions, KSK [expansion unknown], USU [unit con-
trol word], 58K [channel status word]) and the 10 interruption mechanism.

Date processed in the array processor are represented in one of the following for-
mats used in the Unified System of Computers: fixed point, direct code, short for-
mat; fixed point, two's complement code, short format; floating point, short format.
Array processor operations can be divided into the following groups:

a) vector move operations: data are moved from one area of main storage to another
with execution, if indicated, of format translation (from fixed to floating point,
or vice versa);

b) matrix arithmetic operations: scalar multiplication, element-by-element vector
multiplication, element-by-element sum of vectors, sum of vector elements, partial
matrix multiplication, sum of squares of elements and square of matrix with sign; ,

c) matrix scanning (to determine value and position of minimum or mathum element);
d) complex multiplication;
e) solving difference equations;

f) signal processing operations: convolution of addition, convolution of multipli-
cation, fast Fourier transform;

g) quadratic interpolation.

The array processor has the following assemblies and units:

unit for communication and fetching of operands; it effects communication with the
adapter and yes-2635 CPU, processes addresses of operands and control words and
fetches operands;

arithmetic unit; it executes conevyor arithmetic processing of floating point
nunbers ;

buffer storage; it holds operands, intermediate and final results 1nd performs the_
functions of a buffer between the inetrface and arithmetic unit;

control storage; it holds microprograms for the operation of the communication and
arithmetic unite;

microprogram control unit.

The basic parameters of the Yes-2335 are:

machine cycle 200 ms
throughput 5 million operations/sec (multiplication
and addition)
throughput of interface between adapter
and array processor 3.5M bytes/sec
throughput of arithmetic unit 20! bytes/sec
buffer size 2 x 32 words
control storage size 2K words (of 96 bits each)
50

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

maxim operand size 64,000 elements

element base ”-1.2 and 3

structure one cabinet with two frues
power consumption 1 W

The basic software for the Yes-2335 array processor consists of methods of access
(mm) and the resident module. It is implemented in the Assembler language with
use of the capabilities of the macrolanguage and conditional assembly statements.
The access method is activated by a user program in the scam, Assembler or PLI1
languages by using the CALL statement having the specified format. The resident
module enables processing of SVC interruptions with a code specifically for the
array processor.

The access method has the following parts: control phase, syntactic analyzer,
channel program designer, dispatcher for queue of orders [rakes], issuing of mes-
sages and processing of interruptions.

in addition to the basic, the array processor sofus' e also' includes a signal pro-
cessing program system. It is a package of subroutines that are used in the analy-
sis of various types of signals in digital form. The package contains subroutines
that syntheisize filters by specified criteria for their characteristics, and sub-
routines that help evaluate the efficiency of the filters.

The lack of sufficient experience and the acceptpd technique of evaluating through-
put of systems with the use of array processors prevent determining the efficiency
of their application and fixing the class of problems in which this application is
most expedient. To derive approximate estimates of the increase in system through-
put, experiments were conducted in which the same specially selected examples of
data processing were executed on a Yes-1035 computer with and without use of the
“8-235 array processor. They confirmed the preliminary estimates that by using
the array processor, throughput is raised by one-two orders.

Results of one experiment are as follows. In average-size seismic route was
divided into 2000 quanta. The array processor was used for certain basic proces-
sings such as deconvolution before and after smiling, filtration before and after
summing, and use of a fan~shaped filter for 10 percent of the data. In this case,
processing time -by the CPU decreased by 65.6 s for the route. kmual processing
of 300,000 26-channel recordings by using the array processor takes about 4,000
hours. Consequently, 135,000 hours are required for a system without the array
processor, i.e. throughput is increased 36-fold.

COPYRIGHT: lsdatel'stvo "Finansy i statistika", 1981

8545
CSO: 8164/0138

FOR OFFICIAL USE ONLY
run WI’ILIAL use ONLY

SYSTEM FOR DESIGN OF APPLICATION PROGRAM PACKAGES FOR CALENDAR-SUBJECT PLANNIM
AND WWW! FOR UNIFIED SYSTEM COMPUTERS

Moscow WCHISLITBL'NAYA mum SOTSIALISl‘ICHBSKnm 82mm in hssian No 9, 1981
(signed to press 21 May 81) pp 51-57

[Article by V. A. Hatulis, candidate of physical and mathematical science, and
A. A. Chaplinskas, engineer, both from the USSR]

[Text] The "Vil'nyus" system for design of application program packages (PPP) f
calendar-subject planning and management of developent work is based on systems of
network models for a multilevel automated system for planning and management of a
machine-building industry [1]. The problems solved within this automated system
form a unified complex of problems; therefore, they must be correlated with each
other. Correlation is provided by the informational, organizational-methodological
and program-mathematical compatibility of the problems. Also provided for is the
use of uniform indicators, a unified system of classification and coding of techni-
cal and economic information and unification of reports output. Taken into ac-
count are the presence of information exchange between the individual complexes of
problems and the intarcorrelation of problems being developed (structure of plans,
indicators, objects and processes of planning, resources, organizational structure

and others). The system is based on principles close to those used in program
generators for process control [2].

The "Vil'nyus" system is parmnetric [3]; its nucleus unites procedures that imple-
ment input languages and data base management for the given class. In constructing

PPP, in the system input language, the user describes the package input language,
the data base structure end other parameters.

The basic concepts of the "Vil'nyus" system and its implementation methods are
discussed in more detail in [6, 5]..

Requirements for Packages in the Given Class. Studies have shown that 91’? for
calendar-subject planning must include:

a nonprocedural input language that permits formulating the aims of the design in
the form of a specification for deriving a certain set of output docueents;
facilities for automatic planning and implementation of the plan for solving
problems; .

facilities for automatic adjustment of the plan for solving problems as a function
of results of intermediate calculations;

facilities for input of initial data that provide the capability of punching data

52
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

directly from user working documents;

data base indicators that permit determining the current status of each of the
data segments; and

facilities for building a temporary working model of the planned object that
allows keeping in the computer undeleted complete information on the plan through-
out the entire plan period and permits making test calculations to determine the

consequences of some plan adjustment before its official approval or multivariant
calculations in drafting a plan. for a new period.

The PPP must provide the capability:

of several related PPP using a canon data base; problem modules must be indepen-
dent of the data base structure;

of seguenting data in a data base (by subjects, subdivisions, etc.) and arranging
detya within a segment in the form of a heirarchicsl sequence of records;

of specifying a model of the subject in the form of a network that has several
initial and objective events and permits directive restrictions on the time periods
for completion of any specified events;

of including in the model'linear operations or specifying them in the form of a
linear graph; and

of automatic adjustment to the computer configuration and parameters that reflect
the specific nature of specific user problems.

In addition to what is listed above, there are a number of other aspects that
effect mainly the content of the library of problem modules and its functional
capabilities. “they are not considered in this work since they are not essential
in defining the basic concepts of the system part of a PPP.

System Composition and Structure. The system includes the monitor, the set of
problem-oriented subroutines and macro instructions, data base management programs,
library of system tables, library of problem modules and the language for
describing the structure of the PPP for generation facilities.

Internal control of tasks and jobs is performed by the monitor.

The monitor, one of the main components of the nucleus, performs decoding of tasks,
forms the plan for solving a problem, checks the authority of the user, implements
the plan for solving a problem, checks the informational provisioning of the com-
puting process, adjusts the plan for solving a problem and manages the listing of
its solution.

The "Vil'nyus" system has a modular structure of three levels. Subroutines and
macro instructions make up the lowest level of the problma modules. In essence,

they form a certain macro language used to progr- modules in the next level, the
macro blocks. Macro blocks are problml modules defined in terms of algoritl'lu for
solving problems in the subject field in question. Only modules of the highest '
level can be described in terms of the subject field itself; these are processors
that are organized sets of macro blocks.

The scheme of the potentially permitted calculations of any PPP for the class in
question is represented in the form of a sequence, ordered with respect to the time

axis, of segments that are described by oriented acyclic graphs with one terminal
and one initial vertex. Some processor is set to correspond to each sequent, and

53

roe omcm. use any
tiﬂltuﬂﬂCJAl.US£¢DNLN

some mecro block is competed with eech of the vertices (except the initiel end
terminel) of the oriented greph. The ercs define the potentially permissible
order of execution of the mscro blocks. The processors ere described by tebles
thst specify the topology of the oriented greph, esteblish the method of mepping

the set of its vertices in the problem module librsry end determine the input end
output processor dets flow.

The dets bese menegement programs provide for loeding end updeting of s dets bese,

creeting e working model for test celculstione, internel trensletion of dets end
output of results [6].

Problem modules do not heve direct eccess to e dets bese. They operete with work-
ing sets of processor dets formed by the fecilities for internel trensletion of
the dets prior to execution of the process. After its execution, the results of
the cslculstions ere moved from the work sets to the dete bese by using the seme
fecilities. Formstion of work sets end recording of results ere effected upon
monitor requests issued in eccordence with the plen for solving the problem end
the description-of the processor dets flow. The description of the dets bese
structure and work set structure is kept in the form of speciel system tebles,
which ere used elso in printing out the results, considered es one of the types of
internel trensletion of dets. stles describing petterns of punching the source
documents ere optionelly used in dets input end updete. -

The problem of losding end updeting e dets bese is considersbly more compliceted
then thet of internel trensletion of dets. This is due in perticuler to the fsct
thet the correspondence between source documents end dets structures being gener-
eted cennot be estsblished by using epriori descriptions, but must be defined by
softwere. Input end updste progrems ere orgsnized es en independent processor
included in any peckege being designed. The tesks for this rpocessor elso include
file management, operetion with unconfirmed updetes end formetion of e working
model used to conduct test celculetions.

Operetion of the monitor end dets bese msnsgement progerms is controlled by system
tebles; the mein ones sre the cetelog of metro blocks, cetelog of processors,
requisite description tsble, file description tsble, punch psttern description
tsble, teble of messeges end input lenguege description teble.

Seversl interecting PPP mey be built on the ssme copy of the nucleus. Eech of them
mey have its own input lenguege, scheme of potentielly permissible celculstions end
dets structures end conduct e protocol for solving e problem in its own terminology.
Consequently, eech of the pecksges hes its own corresponding set of system tebles.
All sets ere orgenized into e common librery. The pecksges operete by using the
common librery of problem modules. However, eech peckege hes its own procedure

for sterting the monitor end operetes under control of the set of system tebles
determined by this procedure.

Formstion of system tebles is one of the mein steges in designing PPP by using the
"Vil'nyus" system. This stege is completely eutometed. A speciel lengusge hes
been crested for this purpose [4, 6] thet permits the developer to describe in e
convenient wsy the peckege input lenguege, dets bese, pstterns for punching the
source documents, processors, texts of messeges to be issued end the celendsr
(number of work deys in e week, method of determining work Seturdeys, units of

5h

FOR‘OFFKJA1.USE(MVLY
I-‘OIl OFFICIAL USE ONLY

meesurement of the time intervel, etc.). The system tebles ere genereted eccord-
ing to these descriptions by using softwere fecilities included in the nucleus.

To describe the peckege structure, one hes to know well the principles for design-
ing the structure end functioning of e PPP, upon which the "Vil'nyus" system is
besed. No knowledge of the internel design of the system itself is required.

The generetion fecilities ere intended for sdjusting e system to e specific compu-
ter configuretion end specific neture of user problems. for this purpose. the
epperetus of ceteloged procedures end fecilities of the mecro seemsbler ere used.
computer peremeters end problem peremeters ere described by using the generetion
form. A speciel progru, opersting directly under control of Yes 08, sxemines the
procedures end mecro instructions, ed justs them eccording to the vslues of thd
peremeters specified in the form, performs trensletion of the system end crestes
the dete sets needed. A working version of the syst- is genereted es e result“

Problem Modules. To cover the functions of the problem eree in question, in the
euthors' view, the librery of problem modules must contein modules for celculetion
of time cherecteristics of the network end loed of the executives end modules for

belencing the plen by time, cost end other indicetors, distribution of resources,
formetion of plen indicetore end expeditious control.

Development of modules of these clesses for themechine building sector is s com-
plex end leborious tesk. Stenderd nodules only for celculetion of time cherec-

teristics heve been included in the problem module librery of the "Vil'nyue" sys-
tem. They ere oriented to models of subjects with e cepecity up to 16,000 opers-
tions; meximum number of subjects is 999. Lineer operstions ere elso ellowed in
the models elong with network. A network mey hevs en erbitrery number of initiel
end objective events. Directive restrictions ere permitted on the term for con-
pletion of soy events in the network. The type of networks is "operetion-erc,"

The set of problem modules permits:
combining individuel fregments (subnetworks) into e canon network;

performing enelysis of e network es s whole or by fregements to detect structurel
errors end circuits;

celculeting time cherecteristics by using e mixed lineer-netvork model;

removing executed operstions end eutometicelly determining terms of initiel events
of en edjusted network eccording to report informetion;

isoleting from s network e subnetwork thet eneblss capletion of some set of
specified (check) events end celculeting the time cherecteristics of this subnetwork;
forming eccording to e specified set of indicetors in e specified profile output
documents on time cherecteristics of operetions, time cherecteristics of events

end executed operetions.

Detes of initiel or objective events in the network mey be used es the source in

celculeting time cherecteristics. Hschine-oriented elgorithms given in [7] were
used in designing the modules.

Designing l’eckeges. To design e peckege by using the "Vil'nyue" system, it is
necessery to generete s system thet tekes into eccount the computer configuretion
end the specified velues of the problem peremeters of the problems to be solved,

to write e procedure to stert the monitor, to describe the peckege structure in the
"Vil'nyus" system lenguegs, end to expend the librery of problem modules with the
required mecro blocks.

55

FOR OFFICIAL USE ONLY
rust ill-MUM. USE ONLY

In the case of expanding the subject erea with new concepts, it is necessary to
write additional subroutines for the meaning translation of data. Subroutines are
called during entry of data which describe the new concepts. To include the sub-
routines in the package, they must be described in the system input language.

System Use Experience. Let us cite two examples of using the system as an illus-
tration of system capabilities.

Example 1. A program package to generate on a computer a five-year subject plan
for development work in the sector. Thsi package is designed to formulate five-
year plane for development by the sector of technical complexes under the condi-
tions of the restriction on resources available to the organizations and enter-
prises and the amounts of state budget appropriations allocated to the sector as a
whole for development work. Taken into account in the process are the relative im-
portance of the development work being undertaken and the minimum permissible and

maximum possible rates of development of the individual technical complexes, their
parts and systems.

Included in the complex of problems for five-year subject planning of development
work in the sector are:

calculation of technical and economic indicators and generation of the initial
alternative for the five-year subject plan for sector development work;
optimization of the volume indicators and generation of an optimized five-year plan
for sector development work;

calculation of the development effort workload on organizations and enterprises;
generation of excerpts from the subject development plan by main directions, orga-

nizations and enterprises in the sector, and of subject plans-orders for
co-performing ministries.

The basis of the mathematical model of the planned object is the system of network
models of a special type with the specified structure of developments. The struc-
ture reflects on the one hand the development stages, and on the other, the
component elements of the technical complex being developed.

Example 2. A program package to generate a development subject plan for subdi-
visions of a KB (Nil) [design bureau (scientific research institute)] for a quarter.
This package is designed to generate quarterly plans that provide for performing
work on a subject by a subdivision. united by the feature of the direction of

research or functioning of items. The end product of any theme is a prototype.

The complex of problems for quarterly subject planning for a KB(NII)includes:

calculation of the technical and economic indicators and generation of a draft

plan for the quarter being planned;

generation of a report for the last quarter;

generation of a quarterly plan taking into account changes made to the draft by
management and information reports;

accumulation of information reports during the quarter and generation of plan
supplements at established frequencies.

The basis of the mathematical model for the planned object is the system of linear-
network models that defines the structure of the development, the structure of the

prototype being developed and the structure of the organizational and financial
links between the separate performing agencies.

56
ron omcw. us: ONLY
FOR OFFICIAL USE ONLY

Both packages were designed with the aid of the "Vil'nyus" system. In the first
package, two of the four processors, and in the second, two of the three proces-
sors were designed completely on the basis of the existing problem module library.
may effect entry of the initial data and calculation of the time characteristics
for the networks. Also developed for the five-year pelnning package were modules
that distribute resources and generate output docmnts, end for the quarterly
planning package, modules that perform calculation of the plan indicators and
generate output documents. In both cases, the system portion was completely
built with "Vil'nyus" system facilities.

System Technical Characteristics. The "Vil'nyus" system was developed for the
Unified System of Computers; it operates under control of the Yes 08 operating
systue with capabilities of at least that of version 4.1M"? without subtesks.
For systae operation, 100K bytes of main storage and about 7H bytes of disk
storage are required. Storage needed for execution of the PPP designed is a
function of the features of the package itself. “to resident pert of the system

in the process requires 4K bytes of main storage. The system nucleus is
progreeeeed in Assembler.

Prospects for ﬁstem Development. System use hes shown that the design stage
requires the greatest efforts. Design of a system according to a structure de-
signed in advance end modification of it are then performed relatively easily,
although insufficient universality of some tools hes been noted, in particulsr
the facilities for data base loading end update.

Further development of the "Vil'nyus" system is planned in the following directions:
development of new problem nodules for more complete functional coverage of the
subject area;

expansion of the capabilities of existing modules to offer the user a larger
spectrum of capabilities for. specification of networks (including introduction of
the "operation-arc" type network, use of analogs, standards, etc.);

expansion of the problem-oriented macro facilities by facilities based on the
concept of abstract types of date;

development of specialized facilities for generation of output documents;
development of interactive facilities for generating and optimizing network
models and step-hy-step improvment of plans.

B 131. 106 WHY

1. rm, 8 and lyugu, 3., "Development of Problem-Oriented Software,"
KIDSRNETIKA, No to, 1975, pp 76-85.

2. msstopf, C.; Orlowski, ll. and Team, 3., "Program Generators for Process Con-
trol Application," The 2nd UACIIPIP Symposium on Software for Computer Control,
SOCOCO '79, Preprints, Vol 1, General Computing Center of Czechoslovak Academy
of Sciences, Prague, IP-Ill, pp 142.

3. Red'ko, V and Yuzhenko, Ye., “Algoritleeic Languages and Translating Systems,"
KIBERNETIKA, No 5, 1967, pp 87-91.

a. Hstulis, V. and Qieplinskas, A., "Structure of Program Package for Calendar
Subject Planning System," in "Strukture i organizetsiya paketov priklednykh
program" [Structure and (kganizations of Application Program Packages],
Tbilisi, 1976, pp 117-119.

57
roe OFFICIAL use on“
5.

6.

7.

I'D“ UH'ICIAI. USE ONLY

Vaychyulio, 3.; Natalia, V.; Sinyuvono, R. and Chaplinokaa. A., "Son. Problem
in benigning Application Program Packagea," in "Avtonatizatoiya protaeuov

planirovaniya i upravleniya" [Attention of Planning and Mount Processes],
th'nyua, No 3, 1976, pp 9-67.

Tontikh, V.; Chaplinakao. A.; and Yuozavichuto. 6., "Organization of Data in

the 'Vil'nyua' Syntan," in "Intonation of Planning and Hanasannnt Procouu.
No 6, 1978. pp 11-26, Vil'nyua.

Vaychyulin, B. and Piatulia, V., "Coding and Machine Calculation of Time
Charactariotica of Largo Networks," lumen. TR. VYSSBIKE ucazsm ZAVEDENIY
LITOVSKOY 88!. AVTOHAIKIA I VYCRISLITEL'NAYA mm, 111, 1970, pp 225-236.

COPYRIGHT: Izdatol'otvo "Finanay i atatiatika", 1981

8545
080:

8144/0138

58
FOR OFFICIAL us: ONLY
FOR OFFICIAL USE ONLY

DIGITAL SW‘IION 0P commons PROCESSES ON UNIFIED 8Y8?!“ MUTE”

bbscow~ "CHISLITBL'NAYA TBKHNIIA SOTSIALISTIW' SM in Russian No 9, L931
(signed to press 21 my 81) pp 58-65

[Article by Ya. Yashembek, Master of Science, Polish People's Republic]

[Text] Modern programing languages and continuous process simulation systems are
used extensively'for scientific and industrial research. Digital simulation of the
aml processes yields more accurate results than analog. Therefore, many modern
”nasal-purpose computers are equipped with a special simulation apparatus. Until
My. lhified System computers had no special software for simulation, and the
ooh, capability was implementation of simulation algorithms in a high-level lang-
uage (FORTRAN. PLll). However. this requires a good knowledge of these languages
and much experience in programing.

The DIANA programing language along with tne well-known 68H? language fills this
gap in Unified Systen software operating under control of D08 or 08.

General Description of DIARA. DIANA is a problem-oriented language providing the
capability of digital simulation on Unified System computers with the Yes D08
operating system. It makes it possible to solve problems associated with simulation
of arbitrary systems described by differential equations or an analog block-diagram.

A general diagrma of the functioning of the DIANA language and simulation system
is shown in fig. 1.

A DIANA program is block-oriented, i.e. developed on the basis of a block diagru:
that represents a model of a reel system. has programer, by assigning to each
block in the diagram a, statement that defines the action of this block (integration,
delay) and a name that represents. the output signal of this block. can describe the
structure of a sync by using so-callad structural instructions. For ample,

the instruction Y - (INTEG X, X0.) executes integration of the equation

gi- - x(t) with the initial conditions of x(t - 0) s :0.

‘lhe set of structural instructions is used as the basis for defining the sequence
of calculations according to the corresponding algorithm. A DIANA program is made
up of several parts separated from each other by service records. The simulation
algorithm is placed between the PROGRAM and END records and can consist of three
“'0“: 101:1“. dynamic. terninath. initial area is a series of FORTRAN instruc-
tions bounded by the mum. and END records. 1n. instructions in this area are

59

FOR OFFICIAL USE ONLY
CW Ul'l'leL U3.— UNL'

executed prior to the start of the simulation process and are needed for calcula-

tions associated with the definition of values of parameters in the dynuaic area,
initial conditions and gain factors.

  
  
    

‘ mathematical
.—

twain C: '"m‘
b M “8N / lode].

DIANA

W m .

simulation
results

 

Fig. I. own syste- functional disgru-

‘Ihe dynuic area is bounded by the DWIC and EN!) records; it is a series of
instructions that describe the simulation process. This area contains the program
that executes calculations for one step of integration. At the start of the area,
the programer can define his on structural blocks by describing than as MACRO.

The teruinel area is a series of instructions bounded by the TERMINAL and END re-
cords; it is executed after completion of each computing cycle, i.e. a slice of
time, after which the progress can report results through an IO device. In this

area. the program» can change the parameters for a multiple pass of the program
or testing of certain conditions.

roams instructions may also be placed before the initial area and after the

terminal area to have then executed before and after, respectively. the simulation
process. Here is a general View of a DIANA program

FOR OFFICIAL USE ONLY
FOR OFFICIAL Uﬂ ONLY

hots. tho I]. aroa can also contain sub-
535%": P1... routinss in tho for. of 80330011»: or
. tummy. Tho 101 rocord is a sat of
- instructions that dotinos tho initial
PI IIETURN conditions. 18 is a sorios of structural
END inotructiona. 162 dotinoa tho toroinal
' ‘ conditions. 12 is s sorioo of instruc-
. tiona mcutod aftor caplstion of tho
”we mam 009m" . simulation procos's. 60 is a diroctivo
_ 9thor roam instructions that dotinos tho stort of tho simulation
' procsss.

INITIAL
ICI

END
DYNAMIC
MACRO

END

IS

END
TERMINAL
1C2

END

F2

GO

STOP DIANA

Structural Instructions. lho basic structural block used in DIANA programing is
tho mm intogratins block that has as the input variahlo tho nalo of. tho signal
subjoct to intogration and tho initial conditions, and as tho output variablo,

tho na-o of tho signal aItor tho integration oporation. Tho structural instruction

Y - mac (x, HP)
corrosponds to tho tor-Ila

Y(t)-WP +31 X(l)d!; ru-mawp.

‘us

In this formula. t donotos tho indopondont varishlo TIME. This structural stato-
nont has no argmonts and donotoa tins as an indopondont variablo during the simu-
lation process. Associated with tho mm autonont is tho M08111!!! diroctivo
that allovs_soloctins tho intogration nothod: oithor Adana fourth-ordor nothod or
tho Runso-Kutta iourth-ordor nothod. Tho Runo-Kutta nothod is standard.

In addition to tho intonation statonsnt, DIANA includos tho following functional
blocks:

DELAY dolay of intogration by a stop
8Y8? hystorosis (2 of people?)
DER differ-satiation block
381' RS-triuor
61

l-‘OIOFFICIALIBEONLY
FOR OFFICIAL USE ONLY

BLOCK iaolation block

RANDO‘H noiae generator

DSPLACB dead zone (inaenaitivity)

Lmrr limiter

I’G arbitrary function generator

AND operator for logical multiplication
NAND negation of logical multiplication
ION operator for logical an

NOD. negation of logical em

N01“ negation of aignal

COHPABB compariaon of eignala

BOR non-equivalence

EQUIV equivalence

Ml quantizer operator

SIN! generator of harmonic oecillatione
INS” input evitch

3cm functional witch

m ramp function

STEP atep function generator

In addition to theee functional hlocke, the DIANA language aleo pernita all
standard FORTRAN language functiona.

kanalation and Simulation haulta. During traneletion, a DIANA program is trena-
leted into a net of interrelated procedurea in the FORTRAN language that execute
the atructural inetructiona lieted in the program. Then proceaaing ia performed by
the PORTRAN trenalator and the emulation proceee ie executed. Upon completion of
the latter, reaulta are printed out in tabular or graphic form. The progre-er
obtains a table of valuee of varieblee ae a function of tine or a graph of a certain
variable aa a function of time. The phaeea of proceaaing of the aource program.
atarting with Job definition to obtaining einulation reaulta, are ahovn in fig. 2.

Let ue take the following problem ea an example.

Exanple. Let there be a ayeten of chemical reactions of the firet order, the con-
atenta of which are Kl and 12, respectively:

Aﬂagc

Let (A0) he the initial -value of factor A at tine t-O; let us aeam (no)-(c°}-O.

Than the eyeten of differential equation that representa theae reactiona tekaa the
fore:

4‘ a
"m" "(M/(4.): '

v-(va;
"(Q/(Ac)

denote the relative valuea of fectora A, I and c. reapectixely.

62
POI! O'HCIAL USE ONLY
FOR OFFICIAL USE ONLY

Key:

mam. l. proble- definition
"M a) - 2. aource prograe
3. DIANA tranelator
U FORTRAN tranelator
editor
m (2 executive routine
"WW! 6. mm library
'- s.‘ aimlation raaulte
luau-m
Octane
(6)

 

Fig. 2. Source program proceaaing phaaee

Analytic integration of thin ayatee yielda the aolution

rm uexp (—Kl-l);

um-E—E‘ﬁtuM-KLo-upc—Kmt»:'

arp (—K‘Z-t)‘.

 

-x2 K
""- K2.-Kl “""KMsz—xl

The DIANA prograe for tbie eeanple ie giant: in fig. 3. Figure 4 illustrates the
reeulta of ai-uLating thin problem for rector A. '

DIANA Sante- Operating Experience. The DIANA eyeten (or ainulatinn of continuous
proceaaea nae developed and in in uae at the Institute of Control Syateea in
Katowice Goliah People‘e Republic); it in alao in uae at the Inatitute of. Nethe-
eatical Machines! in Haraau. Syatee operating experience allows making acne con-
pariaone. The DIANA ainulatinn ayatae is aililar to the CSNPI360 ayatea. The the
for executing ainilar simulation algoritt-a and the accuracy of results obtained
are about identical. DIANA language functiona correapond to CS!!! language proper-
tiea, but the choices in nethod of calculating the corresponding functiona are
liaited. Thue. DIANA otfera tan eethoda of integration, the Adana and the Runge-
Kutta. In addition to theae, cm ottera the nathoda of Sinpaon, Milne, trapezoid:
and rectanglea. The nain advantage of the DIANA ayatan ia the capability of uaing
it nitb aaall computer configuratinne with 1283. hytea of atorage (eyeten size ia
about 108: hatea). Hora than 128: bytes of nain atorage and OS are needed for the

CSMP ayaten.

FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

OIOOIAI
InlflAL
c1ltllltlli-ll1)
CID-lelcaut-SII)
Ill

, DYIAIIC

' I'lll'-8I10x
IOIIttdtlonlu;uO)
IUCII'SI“l-SI2I1
r-lulI0(r'Iln;vo:
tthlntllttr
l¢int|0tztnlu:101
nou‘I-8nuollue
LD-ll'§ltil)
lost-~llzoltlt
R003'1:0;:001)
to Cl - I!

Fig. 3. DIANA “mutton progra- mum

li-OII‘C2-IP0310I033
In.
In)
Inlucc.°|
IIAI(I.OI
ll'I'(0.')
IIVIDS(1)

ALIOIIIlllll)
.AYAIIO'I..10'0..l.'9.ull"!..otl2.‘.0)

YI'LI(iII-h.l.:0ll7lltl Olocttv n°o(LOIA-IAI
Oil-1(|.|D.r.rv:x.x')
'I'.l.7(lrl'v7p7'vlv"’

00

6'0! Oltut

 

 

IN I "unnu- o.mom-u lull-um mmm ;:

. 0...“... l“3......nu.--..-.-...-.---.--..-..---------..-.---.....---.------..o
.1...“ u o nu I... u-----------..----.....o

0‘

00
0.010 N 00 It

00

00

    
    
  
   
  
 
 

-------..-—--ﬂ
-n—O

----.--~--~uo.-mm0
-~ -um-m.‘
-----o

    
     

 

 

 

o

9 0.1181,.

c 0.8133030'01 lco
1. 0.111112l-OI [-0
0-! 0.101100 1..
3." to
o-tt 0-18! I:
0.1! 0.1OOIIOI‘ It
0.8A IObOC-I! In
0-1’ 0 'll’II‘O! l-
0.30 0.9II'otl-Ot

0.11 ..0!|:'OC-OI

0.1. ..Io' I‘l-Ol

0.2! O-Iti’lOl-O!

0.100001 01 0.301900c-ot
0.3'tooc on c.30t90t¢-02
0.81000! 01 o.|oosvlt-oa
0.:30001 OI o.IJoottI-01
0.3soool o1 O.'IO)OOI‘08
0.8!0001 O1 0.9vIIO I'd!
I.!ooool 0' 0.70001 i-O!
0.5’0001 0| 0.0115t0I-os
0.10000: 0‘ o.Iooi)n¢-OI
0.10 on on o.~0010I(-o!
0.!!! ovt-oa
0.17. O1I-O)
0.! Ol.0!
0-! llll‘ol
0.!!Oiiﬂl‘0)
0.0!) ill-o:
0.001035l'ol
a.ltlloo¢-c.
0.011),!
0.!!Ao
0.01.01. on

21;. lo. Simulation results for factor A

 

 

   
 

0....oooooo'ooovupo-ooooto

 

6h
['03 omcw. us: ONLY
FOR OFFICIAL USE ONLY

The structural and dynamic capabilities of sinuluion with the DIANA language
are similar to the 6881. language. The simplicity and ease of learning the DIANA

language extend considerably the group of systa users.
thin characteristics of the language are:
simple and clear fern of expressions that describe the model;

simple set of statesents that allow description of the majority of dynamic prob-
lems represented by differential equations;

execution of a process for a group of changing parsneters;
automatic sorting of operations;

result output format that allows rapid judgnant of the properties of the modeled
system; and

the capability of supple-eating the language with new functional blocks in the
form of MACRO, as well as the use of roman functions and subroutines.

This programing language can he used in various fields of science and technology:
in scientific research experiments, design, for modeling operation.of designs and

devices, in industrial and economic planning to improve methods of organization
and production technology.

Operating experience confirms the great efficiency of the DIANA language and-

system in solving scientific and technical problem by the method of mathematical
nodels of the real. processes, continuous in time.

COPanl'l': lsdatel'styo "Finansy i statistika", 1981

.Bﬁs
080: 8164/0138

F0! oméit USE ONLY
FOR OFFICIAL USE ONLY

mum-031mm LANGUAGE FOR SYSTEM OF COMPUTER-AIDE!) DESIGN OF WFACTURIHG
PROCESSES OF MECHANICAL WING OP PARIS

Moscow WCBISLITBL'NAYA 1mm SOTSIALIS‘IICHBSW SM in Russian 80 9. 1981
(signed to press 21 May 81) pp 65-73

[Article by V. D. -‘rsvetkov, candidate of engineering science (USSR),
A. A. Tolkachev, candidate of engineering science (0883), and
I. Cher, engineer (Hungarian People's Republic”

[Text] Computers are being used ever more extensively in develOping automated sys-
tems for technological preparation of production. Used as source information for
such systems are the part drawing and manufacturing instructions. At the current
level of development of computer technology. the information contained in drawings
cannot be interpreted directly by a computer. Therefore. a basic problem in de-
veloping an automated system is the development of a formalised language to de-
scribe the source and intermediate information in a form convenient for input into
a computer, machine processing and output of design results in the form of
customary manufacturing documents.

There are a number of languages and methods of coding that permit description of
the design and manufacturing characteristics of a part, such as the uterial, mass,
dimensions, qualitative and quantitative parameters of the surfaces to be processed,
coordinates of their arrangement in space and others [1-6]. But methods for de-
scribing the function and structure of items and the manufacturing processes are
still inadequately developed. In contrast to existing systems for coding and the
problem-oriented languages, the suggested language contains advanced facilities for
describing not only the parameters of the surfaces and the part as a whole, but
also the shaping, dimensional and precision relationships of the elements of a part
of various levels of complexity. As algorithmic twelopmantal experience shows,

it is precisely these relationships that determine the choice of manufacturing
solutions.

The language is based on the methodology of the systems approach to constructing

the objects and processes of design. Any machine building part is considered a com-
plex part that in accordance with its structure can be broken don into a specified
number of simpler interrelated elements.

Surfaces to be machined are taken as the base structural elements of a part, since
they are directly related to the primary structural elements of the manufacturing
process, the steps: These surfaces are subdivided into three types:

66
FOR OFFICIAL USE ONLY
INJR 0F1ﬂ€1Al.|JSEZ(ﬂHLY

elementary (flat, cylindrical, conic and others);

type, consisting of frequently encountered combinations of several elementary sur-
faces and to be processed by a type tool (shoulders. slots, grooves and others);
normalized, the shape and dimensions of which are prescribed by corresponding
standards (center holes. slotted surfaces and others).

In accordance with this, the first level of formalised description is designed to
describeshapes,dimensions, precision of machining and the physicomechanical
properties of the surfaces listed above.

Description of the Basic Structural Elements of a Part (First Level). The majority
of surfaces on machine parts are kinematic, i.e. they can be derived by the motion
of a line (generatrix) in space according to a certain law (directrices). The
shape of the most widespread elementary. type and normalized surfaces will be
specified when there are given the axis of the surface 1. the directrices m and
the generatrices l of the line: 0 (i.m,l).

Various types of surfaces result from the great variety of shapes of generstrices
with a comparatively small number of laws of motion of these lines in space. In
connection with this, thh classification glossary of types of basic surfaces is
based on the following features: the law of motion in space of s directrix that
defines the class of surface (plane. surface of revolution, helical, etc.); the
shape of the directrix that establishes the subclass (plane, shoulder, slot, etc.)
and the type of surface (rectangular. angular, radius, etc. groove); structural
varieties of the surface by length (open, semi-open, closed) (figs. 1, 2). These
features determine the design and manufacturing peculiarities of surfaces and
affect to a considerable extent the choice of machining method and type of cutting
tool.

The description of the shape oi surfaces is a mnemonic designation consisting of
letters and numbers. The surface class and subclass is designated by a short title
in the Russian language, and the type and variety by numbers; for example, a rect-
angular slot with a Junction of lateral surfacesonsradius, semi-open in length is
a PAZl3; a cylindrical surface semi-open in length is a TsILl, etc. Internal sur-
faces are described with the symbol "-” (for example. a through cylindrical hole

is a deILl). This description of the shape of part surfaces is more graphic.
which accelerates learning the language and facilities use of it. In the process,
the complication of machine processing of information is negligible.

Describing dimensions of type and normalized surfaces has certain features due to
their shape being specified by generalised code in the language of the first level,
and not in the form of s set of elementary surfaces. In connection with this, it
is not possible to indicate elements in clear form, the distance between which is
specified by a particular dimension. To uniquely describe dimensions, in the
classification tables there are drawings with dimension conventions. Each parame-
ter of a surface is characterized by its type and numeric value (for example.
D850. L360, etc.).

In describing basic surfaces, a determinant is used that is the set of parameters
uniquely defining the shape 0. dimensions, finish of machining and deviation from
the proper geometric shape of the surface P and its physicomechanical properties c:

NI-|¢D,.P, C}.

67
FOR OFFICIAL USE ONLY

p...- u .
ODﬂNOUéwNP
I 0 C O I O 0 C C O C

FOR OFFICIAL USE ONLY

l : I WIRE]! Mum (1)i

(s) a) (a) (, ’
IEIIEEEEEE
_ l'

l, . i

Q EH ' l '1' 7‘
' H m" ml

' . .5: -..:! -.!.

_— I!

 

. Diagran of classification and coding for surfaces of. revolution

surfaces of revolution 12. hyperboloid (siper)
elementary 13. contoured (fason)
face groovee (bent) lb. rectangular
longitudinal grooves (kanp) ls. angular

face 16. radius

cylinder (tell) 1?. trapezoidal

cone 18. one-side trapezoidal
sphere 19. open

tome (convex) 20. uni-open
ellipsoid (ellips) 21. closed

paraholoid (parab) 22. transient

FOR Oil-“gal. USE ONLY
run UPI‘ILJRI. var. URL!

A developed structure is built by specification of features that describe the
surface paranetera.

Let us consider the description of parameters of sons surfaces on a part shown in
‘1‘. 33

l - menu [face], DB30/FASKA (chanferl, H33, F6456;

2 a ram [cylinder], 0330016), “LS/GAL! [fillet]. 135;

3 - ‘rORITsZ. 0340;

b - Tam, DMO (N/GALT, 8.310).

   

Fig. 3. Splined shaft (numbers in circles are surface numbers)

Description of the Part at the Second Level. Considered at the second level are
cosplex objects (parts or portions of then) formed by combination in space of basic
structural elensnts. This level is intended for description of

the shape of the part;

dinensional relationships between the basic structural ale-ants;

relative position of basic elements (parallelism, alignment and others) and the
nanufacturing require-ents for precision of their relative position (nonparall'alisn,
nonperpendicular'ity, wobble and others); and

general information on a pert or a portion of it at the given level of separation.

A part is considered specified in the rectangular systen of coordinates. the axes
of which run through the most characteristic elements of the part. for eocanple, for
parts of the "body of revolution“ type, the systes of coordinates is tud to one of
the end faces and the longitudinal axis of the part; for plane prisnatic parts, the
oyster: of coordinates is situated so that the entire part is placed in the first
quadrant; for parts with a couples configuration, the coordinate system is tied to
the structural bases of the part.

the "union" and "detach" operations are used to describe the shape of a part or
spearete portions of it at this level. the union operation for part elenents 01 and
Q2 is denoted by the symbol at and consists in the design of the note couples

object D. derived by joining these elenents: D-QIU‘Q,.

70
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

'rhe synbol i denotes the nature of the interconnection of the ele'nents in space:
01, by the axis (coaxial); 02, by a right angle; 03. by any non-right angle; 0‘.

tangentially; and Us. by parallel axes of the elements.

The detach operation is denoted by the symbol \1. and describes the coaplets object
derived as a result of detaching the elenent Q2 fro. the voluaetric element Ql:

D-QnVQs

Just as in the preceding case, the synbol i denotes the nature of the detach'opera-
tion: by the axis (coaxial) is denoted by \1; by a right angle, \ 2; by an

arbitrary angle, \ 3; and detaching with parallel axes of elements. \ 4..

The nature of mutual intersection of pert elensnts Q1 and Q2 is specified by the
"intersection" relationship.

The variety of design operations and relationships describe major features of the
part shape that are grasped only when looking at the drawing, without specification
of which the proper design and aanufacturing solution could not be chosen with
coeauter-aidea design.

the nature of the relative position of the basic surfaces in the part configuration
is specified by the following relationships: coaxiality, t1; perpendicularity, c3;

parallelism Cg; synetry, t5; arrange-ant of elements on a straight line, :7;

arrangensnt of ale-eats in a circle, Ca; and nenbership (incidence), eg. for exam-
ple. the relationship of parallelisn of surfaces Q1 and Q2 is described in the form

of Qlthz, and syuetry of surfaces Q1 and Q2 relative to the axis or by Q1:5(0X)02.

The shape of a part as a whole or its individual portions in the language of the
second level is described by the graph 0 - (1,3), in which the vertices correspond
to the basic surfaces and the arcs to the operations and relationships that describe
the interrelationship of these surfaces. The graph can be represented element by
element in thb forn of relationship tables. Recorded in the first and second
column of the table are the incident vertices, and in the third column, their inter-
related edges. Table 1 shows the description of the shape of a part fragment shown
in fig. 3. Information on the part shape, written in the fare of an element re-
lationship table, is convenient for entry into a conputer and subsequent analysis

of it in computer-aided design.

Table l

 

FOR omakl. USE ONLY
run UI'I‘OLIAI. use. URL!

The dimensional link betueen the two elements Q1..and Q1, which nay be points,

lines and surfaces, is specified by the type of dinension u, its nuseric sagnitude
b and is described by the relationship Q1uij. .

The letters a, y and 2 denote linear dimensions parallel to the corresponding
coordinate axes, and the letter 1. those arbitrarily positioned in space. Angular
dinensions are denoted by the letter O. and dinetric by D or 3.. For maple,

(2*!500.1 designates a distance of 50 - along the x axis between the ale-ante Q1 and
Q I
J

Mathematically, any dissnsional chain is described by a graph in which the vertices
correspond to part elenents (points, lines and surfaces), and the arcs to the type
and numeric nagnitude of the dimension between these elements. The graph for

dinenaional links. just as the graph for the part shape. is represented in the
forn of a table of relationships.

Technical requirements for the precision of the relative position of the part sur-
faces are defined by the type of deviation and its nuseric magnitude 6 and are

1
described by the expression ini‘Qj’

The following designate deviation parameters: :31, nisaligmnent; 382. wobble; m3.
non-perpendicularity; 83‘, non-parallelism BBS, asynetry; and £86. nonplanarity.
For example, a wobble of surfaces 01 and Q2 relative to the surface Q of no more
than 0.05 is notated by the relationship (01' Qz)BEZ;0.OSQ3.

The set of technical requirenents for the precision of the relative position, just
as the linear dinensional chains, is described by a graph, the verticea of which
correspond to the part elensnts, and the arcs to the type and numeric nagnitude of
the deviation paraneters. This graph, just as in the preceding cases, is repre-
sented in the forn of a table of relationships. Table 2 gives the description of
the dimensional relationships and technical requirenents for precision of the
relative position of the individual surfaces of the part shown in fig. 3.

Table 2

 

The first three lines in the table describe a cluster of linear dinenaions

specified fron surface 1, and the fourth, the nonparallelisn of surface 2 to axis
0x0

FOR OFFICE]. USE ONLY
POI! OFFICIAL USE ONLY

Generel information on the part or its individual elsaents are characterized by the
set of parameters

@D-lﬂb. ND. LB. 88. DR. H8. MD. TO.
88. RA. R2. 00. $H. DH].

which describe the designation ED and number all) of the part; its dineneione u. 38.
DB end In; the Interisl no; heat treatnent TO'and nechanicsl properties 83; the
general treat-est finish RA and 37.; weight co. and sanitndee of cheaters not
specified in the dreving on; end nonepecified sari-on deviations DB. ‘

The overall fornalissd description of the part includes general intonation on the
part, coeplete intonation on the shaping. dimensional and precision relationships
of the part elenente between eech other and the pernetere of each ole-eatery,
type and normalized surface to he treated. For some prohlens in manufacturing
design, only pert of this information is used; in this case. an abbreviated
fornslizsd description of the parts to he treated is compiled and the separate
levels ere integrated for convenient initial description of the ports.

BIBLIOGRAPHY

11. Begun“, G. s. et a1., "Apparatus of Geonstric Descriptions for Design Antone-
-tion." in "Vychislitel'neya tekhnih v naehinoetroyenii" [Computer Technology
in Hechine Wilding]. Minsk. ted-v0 AN 3883 _[Be1ornesien 883 Academy of -
Sciences], 1966.

2. Gorennkiy, G. x.. "Sistene kodiroveniya infomteii pri nnehinostroitel'non
proyektirovanii" [Intonation Coding Syet- for Machine Building Design].
liinsk. lsd-vo All 3888. No 1. 1965.

3. Rikitenho, V. D., "Podgotovka program dlye stenkov s progre-nyn npravleniyeu"
[Preparation of Programs for manic-Controlled Machine Tools], lbscov.
ﬂashinoetroyeniys, 1973.

4. Brown. 5. A. st 111.. "Description of the m Language." com. 0? m ACE, no 11,
6, 1963.

COPYRIGHT: Izdatel‘etvo "Finensy i statistika". 1981

8565
C80: 8144/0138

73
FOR OFFICIAL USE-ONLY
POI! OFFICIAL USE ONLY

EXPERIENCE IN USE OF rm SHARING SYSTEM FOR PROGRAM OW

Moscow VICIISLITEL'NAYA rm SOTSIALISTICEBSHKB ST“! in Russian lo 9, 1981
(signed to press 21 Hey 81) pp 73-81

[Article by G. Brusdeylins, engineer (633)]

[Text] Unified System dets processing systens ere used in two nodes: betched end
interective. Under betched processing, s Job is fully described before being sent
for processing. The Jobs thus prepsred torn s continuous streen of entry dsts tr
be processed with the sin of optinel losding on the dsts processing systen. Afte.
Job entry, the user nsy not. effect the course of its execution end intervene in it,
i.e. does not tehe pert in the processing process. The tins of processing is de-
ternined by the coeputer center. As s result. the user veits s long tine for his

job end this is typicel for this node. Veiting tins is cslculeted fron the tin'e
the user suhnits his job until. he receives results. to the interective node, Jobs

ere processed in steps by entry of psrtiel Jobs end output of responses. Gon-
tinusl user-systen comnicstion is esteblished by using e terninsl.

The interective node is subdivided into the node of shered use with sccess to ell
resources end the node of ehsred use with sccess to specified (linited) resources.
The letter ellous processing tron e terninsl of s set or tssks specified by the
systen (for ems-pie, sest reservstions, litereture sesrch). The values of tssks is
not restricted by the system so thet vsrious subscribers ney solve ell problens
independently of esch other. The node of shsred sccess to ell instslletion re-

sources cen be effected by using the components of the Yes 08 ”Tine Shering System"
(SEW) [T88]. I

TSS is an extension of the Yes as opersting systen. rss is beeed on the control
progren INT, end in future. svs will be the besis.

135 end the betched node are conpetible since in the process the seas operating sys-
ten conponents ere used. The dsts forests. notstion, sccess nethods end conpiling
and service progrens netch in both nodes. Thus, progrens intended for betched pro-
cessing when develnped cen be run under T38 without chenge. However, using the

m [basic telecommicstions] end can [graphic] sccess methods end their star
[execute chennel progren] equivalents is not possible. A minima- of 512! bytes is

required to piece 153 in nein storsge. Simulteneous opers‘tion in T88 end the
betched node is possible.

FOR 051011;. WE ONLY
FOR OFFICIAL USE ONLY

The start of the operation on a terminal is called the start of a session. A sub-
scriber communicates with the system by using the T58 cousnd language. By using
the cos-and 1.0008, the subscriber establishes comnication with the system, indi-
cating his identifier and procedure name (the procedure contains a job control
statement). This procedure, supplemented by certain TSS data, describes the us
Job that is included in the operation until the end of the session.

Tasks, executed at the subscriber's option, are described by entry of concede.
Then the appropriate col-sand processor is loaded into the T88 area, assigned to _
the subscriber and uecuted. Missing data are requested by the system. The com-
mands are used to check the course of the session and control it, to compile,
execute and debug programs, to manage data and to manage and check the system. If a
sequence of cos-ands is needed repeatedly, it is advisable to store it in a file as
a procedure that can be called by using the me comand. A session is terminated
by the LOGO?! comnd or by a new LOGO! cos-and.

If inclusion of TSS was provided for when the operating system was generated, the
'rss node can be started at any time by the start co-Iand. After this, the operator
can vary the rss mode or terminate it by using other co-eands. This means that T58
is simply adapted by subscribers to varying loads. Since rss is used for data
transmission from and to terminals by an extended remote access method (TCAH), the
systan mat contain the message control program [HIP] that is capable of servicing
Both T88 and other modes of application for TCAﬂ.

After T85 is started, users are granted one or nore storage areas of a specified
size for job execution. Remaining main storage can be used to process jobs in the
batched mode. Bach ms area processes several T88 jobs, though only one subscrib-
er's job is in this area at any given time. This condition stems from the T58 Job
staying in this area and being given access to system resources only for a certain
time (a time slice). After expiration of the time slice, the contents associated
with the Job are copied and stored in direct access storage, and another job is
written to main storage (0?). This process occurs rapidly; therefore, a subscriber
has the impression that he alone is operating with the data processing [DP] system.

TSS Application Areas. T85 is suitable for use in many fields. The main five are
considered below.

Application in Science and Technology. This includes use of the computer by
engineers, statisticians, mathematicians and other specialists who need not be well
versed in 0?. In the process, problems occurring in everyday work are solved and
this is done by using a terminal installed in the specialist's working area.

Data Processing. rss permits creation and change of files, source modules of pro-
grams, data, texts (program documentation, for example) and procedures.

The capability of changing source modules is especially important in software de-
velopment. Uord processing is assuming great importance.

Interactive Programing. Software development from a terminal in T88 mode is called
interactive programing. In the process, there is the capability of developing,
modifying and executing programs intended for the batched and T88 modes. The latter
offers efficient facilities for program debugging. Progra-aer productivity can be
raised considerably because of interactive programing.

75
roe omcw. use ONLY
sou ”III-IDA]. USE ONLY

Job Processing in the Conversational Mode. Generating Jobs under TSS and proces-
sing them in the hatched mode is called joh processing in the conversational mode.
In the process, conversation is permitted only during job generation and when re-
sults are received. Processing Occurs without subscriber intervention. Job pro-
cessing in the conversational mode should be used in compiling programs when

the programs process a large quantity of data and execution time is very long;
there is no conversation during processing (during translation of programs. for
example); and

when special technical data media have to be installed.

Interactive Application. Problems, as they are realized with use of a computer
with access to particular resources, are also solved in the T58 mode (for example.
making information available, current accounting of aveilability, data acquisition).

TSS Application Example. The scientific research center of the Robotron Scientific
Production Combine is developing problem-oriented software for general-purpose use.
The DBS/R data base management system is typical of these software facilitiea.*

rss is provided to more efficiently develop such software systems. A TSS test by
a limited number of programmers was run for a year to gain experience. Results
were used to define agreements for the rss mode and the hardware composition; thc
number of programmers included in the operation was expanded.

A Yes-1040 installation with 1024K bytes of main storage was used to try out TSS.
Two hard communications channels were used; a Yes-8564 remote display unit with
nine screens was connected to each channel. At the start, TSS was used six hours a
day. The installation was operated under control of Yes OS/MVT 6.0 and was
available primarily for work on software. The installation also operated inten-
sively in the batched mode. Under these conditions, main storage was allocated as
follows:

102K system area for resident load modules; message scheduler

66K message control program (TCAH); TCAH buffer storage

96K TSS control area; TSS buffer storage; resident load module area

130K TSS area; (10x) local system queue area

482K batched processing area

150! system queue area; nucleus of control programs

Software Development. Prior to the introduction of rss. all jobs for software de-
velopment were executed during the day by groups of developers at the computer cen-
ter according to a general work process. At night, this work was done under closed
shop conditions. After TSS was introduced, the following work was accomplished
preferably under TSS:

modification of source modules;

change of data, cataloged procedures and command procedures;

debugging of individual programs;

translation of small programs; large source modules were translated under batched
processing;

 

* Bittner, Yu. and Guesther, M.. "DES/R Data Base Management System for Subsystems

in the 'Hanpower' System," in "Vychislitel'naya tekhnika sotsialisticheskikh stran"
[Computer Technology of the Socialist Countries]. No 5, Moscow. Statistika, 1979.

76
FOR OFFICIAL USE ONLY
POI! OFFICIAL USE ONLY

work on maintenance of program libraries; and
word processing (composition of documentation);

The batched mode includes:

overall debugging of software systesm;

debugging of programs with a large quantity of data;
translation of large programs;

operation with magnetic tapes;

compilation of source nodules; and

execution of debugged program.

Operation at night continues under closed shop conditions. This method assumes
coapatibility of data and results in the rss and batched modes. Also, the approach
was to use the same program libraries in both modes. 1‘88 supports this
compatibility.

Management of External Storage Units. Availability of high-capacity external
storage units is assumed in the T38 and batched nodes to provide access to the
libraries and data needed by many progreamlers. To reduce this requirement to the
minimm, all required storage was divided into that with continuous and that with
man-continuous access. Storage with continuous access included the libraries and
data often used by the programs: and which, therefore, had to be available during
ch entire computation. Parts of storage referred to infrequently by the program-
mer were allocated only at a certain time; recorded there was information rarely
nuded, for example, source modules of debugged programs. All progra-ers use
libraries that are made available under a tempo principle (agreements on names.
estimate of quantities). This principle permits getting away from personal
libraries for subscribers and pr0vides that about five to ten progra-ers for a
software system use to.» libraries in both the 188 and batched modes.

To develop Assembler software, the following system of subdivided files is made
available: library for source modules under development; library for load modules;
procedure library which includes conned procedures and cataloged procedures for
batched node; and a library to hold in-house macro instructions. Use of emternal
storage is observed from a centralized service console. Subscribers may place
temporary files in main storage.

Program Cospilation. Programs are compiled as follows. Statements are written on
form and punched. Initial translation is performed in the batched mode and the
source module is kept as a component of a subdivided file. If errors occur in
translation. the printout is used to eliminate them in the rss mode. The-11: com-
mend is used to correct errors detected. and the program is then retranslated.
when the source modules are large. this can be done by sending the job for batched
processing. After its execution, the subscriber receives a message (he engages in
other work in the meantime) and then checks the diagnostic message file by using
the OUTPUT co-aod. Small source modules are translated under 133. In the pro-
cess. diagnostic messages are output directly to the terminal. Errors are cor-
rected by using the EDIT coll-and. The printout is used to debug the program.
After the files needed for program execution are allocated by the ALLOCAIB con-and,
the progru to be debugged is executed by the 1881 co-and. After errors are de-
tected and corrected, thk program is sent for overall testing if it is a component
of a software system, or for final testing in the case of separate programs. Einal

77
FOR OFFICIAL USE ONLY
run urn-luau. use ONLY

After successfully passing the test, a
paent library to the archive library,

in the batched mode.
Then these programs are deleted

sferred iron the develo
he production library.

ests are performed
ource nodule is tran
nd the load nodule to t

n the developaent libraries.
Programing is performed in the following

(formulation of the job and com.

pilation of the program flow chart);
lution by using programing language state-

meats);
prograa debugging (preparation of instructions in the source language in a form
into the computer and storage in files, translation,

permitting autonatic entry
assembly and debugging of programs, search for and correction of errors);
(conpilation of application documentation);
debugged progress

(changing and'elinination of errors in
debugging stage».

Hith interactive programing,
am debugging and documentation compilation.

due to the following factors:
The long waiting time for job exec

results are e

development tine;
ly, it is advisable to have

continuity of work. For a program:
his continuously engaged in software developaent. The long wait for results of
armor to work on several pro-

job execution in batched processing
Shifting continuously from one

grams at the sane tine so as to not waste tine.
problem to another lowers programmer productivity;
The continuous ac-

continuous access to a
cess to all system Emotions from t tins raises a pro-
gramer's enthusiasts for work since t an error in a program right away

absence of time spent unproductively and the access to

improves the programsr's working conditions;
of efficient utilities, for example the

efficient utilities. 158 offers a number
le in the batched node. Dynamic debugging is of
ratio, i.e.

EDIT command, that are not
in the batched node, debugging utilities are 3
cannot be changed during debugging and debugging

after a complete run. nynsnic debugging facilities allow
ed using information gained

making changes to progr

while the program is executing. be terninated on time

or repeated after correction. Exp productivity is raised an

E 50 percent in the ' this matches foreign experi-
a stage of software develop-

oductivity increase in t
basis for note extensive us

average 0
ence. This pr

men: should be used as the
productivity increase in

Require-eats for Organic
a umber of organizational requiraaants the

interactive programing
programmers are forced to meet in batched processing. For example, the DP
FOR OFFICIAL USE ONLY

installation, which is an auxiliary facility, has to he "subordinate” to the pro-
grammer's working rhythm, and not vice versa. In the ideal, realization of this
requirement means: each programer has to have his own terminal and receive the
optimal services from the system. Such requirements are unacceptable for economic
considerations, yet the approach must be to reduce organizational restrictions

with respect to the programmer. This requiruent determines the organization of
the 1'88 mode.

Experience shows that the duration of a debugging session is one to two hours. If
this time is considerably exceeded, work concentration drops off. On the average,
one to two sessions are required per day for a programer. Consequently. one can
assume that one programs: works no more than three hours per day at a terminal.
During a session, a programer must not experience psychological pressure from the
need of keeping within the time allocated to him, when a terminal is made available
to a programmer only according to a plan, at a specific time and for a specific
period. This contradicts the requirement to free the progrmer to the greatest
extent from "organizational pressure." To meet this requirement, one terminal is
needed for approximately every three programsrs.

A terminal may he installed centrally or decentrally. ‘l'he centralized installation
in a separate room ensures a high load on the hardware and a suitable environment
for concentrated work. Also, in furnishing the room with equipment, health norms
must be taken into account regarding noise, air conditioning, etc. When the
terminal is installed in the work area, less additional space is required, but

the useful load on the terminal declines.

Adaptation Problems. After system generation, a small group debugged it using TSS.
At this stage, the following work was performed:

a study was made of optimal system design to obtain responses quickly;

technology was defined (agreement on names, time of use, etc.);

standard procedures and comands were developed;

utility programs and working documents for programsrs were compiled.

After this, the programers engaged in interactive programming went through a short
training course (about six hours). The course covered the general concepts of the
hardware, 1'58 and assignments of the plan with a phased breakdown, by which the
comand language could be learned on one's own. Then the first session was held
under the direction of experienced specialists. All necessary operations were
mastered within 14 days.

Supplementary use of interactive programing along with the conventional method for
software development requires the programer to always be ready to shift from one
problem to another. A skilled programs: considers the capability of focusing on
the main problems as an enhancement of the prestige of his work. Once a staff mem-
ber has become familiar with interactive programing facilities, he works more pro-
ductively, and if these facilities are removed, it is considered a demotion.

TSS use over a year has shown that it is an effective means for making software de-
velopment more efficient. therefore, comprehensive expansion of 138 use is planned
and a "Series-2" Unified System Computer (the Yes-105$) will be used for this. It
is planned to use the res-7920 as the terminal.

COPYRIGHT: Isdatel'stvo "Pinansy i statistika", 1981

8565 '
cso: 8166/0136 79

ron omcur use ONLY
FOR OFFICIAL USE ONLY

SZPAK-U INTEGRATED 9306mm: SYSTEH FOR COHPLEX AUTOMATION

lbscov WCIIISLITEL'NAYA mum SOTSIALISTICHESXM STRAN in Russian lb 9, 1981
(signed to press 21 May 81) pp 81-86

[Article by A. Aderek, Master of Science, Polish People's Republic]

[Text] Progress in digital equipment and the evolution in methods of controlling
industrial processes have caused a rapid increase in the nuber of automated sys-
tems with control computers (WM). At the same time, continuous growth in the
cost of software developoent has been noted. Therefore, digital equipment pro-
ducers and users are very interested in special programing languages that, on the
one hand, would lower the labor input for programing, and on the other, would be
easily mastered by specialists without programing experience.

The SZPAK-77 programing system, developed at the Industrial Institute of [atoms-
tion and Measurements HERA-PW, is described in this article.

The SZPAK-77 system is intended for the System of Snell Computers.

The experience of application of the preceding SZPAK system in industry has been
taken into account in the SZPAK-U system.

lhe SZPAK-N system combines the advantages of a form language and real-time POR-

TRAN. By its function, SZPAK-77 is a general-purpose basic software, i.e. can be
used for any set of hardware.

The main purpose of the system is programing control computers that implement
supervisory control in real time in automated process control systems (ASUTP). .
The szmzm form programing language in this system is intended for programing
typical algorithms for data acquisition and preprocessing and control. Algorithms
for processing process variables defined by forms can be expanded by using supple-
nentary programs, SUP. The expanded real-tine FORTRAN IV F language is intended
for preparing then. Supplementary programs commicete with the so-called special

programs, optimization programs for example, that are also written in expanded
FORTRAN. '

Capabilities of making changes to the system, expanding the system, receiving infor-
mation about variable processes, etc. are provided by the operator-system inter-
actiev language.

80
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

Process Viriables. The basic unit of the form programming language is the provos-
variable (PP) [PV]. It is recorded in the system after introduction of the com-
pleted form shown in the figure. The form is modeled on those used in the BICEPS
programming system. This form is filled out most often for programming the record-
ing and processing of a parameter measured in an object. In this case, the source
of the process variable is the transducer signal fed to a computer by devices for
conmmnication with an object. The converted value of this signal and its associ-
ated supplementary parameters such as, for example, restrictions on the maximum
and minimum, are accessible to user programs and the operator.

Usually in an ASUTP, the values measured in an object are used as the basis for
determining certain integrated technical and economic indicators that describe the
course of an industrial process. Forms can be filled out for these values too,
which then become accessible to the operator by proper names. This is the way
values are handled that are obtained, for example, as a result of performing
chemical analyses in a laboratory, and the operator inputs them manually.

Thus, a process variable is any value measured automatically in an object, computed
by a program or input by an operator, for which a szpax-77 system form is defined
(filled out).

A process variable is identified in the system by using a name, which consists of
four characters in the SZPAK-77 version for the uraapaoo control computer. The
first character must be alphabetic and the rest numeric. In the following
description, ANNN denotes a process variable name.

Digital Control loop. PV processing algorithms can be divided into two groups.
The first includes algorithms for monitoring filtration, scaling by physical units
and checking the bounds of the current value of the PV. As a result of their
execution, the current PV value is stored in computer storage. The second group
includes processing algorithms programmed in supplementary programs and algorithms
for computing the control process. let us call the set of algorithms in the
second group and the characteristic parameters for a given PV the digital control
loop (KTsP).

It is especially convenient to single out the digital control loops in the initial
stage of system debugging and operation since this provides the capability of de-
bugging the software in stages, debugging in the first place the software for cen-
tral recording and processing of data, i.e. everything except the digital control
loops.

System Variables. Associated with each process variable is a number of character-
istic values, for example the current value read out in an object at a given time
and limitations on the maximum and minimum. Let us call these values system
variables (SP) [5V]. They are stored in the form of real numbers, can be read out
and measured by an operator, and are also accessible to the remaining portion of
the SZPAK-77 software system.

System variables are identified by a name formed from the name of the process vari-
able with which the given 5V is associated and two numbers that are the SV number.
System variables are listed below.

81
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

mam-murmur. mmm n mum: ntnnemi macaw)
_._______—_

 

“uncut! Mil-W1. z-nJ-qau, Mm, bun-.533. m It)

can-mu M u an... hum-m, a dame
Ian M: plum-u, :. ' ulna-u mmJJ-mmnluﬂ-lmm

Mal-lulu” In
neutral "null

to! (mun .
mutual! MM

ammmmmmm

“In!“ MM" ”"70”
m CED nun Dyan aunt-mun» m:

     
     

W WNW
m EDIL'IIIID mm www.mmmmmmmv
WANG"! MUM! ' ' h'u’

% aim-oh mum-u. almmmm.mluk,lumth:ll
n Ollllﬂlwnli «um: mun .
run can-unv- (lo kl cum-u. hump-vim I4: and",

C v ‘
0mm! In "Imamum I “W MI W Inf-0mm

   

llll Y m w-uuuw wmnuu
III. a '9 '

MWNNW

Mm! ”Mu -
Mom «mat-u unm- My“. 0 0! mutant I)
«an (lamina mun-nun .

mm #1th

m we»: «um Ame-nu (bunny-nu, noun-tam)
Inn-u Nun-"w Inn-u: M '
Hill“ upon-mu uuuu M

I: out (germane-(u cm, ban a um}

(OI w HUI!
Maw Wuwﬂudmmdm
t enhancement-hm cal-nu u I”). m)

mumm M mm ’4 mmm

:gzmuuum WIInWm—u 0mm.
:3 demeMH mpwnmmw W

I‘m“ “"“m'u' amp-u a W mos-u)
noun) but.“ In law-mama“ -
amumm “qt-I'm! mum”)! MW m

[NOAM 4W

llama-n unclean" mam-o . '
:u l «gamma-d, log-mum“)
”~1qu durum nun-mac vmucm '

 

   
   
    
 
   

A : “I’M“ 0k " 1 3,.
u y. . . ”5." .
E Nutnczzamlm “"4 0m mmm,4 yum)
mm!”

AM mun-mu.- at "man, M mu; due
Annmmi out: 1: mu. 4' null, much
u emu Jul.- M menu, Managua-anarchic he!

a «2mm procautns algorithm in the SZPAK-U program“!

us page; uquontul line lumber. and u keyal

82
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

PORN: azcowwc, 33008881“; AND CONTROL 0! PROCESS VARIABLE (PV)
PV‘ﬁame
01 - PV aource (1, program; 2, 81; 3, console; 6, N16; 5, ll remote cesaette)

02 - coneole input of PV value (1, authorized; 2, not authorized)

03 . PV type (1, bistable; 2, bistable interrupting; 3, meter; 0, others)
04 ------------ w designation

05 -- PV pbyaical unite

06 --- group code

INITIAL DATA

07 ---------- PV initial value
OPERATOR CONSOLE ASS IGIHENT

10 --- operator console number, "10 number
DIGITAL READOU‘I‘

11 -------- -- quantization period coda, number of caasette, number of pack, bit
location, number of bite sign code

MW

12 ~-—-------- quantization period code, caasette number, pack number, entry number,
range [V]
l} as input signal restriction code
14 ------- filtration type (0, without filtration; 1, continuous of let order;
2, continuoua of 2nd order). Filter frequency cut-off

SCALE BY PHYSICAL UNITS

15 .- scale control type
16 ---------- A-

3333 WWW“

19 ---------- D
20 ---- P

21 ---- T PV'a, taken into account during correction
22 ---- G

DATA ON PROCESSING

23 --- processing period
26 --- PV value computation program (if there is a 1 in 01)
25 -- number of SV'a defined by user

LIMIT CHECK

26 - normal poaition or digital contacte (1, closed; 0, opened)

27 ---------- PV value upper limit

28 --..--.-.. PV value lower limit

29 . cut-off code (blank, no cut-off; 1, cut-off at limit)

30 - dead zone code

31 ----- ----- maximum permissible change of PV in one processing period
32 . inhibit standard messages (1, standard messages will not be printed)

63
FOR‘OFTHCIAI.USE‘0NLN
I'UK Ol' MCIAL USE ONLY

CONTROL "HEN LIMIT EXCEEDBD

39 ~-- 1"! upper limit (then the digital contacts are in an abnormal state)

60 --- passage below dead zone of upper limit (then digital contacts are returned
to nornal position)

61 -.- W lower linit

62 --- passage above dead zone of lower limit .
63 on W maxim peraissible change of PV in one processing period

OUTPUT DATA

55 no program that defines control
56 - type of output (0, incremental; l, positional)
S7 -- -------- maxim-I permissible control variation

OUTPUT ADDRESS

60 - type of output (1, ll; 3, message for operator; ’0, controller)
61 ---- cassette nmber, pack number

CONTROLLER

61o ------ controller address: cassette number, pack number, address
65 --.--. analog input: cassette number, pack number, input number
66 ------ digital input: cassette number. pack number. bit location

System Variable

 

Number System Variable Designation

00 current value of W

03 limit on maxim- of W (for W with two states, the normally
closed position of the contacts)

06 limit on mini-\- of W

07 naxinua permitted variation in PV value in one processing
period '

llo supplementary SV's epecified by user

13 + N - N is the nulber of supplementary SV's

Proc ‘ss Variable State. In a process control system, a computer acquires data and
issces control signals incident to many induatrial apparatuses that nay be faulty
or down for maintenance. Some part of the industrial process may not meet required
conditions. All this has an effect on the state of process variables.

The current value of a process variable may be within limits, thus proper, or beyond
limits. and thus considered doubtful. The current value of a W nay be read out

automatically or, in the case of a measuring circuit failure, input nanually. A [W
nay be in a system, but updating of its current value may have ceased, and access
to system variables for a user program may be prohibited.

Indicators with two values have been incorporated in the SZPAK for- language to
allow the capability of sending information on W states. W states are listed
below.

81;
me omcm. use ONLY
FOR OFFICIAL USE ONLY

Process Variable
Designation Value

PV activeness 0, active PV; 1, inactive PV
digital control loop
activeness 0, active; 1. inactive
1"! source 0, PV input automatically; 1, PV input manually
0.
0.

 

PV correctness correct PV; 1, doubtful PV
digital control loop

output mode with control output; 1, without control output

Programs Supplementing Processing of Process Variables. The amount of processing
of process variables defined by forms may be expanded by using supplementary pro-
grmns (SUP) that are executed under conditions specified by forms. These programs
are not independent tasks in a system, but are executed as subroutines of the PV
processing problem. They are identified by s three-character name. I! a subroutine
has to be executed under certain conditions, its name must be entered on the

appropriate line of the form. has of supplementary programs are cannon for a sys-
tem. My nuber of process variables can be called to a program.

Supplementary programs are written in expended POW. Expanded FORTRAN, on one
had, provides the capability of executing operations in real time and controlling
the operation of a task; on the other hand, it enables access to the SZPAK data
base and permits interaction with the remaining parts of the system.

he first group of subroutines is determined by the standard language of real-time
FORTRAN. The other subroutines are listed below.

 

Subroutine Functions Call to Subroutine

read out values of system variables CALI. PRTCII (i. n, v, I)

store values of system variables CALL STORE (i. n, w, m)

read out statuses of a process variable CALL STATUS (i, n, j, m)

store statuses of a process variable CALI. ASTATUS (i, n, j, m)
process process variable out or turn CALL SPECIAL (i, n, m)

output of controls CALL OUTPUT (i, n, w, m)
printout texts (with buffering) CALL PRINT (k, l. f. e1, e2, ...)

printout texts in ISO-7 code (with buffering) CALI. 93mm (1, p, t)

Note. Values of parameters: 1 nuber of PV or $1

n names of PV or 8‘!

w defines address of REAL type variables where the
values read out by the subroutine from the SZPAK
data base are to be moved, or from where the values
to be stored by the subroutine in the data base
are to be moved

1 status words to be read or stored from/to the
SZPAK data base

m lNl'EGBR type variable. After return from the sub-
routine, contains information on method of
execution of subroutine, possible errors, etc.

85
me omcm. use omlv
I'D“ UI'I'ICIAL USE ONLY

1: number of parenetere

l nuber of printer

I print tor-at

e1, e2, e3 valuee to be printed

p nu-ber of cheractere
t text to be printed

Spaciel Program. In the ”PM-77 eyeten, a ueer can progru any algorithm, for
opti-izetion for example, that ueee deta acquired and proceeeed by prograe pre-
pared in the torn leaguege and by eupplnentary propane. lheee program exiet in
a ayeten aa independent teeke end are called epecial progrene. They are progreuned
in FORM with expaneione identical to the erpaneione for euppleoentary program.

Operator-Syeten Interactive language. In operator can comnicete with the eyetel
by ueing the coneole for the induetriel proceee operator or the [mi-180483 eerial
natrix printer with keyboard. The operator interacte with the eyeten by inputting
interactive language directivee into the conputer according to certain rulee. ' Bach
directive hae ite own key on the induetriel proceee operator coneole. If the tree-
eage ie eent through the DIM-1804611, a three-letter code ie ueed for each directive.
It ie aeemed that the baeic eyeten monitor ie aeeigned the number 0 and that it u
authorized for uee in reading and changing all data on any I"! and etarting the eys-
ten. 'Other coneolee are eeeigned eequentiel nunbere etarting with 1. ‘lhey can be
ueed to read all data on any PV. but changee are permitted only for thou PV'e
eeeigned the number of the given coneole. Operator-eyeten interactive language
directivee are lieted below.

Code _
[UN 1"! identification ' VS? PV etetue
PVR PV current value 1.8? digital control loop etatue
M W upper linit PVS eource of current velue
PRL naxi-un pernitted variation of W 00“ control output node
in one proceeeing period EXT epeciel proceeeing of P9
011. maximum permitted variation of REP emery of intonation on W
control value ALP PV deeignation
DAT eyeten variable PAL cancel eigneling

001' digital control loop output value
COPYRIGHT: lrdatel'etvo "Finaney i etatietika". 1981

8545
(280: 8164/0138

86
run omcm. USE ONLY
FOR OFFICIAL USE ONLY

nos 31' mam: 09mm sxsriu

rhetow WCHISLITIL‘NAXA mm sorsmlsncamml 8M in hoaian lb 9, 1981
(signed to press 21 May 81) pp 86-90

[kticle by A. Shuba, master of engineering, Polish People's Republic]

[Text] In cooperation with the other com countries, the DOS RT real-time operating
eysten hae been developed in the Polieh People's Republic for the system of small
omputers (8H EVE).

DOB It was designed for the 83-3 and Slick minicooputere. As is known, the instruc-
tion set for the 814-3 and 811-10 processors provides direct addreesing of 661! bytes
or 32K words (16-bit) of main storage.

The SDI-6 processor permits operation with special Iain storage control units
(storage dispatcher) that expand the‘ address range to 256K bytes (128! words).
Depending on whether or not there is a need for the storage control unit, it is
possible to generate DOS RT vereione with or without address translation.

A broad range of peripherals produced in the CD“ countries.cen be used in the SH-3
and SIM systems. lhese include various types of character terminals and alpha-
numeric printers with or without storage control; it is possible to generate ver-
sions for display, industrial and laboratory interfaces (including the CANAC inter-
face, for instance). D08 31‘ penite efficient use of all these devices with full
use of their functional hardware capabilities.

D08 31' imposes no major additional restrictions on the field of applications com-
pared to the limits involving hardware capabilities. The structure and programing
languages supported make the system most efficient in operating under the following
conditions and fields of application:

real-tine operation. This application aesmes acquisition and processing of
measurement data depending on time and control of real and simulated physical pro-
ceseee. DOS RT does not rigidly restrict the nuber of actions perforoed concur-
rently in real time;

software development. The operating system permits development of program written
symbolically, correction of them and translation into a load module; it also
provides facilities for progran debugging;

data processing. DOS at permits opsration of data base management program. Such
programs provide the capability of creating, updating and aenaging data files, such
as payrolls. inventory reports, etc. The COBOL compiler facilitatee development of
such programs;

87
FOR OFFICIAL USE ONLY
f0“ OFFICIAL USE ONLY

numeric calculations. The FORTRAN IV compiler supports the capability of
starting and operating programs for engineering and scientific calculations.

The capability of developing networks has a special effect on the use of minicom-
puters operating under control of DOS RT. Communication interfaces permit con-
necting minicomputers into a network with an equal-rights or hierarchical structure.

nos RT may be generated as a system specialized for one or more of the applications
mentioned, i-e. it can function in different modes at the same time. This property

allows adapting a working version of a 008 RT system to a working configuration of
hardware and operating requirements.

DOS RT has an expanded system for operating with files on disk and tape. The tape
file structure corresponds to the American standard.

DOS RT fully automates creation, retrieval, expansion and deletion of files. A
file owner cannot affect a file and cannot obtain information on the physical
location of a file on a disk volume.

The system provides protection of access to user files for operations such as
reading, writing, expanding and deleting. Access protection may concern the fol]. -
ing categories of users: file owner, user group, system programs and user
community.

DOS RT provides the capability of operating with MACRO macroassembler, FORTRAN IV
and FORTRAN IV PLUS, CCBOL and BASIC.

Standard system facilities include the MACRO translator and FORTRAN_IV compiler.
All translators produce an object module. It is common to all languages. This
provides the capability of connecting modules written in different source languages
at the stage of task development into one task (a task is a program in a form
suitable for starting).

BASIC is an exception since it has not only the property of compilation, but can
operate in the interpretation mode, i.e. it can directly execute a source program
written in a source file or output from a terminal keyboard.

A programmer interested in using all the properties of the SH equipment can use the
MACRO macro assembler.' This Assembler provides the capability of creating programs
consisting of processor instructions and of using macro instructions formulated by
the user in a given source module, or in macro system libraries or in a user macro
library. Special translator directives offer a number of other facilities:
conventional translation. sectioning of a program, segmentation of a program and
others.

It is well known that FORTRAN IV is used primarily in numeric computations. Imple-
mentation of FORTRAN IV in the D08 RT system also permits using tasks written in
this language for real time operation. This is possible because of a library of
procedures that organize the time relationship of the task written in FORTRAN and
communication with industrial and laboratory interfaces. The FORTRAN IV compiler
has a number of expansions compared to the standard language.

88
g FOR10FFKJAI.USE(MULY
FOR OFFICIAL USE ONLY

The nos RT system also includes the FORTRAN IV PLUS optimizing compiler. The
efficiency of the code generated by this compiler is two to threefold greater than
that obtained from the standard compiler. The shortcoming is its longer compilation
time. It can operate only in a system with address translation.

nos RT has a large set of application programs (programs for editing source files,
translation and compilation, building tasks, managing libraries, making changes to
various types of files, etc.). Two editing programs are provided in the system:
801 is an interactive editing program used to create and correct any text file, in-
cluding source programs. One can use the standard instruction set and create macro
instructions formed from combining standard instructions. The program permits
editing lines and blocks and supports search and conteit changes;

St? is batch editing program used to create and correct and text file by using a

series of instructions written in advance in a file. Interactive operation is
possible.

During system operation and development of many programs, a considerable portion of
program modules may be used repeatedly in various programs. It is advisable to
store these modules in compact form as library files. System programs for building
tasks can directly use modules stored in system and user libraries. Two components
are provided for this:

LIR is a routine used to create and modify libraries of object modules and Assembler
macro directive libraries;

TX! is a task building routine. It builds a task by using files containing object
modules and system and user object module libraries. There are three versions of
this routine that differ by size of main storage needed. operating time and

overlap capabilities.

The system has three components for correcting and debugging:

PAT is a routine used to make corrections in object modules without having to
translate the entire module;

ZAP is a routine for making corrections to a file in the form of a task without
having to rebuild it. One can also make single corrections to each file;

ODT is a routine to check the process of implementation of a debugged task. It is
possible to start the task by parts, modify main storage cells, observe the change
in contents of selected storage cells and inhibit a task.

The expanded system of files requires facilities offering the user the capability
of managing this system. These facilities include the PIP routine that enables
performing the following operations with files: creation. duplication, deletion,
expansion, change of name and method of protection, deletion from a catalog and
listing of catalogs. The system also has these file management routines:

PLX. This routine permits transferring files from foreign volumes that have a file
structure different from that of 003 RT;

VPY. This routine verifies the correctness of file structure on a given volume.
One can also make certain corrections to this structure Which permits detecting and
often eliminating the consequences of possible hardware errors.

89
I1]Ri0F1lC1Al.lEﬂi<ﬂﬁLY
run UPI'ILIAI. USE UNLY

Other DOS RT capabilities include: batched mode of operation, logging of errors
and testing of hardware. The first of these capabilities is supported by standard
system facilities.

System generation produces a working version of the operating system that is
adapted to the specific requirements and hardware configuration. The generation
source is the generation data base placed on three cartridge disks with a capacity
of 2.5M bytes (for standard distribution of system generator). This base contains
a certain basic operating system ready for operation that provides the capability
of creating a working system from the working files existing in the base. Genera-
tion consists of three phases. each of which is an implementation of a certain set
of operator instructions. This simplifies the generation process and the operator
need only respond in turn to questions asked about logic, character and numeric
values.

DOS RT is designed for minicomputer systems. Because of the efficient control pro-
gram, expended application programs and system of files, from a terminal operator's
viewpoint, it has many properties of an expanded operating system on a large compu-
ter. The system is noted for the ease and efficiency of communication with the
user. The system's strongpoint is the capability of convenient use of it in real
time when operating with tasks written in both macro assembler and tORTRAN.

COPYRIGHT: lzdatel'stvo "Finansy i statistika", 1981

8505
080: 81b4/0138

90
IN)! OWWHCLAL USIICN‘LY
FOR OFFICIAL USE ONLY

30mm ["03 MICHION 3mm OOIIPUTBR SYSTEM MID SBICIALIZID PROCESSORS FOR
ARRAY naocrssm:

Hoscov VYCIIISLITBL'NAYA mm SO‘ISIALISTICBBSKIXII 8M in Melon No 9. 1981
(eigned to preee 21 Hey 81) pp 100-106

[Article by Y. Ivenove end 1‘. Atonesov, scientific esoocietos, People's Republic of
Bulgeris]

nut] Multiproceeeor systems offer 'greet possibilities for increesing the through-
put of electronic computers. In our opinion, there ere tvo nein directions in de-
gigging uulitprocossor systems. first is the development of systems of idonticel
processors linked in en eppropriete eennor. The speed of such systems reeches
hundreds of nillione of operetions per eecond. However. those systems es s rule
heve their Ionian efficiency when solving proble-s suitehle for perellel coepute-
tion.

The second is the developent of multiprocessor systems from gonerel-purpoee end
specielized processors. This epproech. perhepe‘ doee not yield the gein in through-
put so in tho first cese, but is hes e nueber of subetentiel edventeges: it pro-
vides universelity of electronic computer systeao, offers tho cepebility of in-
croeeing throughput es needed, end permits specie! izetion of coeputer syetons in
one or more fields of epplicetion. etc.

The spectra of epecielisod processors developed end under development includes
cosnunicetion end errey processors. dete beso processors, 10 processors, processors
for processing eynbolic informetion, etc.

Specielized processors for utrix coeputetione ere used to process nuleric dete
erreys. lerge in volue, thet occur in fields such so signel enelysis, netrix elgo-
bre, netheneticel stetistics, nuneric solving of differentiel oquetions. etc. Also,
in e nubor of eppliod fields (geologic end teeteorologic reeeerch, ssisnology,
nilitery effeirs, etc.), methods ere used thet ere cherectoristic for the ebove
mentioned fields.

Specielizod processors for netrix computetions ere usuelly connected es peripherels
to e coeputer system. implementing thereby their besic function: freeing the CPU
fro- the lergo volume of conputetions involving dete netrices. By using errey pro-
cessors, computer syste- efficiency is reised over ten fold, which depende on the
neture of eppliod tesks being solved. on the retio between the voices of errey pro-
cessing end dete procoeeing in the CPU, on the specific tochnicel pore-store of the

91
POI! OFFICIAL USE ONLY
IWJR OFVWCJAL USEICMULY

computer system, etc. An array processor can be made accessible to users through
existing programming languages; to do this, software has to be developed to provide
communication between a user program and array processor. However, compilers have
been developed for the majority of programming languages in use, and including
special statements to communicate with an array processor would lead to making
changes to compilers too. In connection with this, the array processor access
method (HDHP) [APAH] or the main control part of it is built as a subroutine and is
activated by a user program by using the standard CALL statement. In the general
case, the CALL statement for matrix operations has the following parameters:
mnemonic code of matrix operation;

control information (gives instructions to the APAH on the parameter list structure,
on the method for building and executing the channel program, on processing of
certain interruptions, etc.);

usually specified for each array (operand or result) are the starting address in
main storage (0?) or in the array processor storage, if available; number of ele-
ments in the operation; the step defining the relative position of the elements in
the operation in main storage; the data format defining the representation of num-

bers in the array and certain.requirements for controlling the sign or modification
of the parameters listed above.

when the user requires performance of certain control operations by the APAH or
operations that monitor the operation of the array processor, the CALL statement
contains parameters differing from those described above.

The main functions of the APAM are:

analysis of CALL parameters and informing the user of any errors made;

generation of the channel program that implements the request or logically complete
series of requests for matrix operations;

control of the array processor as a system resource and dispatching of users
awaiting this resource;

monitoring the execution of the channel program for processing of inetrruptions or
activating user programs used for this purpose.

To perform these functions, the APAH communicates with the user program and the 05
control programs. The APAH makes use of certain system blocks and tables; there-
fore, in constructing it, standard conevtnions for access to system information
must be taken into account. Defining the status of the APAH as part of the basic
system software depends on a number of factors, for instance on the capabilities of
the specific operating system, the size of the APAH, the specific functions that
the APAH must implement, etc. Described below are two types of array processors;
fundamentally different approaches shaped by the factors listed are used in
building methods of access to them.

Yes-233$ Array Processor Software. The Yes-2335 array processor is connected to a
system through a channel adapter and is controlled as an ordinary selector channel.
The Yes-233$ has direct access to main storage for fetching source data and storing

matrix operation results. All arithmetic operations in the Yes-233$ are performed
on floating-point data.

The APAH and Yes-2335 provide for execution of the folowing oeprations: vector move
and conversion, vector move and conversion of floating-point data to fixed-point,
scalar multiplication, vector element-by-elemant multiplication, inner product of

92
FIHICHWHCJAL.USE(NNLY
FOR OFFICIAL USE ONLY

vectors, partial multiplication of a vector, convolution of type of multiplication,
sum of vector elements, sum of squares, vector element-by-slement addition, squar-
ing of vector elements with sign preservation, and the difference equation.

The APAM also provides for execution of special-purpose operations:

control operations ("no" operation, branch to channel program);

operations for synchronization of user and channel programs (building of channel
program, activation of channel program, waiting for end of channel program);
operations for specifying addresses of user subroutines for interruption processing
(determination of subroutine for processing interruptions during Yes-2335 operation,
determination of subroutine for processing program controlled interruptions);
operation for determining the mode of syntactic analysis performed by the APAH.

The APAH is an Assembler program. Using conventional assembly, it can be generated
in different versicns as a function of user requirements and specific operating
system characteristics. Since it is not very big, it is entirely connected to the
user’program written in Pill, FORTRAN or Assembler. and functions as an ordinary
subroutine. The Yes-2335 APAM does not require the user to have a detailed know-
ledge of systems progrmnuing. For each user request defined by an appropriate CALL
statement, it builds a channel program and a series of descriptors of arrays-
operands and matrix-result. After execution of the channel program has started,
the user may obtain control for completing processing in the CPU while the array
processor is executing its tasks concurrently with it.

The diagram shown in fig. 1 gives a most general idea of the method by which a re-
quest for a matrix operation is satisfied in the Yes-2335.

Software for-Array Processor with Its Own Storage. An array processor with its own
storage is connected to a computer system as a peripheral through the block-multi-
plexer channel. The set of operations performed by it is considerably larger than
the Yes-2335 set. Operations are provided for regular and inverse Fourier trans-
forms, square interpolstion, Ueiner-Levinson filter, complex multiplications, etc.

The array processor has up to in bytes of its own storage. A user can divide it
into a maximum of seven partitions. An independent task can be activated in each
partition. A user has up to 15 registers for each partition. A rather complex
algorithm can be implemented to solve a problem by making use of the registers and
index arithmetic facilities (22 operations).

The APAM for an array processor with its own storage is a large, structurally com-
plex program that is a subsystem of the operating system. It is activated by a
standard CALL statement in the user program written in PL/l, FORTRAN or Assembler,
but only its control part is tied to a user program as a subroutine.

The APAH has the following main components:

monitor that maintains communication with the console operator all allows execution
of commands from the console to manage the resources of the array processor;
control programs that define and execute user tasks in the array processor;

EXIT programs that support and control the array processor with its own storage at
the system level.

93
FORiOFFﬂJAI.US£1NVLY
INJK‘UleCJAl.USEZ(MVLY

(1 aw ”seem a sum-usual "ms

00£IAUUONMI “Uh“

\\\\\\\\‘ \\\\\\ \\\‘

   

 
    
     

   

 
   

cu‘ m M'WL ..... )' "' ~¥
mmw mm; :- . ”.3.
L'NUMO

    

  
 

Fig. 1. Functions of the Array Processor Access Method for the'YeS-2335
Array Processor

Key:
1. CPU and min storage 6. user program for interrupt processing
2. operating systn 7. user program
3. array processor access method 8. CALI. name APAH (......)
ls. interruption processing next statement
5. parameter list analysis, 9. channel program
channel program. and array 10. descriptors of arrays
discriptors generation, 11. array-operand
issuing of error messages. 12. array-result

channel program execution control 13. channel adapter
16. Yes-2335 array processor

By using a series of CALI. statements, a user program calls to the AM“ (with the
name XXIX), and through special stateoents, the user marks the beginning and end of
a task (fig. 2). The AP»! defines the task, building a channel program (KP) and
control table (UT) that contains the task coded by a special method. During execu-
tion of the chaan program, the control tables and arrays-operands (X and U) are
moved into array processor storage. And finally, after execution of the algorithm
specified by the control tables, the errayvresult (Y) is moved into main storage.
me availability of its own storage in the array processor and the capability of
parallel execution of tasks in its partitions provides the capability of making the
maximum efficient use of a computer systea when suitable planning of the operation
is performed.

9!;
momauussomv
P18. 2.

12.
13.

COPYRIGKT:

85105
(280:

FOR OFFICIAL USE ONLY

  

(1) “tsunami nut-um u moons-n Mum

’aﬂau
7/

ﬁ/g
(1 7 L80"!!! /

Altman: /‘
. é

 
 

 
  
  

  

 
 

A~Iumuq
menu-a-

 
 

Structure of the nrrsy Procsssor Access Method for an Array Processor

with Its Own Storage

CPU and Iain storage
APAH monitor

command

message

operator console

user program

definition of partition n
definition of partition n+1
task 1

task 2

0T1 - control table 1

KPl . channel program 1
012 - control table 2

8166/0138

16.
15.
16.
17.
18.
19.

20. ‘deiinition of tasks

21.
22.
23.
26.

95

3P2 - channel program 2

08

resident part of APAH

exit programs

recognition of errors
detinition of partitions of
built-in storage

control of execution of tasks

8H! - block-multiplexer channel
built-in storage

array processor with its own stora

Izdstsl'stvo "?inansy i statistika". 1981

INJR<0IFICLAL USI?(HVLY
run urn-nun. use. URL!

AUTOMATED SYSTEM FOR MASS PREVENTIVE TIZAIHINT 0F POPULATION (SAHPO)

Moscow VYCHISLITIL'NAYA TEKRNIKA SOTSIALISTICHESKIKK STEAK in Inseien No 9, 1981
(signed to press 21 Hey 81) pp 127-133

[Article by G. Asterdzhiyen, cendidete of engineering science, 3. Beyev,
scientific essociete, end B. Reychev, cendidete of engineering science, ell from
People's Republic of Bulgsrie] ’

[Text] l‘hss preventive treetnent of the populetion in en exceptionelly importe-
pert of the work of public heelth services. It is noted for high lebor-intensi. .-
ness end involves processing e lerge emount of veried dete. In connection with
this, there is the question of eutooeting treetnent by using nodern computer tech-
nology. To do this, it is necessery to equip depertnents of mess preventive treet-
nsnt with tsreinsls, teech uedicel personnel to work with en eutoneted system,

use some of the computer resources of s given center, end neke eveileble
specielired softwere thet operetes in reel tine.

The eutoaeted system for emss preventive treeteent, 8M0, usee en epplicetions
progren peckege (PPP) designed to opsrete in reel tins under control of the 801?
PPP together with Yeml. end Yes 3V! herdwsre.

The SUI? peckege, opsreting in reel tine, supports e terminel network built on the
besis of YeS‘l'Bl. herdwere end e centrelized dste bese. SUI? offers fecilities for
interfece (mecro instructions), with the use of which user progrens make use ot_
the cepebilities of this peckege. SUI? operetes in one pertition (with en optionel
high priority) of nein storege, end sll epplicetion progrems opsrete under its con-
trol in this seme pertition. As e result, only pert of the computer resources in
e center ere used by the system. The other psrtitions under mltiprogr-Iing
operetion mey be used for betched processing.

The herdwsre supported by the 801? PPP includes:

the Yes-8501 electromechenicel terninel or the 1201' 8531-Ye1 on switched or
dediceted cosmunicetion chennels;

the us 56100 video terninel or 1201' 7925 together with e Yes-7186 or Yes-7187
printer on dediceted chennels;

the 1201‘ 8500 miniterminel on dedicetsd chennels. 'Ihis terminel is convenient for
entering nmeric dete during leboretory tests;

telegreph epperetus on switched or dediceted chennel; ;

e pseudoterlinel consisting of the Yes-6012 cerd reeder end the Yes-7033 elphe-
mneric printer.

POI OHIO“. USE ONLY
FOR OFFICIAL USE ONLY

the SAMPO package can operate with the Yes-1020 type computer. Sufficient for it
is the hardware in the standard configuration for this computer and the hardware in
the YeSTEl. teleprocessing systmn, including the Yes-8501 multiplexer and the re-
quired line apparatus to link the remote terminals mentioned above.

The SAHPO PPP consist of one program operating in the batched processing mode
(autonomously of SUI?) and eight programs operating in the real time mode under
control of the 801? telecommunications monitor. The following program functions
are provided in the real time mode:

a) logging and issuing a number for a patient that has arrived (registration
function). Registration includes:

obtaining a free record from the main file for the new patient to be treated;

entry of last name. first name and patronymic for patient to be treated;

definition of a personal number for the patient to be treated. The personal number
is defined by the system and is used to identify the patient;

b) compilation of information on the number and names of people registered in the
system (information function). Three types of queries are possible;

query on the number of registered patients;

query on names and SAHPO numbers of registered patients;

query on names and SAHPO numbers of registered patients with specific initials;

c) system-terminal operetor interaction during which various patient data are
entered on disk storage (conversation function). Data are entered under control of
a special questionnaire prepared in advance by a systems programmer. During the
conversation, the operator responds to questions, entering a specified set of data
(text and numeric requisites, coded values). Hhen a question on a numeric requisite
is asked, the system reports the limits in which a response is valid. A special
category of requisites are the so-called coded requisites, each of which may assume
one or more text values specified in advance. All valid texts are stored in a
SAHPO text file that is a system thesaurus. Each ts:~ is coded with the aid of a
specified number called the elementary coded value (8K2) [SUV]. Elementary coded
values may be only numbers that meet the following formal requirement: only one
decimal position of the ECV can differ from zero. for example, 0, 1, 2, 3, 10, 20,
30, 100, 1000 may be ECV's. but 11, 33, 331, 157 and 202 may not.

humbers that cannot be ECV's (i.a. numbers having more than one nonzero decimal
position) are considered as compositions of BCV‘s. For example. 11 is considered a
composition of the ECV‘s 10 and 1. Each requisite corresponds to one set of ECV's
that are called proper ECV's. tech proper 20? corresponds to a specific text from
the system thesaurus. A coded requisite can assume only those values that are pro-
per ECV's or are compositions of its proper ECV's. Valid values of coded
requisites are determined again by using validity limits;

d) entry of a value.of a specific requisite determined by a terminal operator
(entry function). "hen the indicated requisite has already been assigned a value,
the system issues a warning message and displays the value (if there is no protec-
tion from unauthorized reading) before asking a question on the new value. This
program function in many respects is similar to the preceding;

e) compilation of automatic diagnostic evaluation of patient status. This program
function is declared by including the suitable element in the appropriate question-
naire (AHPQ TYPE-SET). It is used to analyse the values of a set of digital requi-
sites (requisites-arguments) and select one requisite. called the requisite-function.
The requisite-function must have the functional designation "diagnosis SAHPO," be

97
FOR OFFICIAL USE ONLY
I'UK UI'MLIAI. USE ONLY

coded end heve only two velid veluee: 1 nsens the petient hes the corresponding
illness, end 0 neens he does not.

f) conpilstion of petient stetus report (report function). This progren function
is used by the operetor to request the system compile e petient ststus report. In
requesting the report. the operstor cen define whet requisites (with essigned
velue, without en essigned velue, Outside normel limits. with normel veluee) end
whet groups of requisites ere to be included in the report. The following groups
of requisites cen be nemed: identificetion, enemnesis, interpretetion. leboretory,
physiologicsl tests, SAMPO diegnosis, physicien'e diegnoeis. The report cen be
sent to e specific terminel or the nsme of the externel subscriber PRINT cen be
used (which is most often e siphentmseric printer);

8) deletion of petient dete end storege of it in en erchive file on msgnet'ic tepe.
This progrsm function deletes e record in the mein file, keeping in the process the
ecculluleted dete, entirely for the TAP! function end pertielly for the NC function.

Besides these besic functions. the am system performs certein speciel functions:
it uses SUI? fecilitiss to limit eccess to certein progrem functions, provides pro-
tection for reeding end writing of individuel requisites end questionneires (used
by the conversstion function), msinteins identificetion of the originetor of cer-
tein requisites (stores the initiele of the terminel operetor thet entered these
requisites), end uses csrtein internel SUI? nechenisms. for exemple eutometic .tc
of e function end eutomstic output of dete eccumuleted to e given terminel.

Fig. l is e simplified diegren of the opereting environment of the SAHPO PPP. The
dete bese of the SAHPO pecksgs. determines the structure end composition of dete
needed to execute the verious progrem functions in the system end elso their inter-
nel orgenizetion. The dete b'sse includes files (dete sets) needed for 8W0 peckege
functioning end fecilitiss to describe the eekoup end structure of dete in the
files (tebles).

SAHPO dete files ere per: of the overell system of files supported by the 8011’
peckege. M 8090 files ere included in the SUIP- file meneguent teble: the
mein file. MAIN!!!" end the text file, TEXTFIL.

The SWO systems progremer hes eveilsble lsnguege fecilitiss (Inscro instructions)
to generete the so-celleu 'distributing tebls thet describes the nekeup end physical
structure of dete in the mein file. The distributing tsble is defined in 801? es
en epplicstions progrem stored in the reelotims progrem librery. Wen needed, it is
loeded into nein storege by using the 5011’ new instruction FQUPC TYPE-LOAD.

Eech record in the min file (except e "zero record") cen be used by the system to
keep dete psrteining to e treeted petient. Records ere formed .end releesed dynui-
celly. The zero record conteins infomtion es to which records ere being used end
which ere free. The mein file hes the direct orgenizetion with unblocked fixed-
lsngth records. which is selected by the SAHPO systems progreteeer.

Ordinery records in the mein file include fields thet ere the individuel requisites.

98
FOR OFHCIAL USE ONLY
FOR OFFICIAL USE ONLY

. U10” {-6.361va mm

(5) nm cmm

    

Eu. 1. 8M0 peckese operetln; envlronnent

Key: *
1. SUI? llbrery 8. nor 8531.!e1
2. SAMPO dete beee 9. [as [Wanton unknown]
3. Yes-7033 10. ms («pen-ton unknown]
lo. SAMPO erchlvee 11. 1201' 7925
S. SAHPO ternlnele 12. Ye3o7l86 or Yes-7187
6. Yes-8501 13. Sun
7. IA [telegreph epperetue] llo. mm

Hg. 2 ehove the forget, etructure end arsenlzetlon of record N, vhere N - l, 2,
.... the nunber of recorde (of petlente) 1n the eeln file, end eleo the requlelte
ﬁeld Bx, where X . 1, 2. .... H. end M to the number of requleltee. The record

not be long enough to hold ell the requleltee deﬁned In the dietrlbutln; teble
for e min file record.

The dletrlhutlng teble (£13. 3) contelne lnforeetlon on the tnltlel leuth, type.
tunctlon end other ouch ettrlbutee of eech fleld ln Min tile recorde. Thle teble
lo compiled by uelns e epeclel 'Inecro lnetructlon, end le enabled end pleced ln
the reel tlee SUI? lthrery. Bach ﬁlled ln e eeln ﬁle record to deecrlbed by ueln;
en elght-byte eleeent. the etructure of whlch Le ehoun to £13. 3.

‘lhe text ﬁle 1e the generel eyeten theeeurue. It holde the deelgnetlone of ell

requleltee end elecentery coded veluee (ECV'e) end the latte for velld end nomel
dultel regulates;

FOR OFFICIAL [BE ONIJY
RECORD ll FORMAT
column: ”mum N

00”“? nougaamnn 9,

‘2’ mum

:msgxoparator tnltiala

 
   

Pig. 2. Structura of main £11. record

Rev:
1. raqutalta um 8x format 3. raqututa data
2.

BS! [axpanalon unknown]

//////////

am BLOCK
WM' no; (woman)

    
      

3m
Wmegsmam n "1
FOR OFFICIAL USE ONLY

All information in the text file can be repeatedly duplicated by using various
"styles.” Here a style is possible mode of operation with the SAHPO system, i.e
operation of the system simultaneously in several languages, use of various forms
for asking questions, etc. A style identifier has two bytes.

The text file has the index-sequential organization. Records are blocked and fixed-
length. A logical record has 88 bytes: 7 bytes for the key and 81 bytes for data.
The key takes up the first seven bytes of the logical record. The structure of the
key and data in the text file logical record is shown in fig. 6.

The text file may contain records of various styles. For example, one style may be
used for asking questions and another for compiling a report. Various styles can
also be used when the system must operate in several languages. The main
(standard) style is style A.

The text file is created in the batched processing mode (autonomously of SUI?) by
using a special program. Two input cards are required for each text file record:
a card describing the record key, and a card containing teh data.

The punched card describing the key has special syntax and must precede the punched
card with the data.

SAHPO includes facilities operating in real time for making corrections to the text
file. Used for this are four transactions that implement the following functions:
add a new record to the text file, delete a record, replace a record and change a
record.

All the SAHPO functions discussed have been implemented as $012 transactions. Thus.
the SAHPO operator uses a relatively elementary and convenient command language to
make requests to the system. Also, the SAMPO systems programmer has program
facilities. Thus, the data base offers great conveniences in implementing all
program functions and expanding the SAMPO system.

The data base is noted for its universality and flexible structure. Formal replace-
ment of the contents of data in the data base (files and dsitributing table) and
keeping the same structure permits using it not only in public health. but also in
other fields. The software package is delivered in source code; therefore, the
programs can be easily modified.

COPYRIGRT: Irdatel'stvo "Pinansy i statistika", 1981

8545 .
680: 8166/0138

101
FORIOFFNJA1.USB(HVLY
WK OFFICIAL USE ONLY

DATA ACQUISITION AND PROCESSDB SYSTDI FOR 088! (MS INDUSTRY

Moecov 'VYCIISLITBL'NAYA mm SOTSIALISTIWIKH W in Rueeian No 9, 1981
(eigned to preee 21 May 81) pp 133-138

[Article by N. Holetr, engineer, Hungarian People'e Republic]

[Text] Cloee cooperation in developing eoftvare for the res-1010 computer, eepecio
ally in developing and improving application eoftvare packagee, hee been eateb-
liahed between the Videoton plant and the Inetitute for Organization and Computer
Technology in Metallurgy and Machine Building. A apecific achievement from this
cooperation ie the information eyetem for the USSR hinietry of the Gee Induatry
that providea on-line and etetietical information on the production, uee and
export-import of gee. Tbchnicel requiremente for the ayatem were defined by
apecialiate in the USSR Hiniatry of the Gee Induatry (Hingarproa).

Teak Deecription. The eyeten for acquisition and querying of gee information
hee two functional parte.

The diapetch part providee for acquieition, atorage and proceeeing of on-line and
daily production data, and for praeenting entry and calculated data on dieplaye and
printere. Thie infornation ie ueed primarily to prepare gee production and dia-
tribution reporte. Date ie acquired daily and repeatedly (a maximum of 12 tines

a day at thie etage) from remote terminale operating eynchronouely with a central
computer.

The noet important diepetch data are the preeeure at certain pointe in the pipeline,
temperature and flow rate of the gee, data on conditione of the compreeeor etatione,
and periodic production indicatore from gaa production eitee.

The counerciel part providaa data on gee production, diatribution and uee for rela-
tively long periode (a day, 10 daye, a month. quarter; half-year and a year).
Thie information makee it poeeible to evaluate the operation of the gee induetry

and compare plan data to actual. Thue, the ayeten pronotee reieing develepment
according to plan of gee production and dietribution.

Syatem Requiramante. In the etatenant of the problem, the Soviet cpecialiata de-
ecribed in detail the content of the eyetem input naeeagee, queriee, and principlea
of operation. The ayatem hee to eupport reception of data arriving from 10 remote
information atatione, periodic proceeaing of it (every hour), continual capability
of querying data on the 12 dieplaye or printere connected to theae diapleye, and
continuing aanagenent of the daily log of eyetam operation.

102
FOIIOFIHCIAI.USE(NVEY
FOR OFFICIAL USE ONLY

Messages on the display screens are called "standard items." This means that the
system must display on the screen the data according to previously specified algori-
thms. The display operator does not have the capability of specifying a new algo-
rithm. he can only select from those existing and list, restart or terminate

data queries. -

Hardware. hardware requirements were based on two Yes-1010 computers (fig. 1) with
a storage capacity of 64K bytes each and with an identical set of peripherals: one
fixed-head magentic disk storage unit, two replaceable magentic disk storage units,
one printer, a paper tape station and a general-purpose interface for data transfer.

In the initial state, 10 synchronous terminals are connected to one computer
through the interface, and 12 asynchronous terminals are connected by modems to the
other one. ‘lhe cepebility for expanding the set of terminals had to be provided
in developing the software system.

Principles of Solution. Designing the software system involved solving two groups
of problems. The requirements on operation and reliability are important for system
functioning. Use of the system oeprating in real time is largely a function of re-
sponse time, i.e. the time that elapses from data query time to answer time.

Storage of a large amount of data is possible only on packs of disks with movable
heads. the access time of which is relatively long. Design of data placement
largely depends on the mount of data. “hen the entire system is fully used, the
average amount of data collected per day during the 12 polling cycles is about 2“
bytes. Synchronous lines for data transmission under noise conditions can operate
at the rate of 600 bits/sec. Theoretically, this requires 1. minutes for each line
in each cycle. However, the work done by an operator on a terminal also has to be
considered (for example, replacement of reels, paper tape, etc.). Iherefore, the
full time of one reception is about 10 to 15 minutes.

Because the processing programs can service several files at the same time, their
operation can be considerably speeded up by placing the data to be processed and
that already processed on separate disk units. In this case, the time for search-
ing on disks and thereby the program run time can be reduced. The expected run
time. considering the data base sizes (defined as about 5!! bytes), is about 15 to
20 minutes. During processing, the data base contains partially updated data, but
the capability of querying it is provided.

There are two forms of data representation in the system. With the first, data does
not need conversion and response tiemis about 1 second. ﬂith the second, data can
be put out to the screen only after conversion. It is very important that the data
conversion time be short. It is advisable to use separate storage units to hold
the data base and the file of responses being generated. Therefore, the contents
of two disk units are divided. The BASIS pack holds the data files, and the
TRANSIT pack holds the input messages and responses formed earlier and during
queries. As a function of the contents and amount of data. the time for forming
responses is S to 15 seconds.

The second. but no less important, group of problems is the development of software
and hardware solutions that promote the flexibility of programming and reducing pro-
gram debugging time. The problem is solved on the basis of a monitor for multitask

103
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

« III-ml
m
- mmm

mm mm
M

Yes-3m neutron mount» 1
-rocessor processor 1

—/‘e-- centre . cena OOQJ ‘-
w % armature “fungus“ a E

Fig. 1. Composition of hardware for the USSR gas industry information system

processing which enables solving simultaneously up to 96 user tasks. For this it is
sufficient that the displays and synchronous terminals be served by independent pro-
grass, and that complex calculations can be divided into partial tasks and that
final results of the calculations can be derived by linking these partial tasks.

Because of this system structure, for example, there is no problmn in controlling
the programs that service the several displays and synchronous terminals, because
this is done by the monitor. By considering certain general instructions for pro-
grmers, programs can be written and debugged individually, as if the system had
no other elements. Flexibility of programs is enabled by the macro assembler.

Its value is that definitions comeon to the various programs (for example, structure
of files, distribution of tasks, etc.) are defined in one place; thus, changes
needed for programs already prepared require only retranslation of the source text.
Standard modules (for example error messages) have been created to facilitate the
work of the progrmere.

Task Solution. From the viewpoint of functions performed, the gas industry informa-
tion system can be divided into three subsystems: acquisition, processing and
querying of data. The same program is run on both computers. The composition of
terminals can be identical, thanks to which the nunber of terminals in use can be

doubled. Pig. 2 shove a diagras of the operation of the programs, and the data
stream of one computer.

The data acquisition subsystem transfers data between the synchronous terminals and
the TRANSIT magnetic disk. Data acquisition may be initiated by a synchronous ter-
minal operator. Hessage entry is performed by the program serving the synchronous
line. This program stores the message on a minidisk, which in case of erroneous or
damaged messages does not require deletion of them. At the use time, because of
its rapid operation, messages arriving simultaneously can be received.

10h
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

  

query subsyste-

Mar-um!
mm»

 
 
  

data acquisition subsystem
”chums/u cups

deans: II’ \\
1’ \\
I
/’ data processing
/
,” wezystguhmn
I heaven:
’I
.”

Pig. 2. Structure of information system for Ministry of Gas Industry
1. service of synchronous lines 8. service of asynchronous lines
2. entry into Yes-1010 9. cos-lend analyzer
3. Yes-1010 output 10. response generator
lo. message analyzer ll. canercisl processing
5. archives 12. progress for printing lists
6. maintenance of tiles on fixed-heed l3. printer

disk lb. dispatch processing
7. eaintenance of files on removable

am [left, man peck; right uszs "’ ““ ‘1‘”

pack, data base] 4-- - . logical link between programs

The entered couplets message is repeated syntactically by one task con-Ion to the
synchronous terminals. In event or an error, the message read together with notes
of errors is returned by the line operator. The letter sends this message back to
the data source. When there is no error, he provides for message storage on the
MSIT disk; in the process, the line operator can receive a new message. After
placing the message for storage, the operator sends the message to the TRANSIT disk
of the other computer through the "coeputer-coaputer” task. The message, arriving
from one coeputer to the other, is checked syntactically; therefore, it can be sent
for storage right away.

105
I703 OFFICIAL [SE ONLY
FOR OFFICIAL USE ONLY

Programs in the processing subsystem are started directly by the central computer
operator at the end of the data acquisition period. While processing messages
coming in, the programs update the data bass and prepare the data files for query.

The query subsystem is always ready for work; it is activated by dispatchers from
the asynchronous terminals by using commands that cell date to the displays. The
command read is checked syntactically by the system. Any error message is sent
back to the display. when no errors are detected, the response "Reedy" is sent
immediately end after the program run, a response is generated end displayed on
the screen. After displaying the response, the terminal awaits a new query.

Conclusion. The software system developed meets the parameters specified earlier.
Expension is provided for. All capabilities of the monitor (96 tasks) are not yet
exhausted. After expanding the system with terminals (to 18 synchronous and 2h
asynchronous), another 32 programs can be included in the system.

For system functioning, it is disadvantageous to have all the hardware being fully
utilized, since if a disk unit goes down, the given system configuration could
operate only by reducing the number of functions performed. Joint operation of
two computers is possible also in this case.

Ihe software system developed has special and cammuielements that are easily
separated from each other. After replacing special with corresponding cannon
elesents, the system can be used, for example, to service rail ticket booths,
hotel reservations, to monitor production processes and in other areas where

rapid information service is needed.

COPYRIGRT: Izdatel'stvo “Finansy i statistika", 1981

8545
C80: 8164/0138

106
FOR OFFKJA1.USE(NVLY
FOR‘OFFICLII.I£§EIMNLY

ACQUISITION OF DATA ON COMPUTER BARDUARB OPEUAIION IN GERMAN DEMOCRATIC REPUBLIC

Moscow vycuxstmvnnu 1'3qu sorsmrsncursxtim 5mm in Russian No 9, 1981
(signed to press 21 May 81) pp 1&9-154

[Article by E. Hanisch, engineer, German Democratic Republic]

[Text] In ensuring product quality, a large role is played by the evaluation of the
entire set of date on the products. However, its is easy to analyze product quality
at the development and production stage, but acquisition and evaluation of data on
product performance during operation entails considerable difficulties. This is
because products at the using site are not always serviced and monitored by the '
manufacturer. Consequently, the user must take part in acquiring data on product
performance during operation. The need to acquire such data is especially nepor-
tant in the case of costly and high-performance computer hardware, since the manu-
facturer obtains the capability of taking suitable steps and thereby avoiding large
losses when there is deviation between actual and planned reliability indicators.

Results of acquisition of date on product performance during operation basically can
be used in the following areas:

to define achieved indicators of product reliability during operation to confirm
planned reliability of a given product, to derive reliability indicators being
planned for new and updated products, to solve general guarantee problems and to
confirm or reject user claims during the guarantee period;

to study typical malfunctions to take suitable steps to ensure and enhance product
reliability and to improve the design, technology and production of new and
updated products;

to plan for the supply of spares;

to evaluate the efficiency and quality of raintenence; and

to compile optimal_prccedures for maintaining products in good working order.

In connection with such broad capabilities for making use of this data, manufactur-
ers often request a very large emcunt of information from the user on their products.
As a rule, this leads to making excessive demands on the user and as a result, to
failure. However, if the amount of data is limited. costs for generalizing the

data by the manufacturer are reduced, and with suitable organizational measures,

the information feedback system can be adjusted.

An information feedback system used for hardware, computers in particular, has been
operating in the German Democratic Republic since 1975. Experience gained in this
time confirms this method is justified in practice. Success is due primarily to

107
FOI.0FIWC1Al.lEﬂ!(HVLY
I'UK Ul'ﬂLMI. USE. ONLY

the following reasons:

maximum consideration for user interests, in particular in the design of forms;
creation of a data collection form that compels the information provider to fill
out the form right at the time theeventoccurs;

use of existing organizational forms;

acquisition of local information only in the amount needed so as to limit
acqusition costs;

providing checks to limit the amount of erroneous data.

Computer hardware is very complex; therefore, full collection of precise data is
very difficult. It turned out that it is expedient to gather local data on two
separate forms, especially with regard to the classification of local data pro-
viders (operator, engineer) at a computer center. So we use the computer log form
(fig. 1) and the malfunction accounting form (fig. 2) with an attached accompanying
card for an assembly when it is replaced. These forms basically meet the recom-
mendations for use within the Unified System of Computers, but in content they were
designed specially for use in the GDR. The computer operator fills in the log form.
It is used to gather chronologically data on all operations, on all productive and
nonproductive periods and on all events that occur. Thus, the data in the log not

only defines the reliability indicators, but is used by the user for his own
accounting.

Information on failures (analysis, cause, elimination and location of failure) is
recorded by engineers on a malfunction accounting form. The data on both forms
supplement each other and thus the capability is provided for checking missing data.

in contrast to the usual collection systems, in our system the user compiles a so-
called monthly report based on the computer log. Contained in it are information
on the installation configuration and generalized information for determining the
indicators for the reliability of the installation and the individual hardware.
Generalization of the computer log data and compilation of the monthly report have
to be done by the user, because it is not possible to generalize and evaluate cen-
trally the entire amount of computer log data generated by all users at the manu-
fecturing plant. This method also has the advantage that incorrect and missing
data in the computer log can be corrected and supplemented by the user. In the
case of centralized evaluation of local data at the manufacturing plants. correction
of the forms is not possible or the possibility of correction entails large costs.

Feedback is organised as follows. At prescribed schedules, the user sends the mal-
function accounting forms and the monthly report to the competent agency for main-
tenance at the manufacturing plant. The maintenance agency checks the collected
forms for completeness and accuracy of data and makes corrections when necessary.
Also, an evaluation of the data is made with regard to the specific user conditions;
when necessary, instructions are sent to maintenance teams on steps to take to en-
sure reliability. The monthly reports are forwarded to maintenance agenzies at a
centralized manufacturing center for further reduction of the data and evaluation
of it. Management decisions are made according to the results. Then, after suit-
able preparation, information on operating reliability achieved is sent to manage-
ment staffs, development plants, unit manufacturers, foreign trade agencies and

the Coordination Center for the Intergovernmental commission on Cooperation among
the Socialist Countries in Computer Tbchnology.

108
FINIOFFKJAI.USE(M'LY

P13. 2. unltunctton accounting for.

and botto. rout]

tart. and
tart, ond

12.
13.

1b.
15.

16.
17.

18.
19.
20.

21.

to clue of ulfunctton 22,

non

typo of ulfuncttc
can. of ultuncti
location of ulfut
use-b1,

1'32 [card]
clement:

title

typo .
method of ell-inn
description of no]
code

downu-o; hon". l
the loot due to:
lack of ZIP [kit c
ccccsaorico]
special!“ call; 1
FOR OFFICIAL USE ONLY

View of forms end bets l'esks
near humans 1: lama ' Mm

    
 
 
 
 

Fill out forms correctly

Compile monthly report

Send out monthly report end msliunction
sccountin; forms on schedule

  
 
  
   
 

_-. v ...__. _.__

Cheat for srrifrsl end correctness of forms

Eveluste with regsrd.to specifics of
individusl users end teke steps

Reduce mslfunction sccounti'n; form dsts

by “sin: sou-putt! .

Collectsll iniomtion
Reduce information
Send out results

hp. 3. Orasniution of system for monitoring product periorusnce end ieedheck
iniormetion in the Gemsn Democrstic “public

    

Key!

1. Mh [computer log form] ll. Robotron msintensnce brsnch

2. DUI! [melfunction sccountin; form] 5. d'ste collection center st Robotron

3. monthly report NP [scientific production] combine

rm rm rd
yesr
fig. 6. Incresse in Ye8o1060 system fig. 5. Incresse in mesn time to Esilure
svsilsbility tsctor of Yes-2660 csntrsl processor

Dsts from the mslfunction eccounting forms is condensed by using s computer er the
msnufscturcr's dsts center end printed out. The reports sre sent to the device
developers end msnuiscturers end to the nsintensnce egeocy for feilure csuse
snslysis (tip. 3).

The dsts in the monthly reports end msliunction sccountin; forms provide the cep-
sbility of melting numerous svslustions. Let us list just those spplied in the 60!:
monthly sccount of relisbility indicstors schiev‘ea for individusl ins'tslletions

111
m omcm. Us: ONLY
ttﬂtlﬂﬂﬂLJAl.US£(HVLV

(with divieion by ueere) within the guarantee period to check the indicatore
atipulated in the warranty;

generalization of monthly reporte compiled by uaere for calculating reliability
indicatore for inetellatione and individual devicea to confirm a specific reliabil-
ity. end the calculation ia made from different pointe of view, for example for
varioue reporting perioda (month, quarter, half-year, year, period with a change in
deeign and technology, etc.), by different inetellation eitea (export computer,
domeetic computer); _

wneideretion of the main direction in the development of efforte to improve
quality;

analyaie of the cauaea of failuree of the cane type of devicea.

The method, ueed in the GDP. in recent yeare, to collect data on the operation of
devicee hee become a tool to exert a continual effect on improving product quality
and reliability. In contracta made, the ueer eaauee the obligation of taking
part in thia effort, which ie a prerequieite for maintaining the warranty.

In the GDR, all Unified System computera are eubject to continual checking within
the warranty period, and eomc '.imee even after it expirea. Information is gathered
on the operating performance of all export computera, in particular thoea from the
USSR. in accordance with contract conditione.

Since the day the eyetem wee introduced, much practical date hae been gathered on
product operating performance. Aa a reeult, the capability hae emerged of con-
cretely determining the development of efforte on improving product quality and
of evaluating the effectiveneee of etepe taken to raiea quality. The effect of
the feedback eyetem fundamentally dependa on the type, quantity and uae of
reaulte for aolving theoretical problema of reliability and for commercial pur-
poeee, etc., and a coneiderable effect ie due to the continuoue monitoring of the
maintenance of the planned reliability. Compariaon of indicatore achieved with
thoee planned makee it poeaible to timely and directly affect the quality and
reliability of inetellatione where planned indicatore have not been reached.

The effectiveneee of all etepe taken enaurea a continual increaee in product
quality and etability of reliability. The data on the Yes-1060 inatallation
availability factor and the yes-2640 CPU mean time to failure (fige. 4, 5) can be
cited an an example.

COPYRIGHT: Irdatel'etvo "Iinaney i atetietika", 1981

8565
C80: 8144/0138

112
FOR OFFICIAL USE ONLY
FOR OFFICIAL USE ONLY

m SHALL mm mm W cm DWIC IZPIIBLIC

lbecow wcuzsum'mu 1mm“ sorsmzs'nmsxm arm: in Marian lo 9, 1981 -
(0131106 to preec 21 Hey 81) pp 155-161 -

[Article by K. Leidler, engineer, Ger-an Denocratic Republic]

[Text] The 811.1626 nicroconputer (Iobotron K-lSlO) ie an eight-bit, low-through-
put computer for hendlin; couputational, teetina and control tube. It feeturee:
deoisn and functionel modularity and flexibility, i.e. the capability of being
need within other equipment, low power conounption, high CPU reliability end
cull dinenaionc. '

Becauee of theee proportion, the computer ia ueed primarily an a nodule in auto-e-
tic deviceo (neaeurins, reguletins, control and touting), laboratory devicee in
tact bade, and in teleproceoeing' device'e.

The eluent bue in the nicroproceuor are 1.81 circuitry for the aritlnatic end
logic unit with mos technology and additional. 111. elaente with uediu acele in-
tepation.

Central proceuor epeciticatione:

width, bite 8
inetruction execution tine, nicroeec. 12.5 . . . 106.0 (20,000 operation/rec.)
proceaoor cycle, nicroeec. 6.17
data foruat, byte 1
inetruction for-ct, bytea l, 2, 3
nuber of baeic inatructione 68
size of addreoeable eree, K bytea 16K
eddreeeing direct logging, direct storage, indirect
etorege, inediete
IIO eddreee aree 16 eddreeeee for input area, ‘8 for output
interrupt eyeten one interrupt level, nerked; .
. eight prop—able interrupt eublevele

etorese: nain _ ll bytee, 1.8!

30“ 2X bytea, 1.81

The bettery nodule pernite retention of deta in nein etorege when'pover io
interrupted.

113
NE OFFICIAL 083 ONLY
FOR OFFICIAL USE ONLY

The Sill-1621‘ computer connon bus is divided structurally into long and short. Con-
nected to the short bus are the CPU, supplement to the CPU and devices for inter-
face to the control console, and the PROM programing unit. To the long bus, one
can arbitrarily connect storage TEZ 'chrds] and interface units that implement
standard or special interfaces.

One can also connect a clock and 1/0 units for digital data for 16 signals.

The 814-1626 microcomputer is a nodular unit with a width of “0 m for mounting
in racks meeting the recosnendations of the Riﬂe [expansion unknown].

The module holds a maximum of twenty 135 x 170 an cards. ‘lhe microcomputer bus
is made in the form of a printed circuit board on a response panel.

The computer software has several components. To prepare programs. there is the
CROSS assembler for the Robotron (0000 family of smell computers. lhere are also
system programs to diagnose errors, programs for programing the PROM end
utilities for preparing special programs in special operating cases.

 

Fig. 1. SH-1626 microcomputer

The Ski-1626 microeonputer (Robotron K-lSZO) is an eight-bit nicrocouputer (fig. 1)
with a higher scale of integration and higher throughput then the 814-1626 model.
Ihe Ski-1626 microcomputer is used for automating control of production. eutouation

of tests, in laboratory complexes in systems for processing information for
scientific and technical and economic tasks of control and checking.

Cards may be in any place in the central processor bus. For small tasks, one card
with the central processor without a computer bus is sufficient. The element base

for the microprocessor is L8! circuitry for the arithsetic and logic unit with
"NOS technology.

11h
1m current. use any
FOR OFFICIAL USE ONLY

CPU specif ications:

width, bits 8
instruction execution time, microsec. 1.6 . . . 9.2
system step, as ' 607
data format, bytes 1, 2
instruction format. bytes 1. 2, 3, lo
nuber of basic instructions 158
size of addressable area, bytes 66! (can be expanded to 128! bytes)
IIO address area 256 input addresses; 256 output addresses
interrupt system masked interruption; umasked interruption
control in wait mode available
level of externsleignale meets 111. level
storage: main ' .- ‘ 1K bytes, 1.8!. ms technology
30!! 1! bytes, 1.81, ROS technology

counter and time-of-day clock (OTC): ’

mode of operation counter and time-of-day clock are set by

program -

nusher of channels lo
parallel I/O (P10):

umber of channels 2 bidirectional channels of interface

(lb bite)

nuber of modes of operation lo
multiprocessor system: -

nmber of computers joined 1 main and 3 subordinate

maximum data transfer rate, bytes/s 30K

The structure of the K4520 microcomputer is the maximal configuration that can be
reduced to one central processor without a bus, placed on a printed circuit board
together with an additional maximi- of loll bytes of storage. The control console
is used as an additional means for using the cuputer as an open module during
start-up for oepration, maintenance and searching for errors and when testing

programs .

The computer functional units are placed on 215 x 170 - cards and can be
assembled. in the form of an open module. The microprocessor bus is made in the
form of a printed circuit board on the rear panel.

Software for this microcomputer includes a macro_assemhler. To solve user proh-
lmss, there are e masher of standard modules. for ewple 1/0 modules, srithatic
end converting modules and the standard mathematical functions. There are com-
pilers for the higher programing languages: CDL, M810 and 00301..

There are different operating systaa for the areas of application listed above.

The SDI-6307 (Bobotron 1154) alphanueric printer is a multipurpose device for out-
put of date in the form of nuhers, letters and special characters that operates
with the single-digit mosaic printing principle. The device (fig. 2) is used mani-
ly in media-size data processing systems as a device for data collection and
office mechanization, a device for output of measuring data, and in terminals and
other general-purpose date 1/0 units.

115
uncommon“
I'UR UI'IILIAL USE. UNLI

 

Fig. 2. 8H—6307 alphanuneric printer

Specifications:

printing rate. cps 25 in start-stop node; 65 in continuous
mode

number of characters per line 132

character pattern 7 x 5; expansion to 10 x 5 is possible

number of characters 64 (96)

space between characters. II 2.54

space between lines, an 6.23

width of print roller, an 385

number of print copies 3 . . . 5

paper feed technique roll paper feed (automatic pulling of
edges, manual setting of form, one linefeed
for roll paper, n linefeed for perforated
paper)

ink ribbon width 13 In, capable of black and red
printing

main voltage 220V + 101

- 151
main frequency 50 Hz + 1
power consumption about 130 VA

The SH-6307 printer contains electronic equipment, power supply, carriage with con-
trol, step motor, paper feed unit and ink ribbon transport unit.

The printer can be delivered as a apearate unit for installation in existing
equipment or as a table-top nodal with its own housing. Dinensions of the table
model with the paper feed unit are 744 x 475 x 210 In.

116
me omcw. use ONLY
Fig. 3. 91-6903 mark raadar with

The 91-6903 hark reader (Robotron 1375) ia a atmdalona programahla alactronic
unit for data acquisition (fig. 3). ma devi

electronic reading of marina. 1m. method pe
text charactara. when the sou

mark the poaitiona that mat ba road and con

quantity of data ia encountered that in
diatinsuiahad by aixaplicity in coding. Thia raculta

in aavinga of raaourcea and
manpower and data in rapidly prepared on media.
Spec ificationa:
tranaport rate . 600 Ila/a
read rate 2000 . . . woo torus/hr
atorage and control unit modification of the K4510 microcomputer
data output Yes-5091 caaaatta tapa recorder
main voltage 220V o 101
, - 15 1
power conaunption 340 VA
fora aiza 99 x 168 . . . 210 x 304.8 In
apacc betwaan rota variabla, minimal of 5 In
Ipaca batwean colunna 8 In
Iarkar aize about 0.5 x 5 a-

pencil, black ball point pen, black print
Iata media magnatic caaaetta. 301A [Europaan Computer
lbnufacturera Aaaociation] 36, 0.15 inch

117
POI 0mm us: ONLY
rm W'ILML oar. UNI-I

recording method K01 [information interchange codel-‘l‘s 97/3
11/35 or 30“ 34
recorded code ROI-7 or BC!“ 6

a complete checking system is provided systen hardware checking (nssnetic tape
to ensure reliability and checking of error, read unit, powerinterruption);
dsta torus check (odd marking. skew of for-s,
row error);
progras facilities check (check of field
dependence, check of positions, check of
check nubere. internal checks).

The unit is supplied in two ways: hard progrllsed version (basic unit) and a pro-
gran-able version (basic unit with exp'dnded storage), Both types can he equipped
with the sutonstic for-s feed and sorter. m. nerk reader is a table node]. and con-
sists of the read unit and transport. electrical portion, storage unit (Yes-5091
cassette tape recorder) and tnble.

Data nay slso be output on perforated tspe using ROI-7 code. The perforstor is
positioned sepsrately.

COPYRIGHT: Isdatel'stvo "Pinsnsy i statistika", 1981

8565
080: 81104 [0138

118
POI OFFICIAL USE ONLY
FOROFFICIALUSEONLY

FOL/600 “60311111410 W016!

bacon WCHISLI‘I'IL'MYA 13mm SOTSIALISTICHIBIIKH 8M in Iranian No 9, 19.1
(eigned to preae 21 May 81) pp 161-165

[Article by A. Alekeendrov and R. Yefrenova, both enginaare,- and 21.
Alekeandrowa, candidate of engineering aciance, all tron People'e Republic of
bulgaria]

[Tent] FOL/600 ie a aubaet of the PLII algoritl-ic language. The “PL/600 coepiler,
developed ea a croee-coepiler, operatea with the Unified Syetee of Conputere. 'lhe
“M“ couputer configuration required for the colpiler ia: the res-2020 CPU,
100R bytee of main atorage, the Ye8o5052 or Yea-$062 diak atorage unit, the Yes-7031
printer, the Yes-6012 card reader and the Yes-$012 tape drive.

The coepiler coneiate of an abeolute nodule cataloged in the abaoluta nodule li-
brary (SYSCLB) and a eat of aubroutinee cataloged in the H-eublibrary of the aource
atatenent library (SYSSLB). 'lhe conpilar ia written in FORM. Coapiler epaed ie
aatiafactory: 500 NFL/600 etateeenta ere proceeded in about 20 einutea on a Yes-
1020 computer.

ll’Ll600 featurea and Capabilitiea. In HPLI600 aource progra- ia a aeriee of atate-
nente eta-piled according to the language ayntactic rulea. hiring coepilation, the
compiler anclyzea the aource progra- atateeente and tranalatea then into the
Assembler language for the 814-600, called an object program. 1hia program can be
tranelated by uaing the Aaeenbler in the 94-600 haily of nicroproceeaore and
executed on a nicroproceeaor eyetan. The “PL/600 coopiler detecta ayntactic errora
in the aource program and pute out the appropriate neeaegee, after which an equiva-
lent group of 814-600 enabler inetructione ia generated for each etatenent.

Source prograa atatanente nuat be punched on carda in colt-1a 1 to 72. If the
atatanent doaa not fit on one card, it can be continued on aucceaaive carde, except
real conatanta. mltipla blanka are ignored by the conpiler. llanka in literal
data are preaerwed. logic etatoenta and relational operationa nuat be encloaed by
two blanka. Each Elm/600 atateeent may have a label. A label has no nore than eix
charactere, and the first uuet be a letter. Conante may be included at will in
the progren for axplanationa.

The compiler providee the capability of including in the aource progra- groupa of
atatenenta written in Ma-bler for the 831-600. Bach etateeent of thie type auet
have a 8 in colt-II 1. Each EFL/600 etatuent perform one of the following

119
FOR OFFICIAL us: ONLY
FUKIDFFKJAI.USE:0NLN

functions: specifies characteristics of source program and type of data with

which the compiler operates, and causes execution of specified operations. NFL/600
statements are usually compiled from key words that are used together with basic
elements in the language: constants, variables and expressions. Key words may not
be used as labels. There are several basic groups of “PL/600 statements.

Arithmetic statements provide the capability of executing arithmetic operations
and replacing the current value cf a referenced variable by the result. The fol-
lowing arithmetic operations are permitted in the language:

SBIFT shift (arithmetic left or right)
[AND conjunction

IOR disjunction

130R modulo 2 addition

X multiplication

I division

+ addition

- subtraction.

Arithmetic statements are executable statements.

Control statements give the user the capability of controlling the execution of rue
object program. The folowing control statements are permitted:

GO TO ' unconditional branch statement
I? conditional branch statement
DO loop statement

CALL subroutine exit statement

Control statements are executable.

Declarative statements are used to describe the type and of and storage amount
needed for variables and arrays. The following data types are permitted:

BIT bit string
BINARY binary integers
DECIHAL decimal numbers
SIGNED DBCIHAL decimal number with sign
CRARACTBR character string.

All variables must be explicitly declared in the source program.

Procedural statements allow a user to define logically independent program units
that can be compiled separately or together with the main program.

The HPL/600 language provides the capability of working with three-dimensional
arrays (no more than three subscripts).

Special attention is paid to pointers, the use of which facilitates processing of
umidimensional arrays to a considerable extent.

The HPLIGOO library consists of 32 built-in subroutines, abou 100 subroutines for
operating with arrays and over 100 user subroutines.

120
FOI‘OFFKJAI.USE(NVLY
FOR OFFICIAL USE ONLY - - -

'Ihe built-in subroutines are used by the compiler in translating basic arithmetic
operations (addition, subtraction, multiplication, division, decimal arithmetic,
data conversion, etc.). The user can also call these subroutines.

Array operation subroutines are. used for basic operations with arrays: assigt-ent;
addition, subtraction, multiplication and division of all array elements by a con-
stant; member-by-member addition, subtraction, multiplication and division of two
arrays with an identical dimension, etc.

Subroutines ensure high speed with the minimal size of required main storage.
Library subroutines are called by using the CALL statement and parameters. For
example, CALL ZFSO (P, Q, N), where ZFSO is the subroutine name, P is the array of
the result, Q is the source array and N is the dimension of the arrays.

Library subroutines can be placed in permanent storags. With RAH type main
storage they are not needed. All subroutines are placed in the source statement
library (SYSSLB).in the Unified System computer, from where they are called as
needed by the compiler, which places them at the and of an object program. ‘lhey
are compiled in Assembler language for the SH-600.

Yes DOS facilities give the user the capability of cataloging his NFL/600 or
814-600 Assembler programs in the library. Each of them can cons ist of a practi-

cglly unlimited number of instructions. The maxi-um number of subroutines in a
library is 236.

NFL/600 and PL/l Differences. The differences between these two algorithmic
languages boils down to the difference in notation on the input medium, description
of data, statements and compilation facilities.

Differences in notation on the input medium:

constants must be written on one line;

a label may have no more than six characters;

the presence of consents is defined by the character ] in front of them;
a S in column 1 indicates a statement in Assembler for the Ski-600.

Differences in data description:

the FLOAT attribute is not provided for, i.e. in DICDIAL and BINARY declarations,
FIXED is implied;

the declaration DECIMAL(m, n) corresponds to PICTURB'(m-n-l)9.(n)9,

lengths of varisbles must be within the following bounds:

 

 

age of Variable m n lhit of Hessurusent
BIT 1-8 bit

BINARY 1-2 byte

macaw. 1-12 1—12 digit
CBARACTER 1-256 character

where m is the total mnber of characters and n is the number of digits after the
point.

121
FOR OFFICIAL US ONLY
I'UI UI'I'ILIAL UBI'. UNLY

Differences in stetesnnts and operations:
logic operations and compare operations must be notated as follows:

NOT negation
AND logical AND
OR logical 0R
EQ .
Fl! ._ .._ .J
GT—>;
68—);
. ,LT-<: - -
'- ‘l-Er‘; '

the SHIFT operation does not exist in PL/l;

IAND, 10R and IEOR operations are considered arithmetic operations and are executed
bit by bit;

NFL/600 has a computable GO TO statuaent;
in HPL/600, there is no DO statement with a list of values.

Differences in compilation facilities are:

in the PROCEDURE statement, one can write the name of a stack after the ettributr
MAIN;

the main procedure does not have to have a name.

As can be seen, these differences are insignificant, since programs compiled in
“PL/600 can also be translated by a PL/l compiler.

Example. The figure shows an “PL/600 program for computing the sum of elements of
an array whose values.are no more than 50. The text of the object program contains
both “PL/600 statements written as cements in Assembler for the Ski-600 and a
series of instructions in Assembler for the 91-600 generated for each statement.

Using the bin/600 algorithmic language makes it considerably easier to compile com-
plex programs for microprocessor systems oriented to the 834-600. The existing con-
venient link between "PL/600 and Assembler for the 814-600 provides for assembly of
an object program end obtaining perforated tape in machine language. The set of
library subroutines can be expended by new subroutines that are called by the CALI.
statement. The library is expanded by standard Yes DOS facilities.

122
me OFFICIAL USE ONLY
0000! 8 0" 1A" 0.
“OI! IM‘OVII ONIOUNIAIIH
- III 00

000 no: two).
0000! IICtAll s OIIII1(!)o
4!. too:
_ In. 1 -
new. 1 "Hum.
' an. t
00009 - als(1oo) IllAthﬁiz
A! . an. 100
on» tn;
4" ‘01 10:!
.sv: a
30001 oonx-s to 100:
o. :3“?
x AA .
'ooaoa I! uAscI) 6! so tutu co to l‘lf:
t0! auaa
.Lou x
as: ztar
LOIA 0.x
CI'A uvo
IL! zoo.
. 4' III"
0000' tns'nhttl):
on u: on:
- Loan 1
III (1'!
L”! 0.!
CLO.
:31.
' .0! ac:
can.
ADOA so!
noon 3 -
, sraa :
Stan so:
000:. unit: III;
at! "l|IA l
_ can one _
Ice 100’ -
i=3‘ zoo: '

. :J ... -;-
600i: - (no; lo “pad uA-nvorvnnnta .;
005 car . . . - -.
.xs :0. o

DAG!
31: .Ill c713! ... A09 to lull: 900--
out
at!
I!!! ate.
}SI ,:71 1..
'4»! 1"!
31A. lo?
I“ Md!"
' Inc loo
:1»: t0! [ac
. at:
cur -:ﬁ0 v

." n. .- ' ~ .- _- n .
, ,cqy! . . _ . . .. 1 . _ .. .u

Program in the “PL/600 language for co-puttng tho null of alt-onto
COPYRIGRT: Izdatel'atvo "Finanay 1 atattatika", 1981

£35155
080: 8164/0138 END

.....-OOOOO